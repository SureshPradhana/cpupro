v8-version,12,1,285,27,0
v8-platform,macos,macos
shared-library,/Users/romandvornov/.deno/bin/deno,0x108254000,0x10a9544b0,68321280
shared-library,/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation,0x18a14fcf0,0x18a33e094,82149376
shared-library,/usr/lib/libobjc.A.dylib,0x189d19c00,0x189d56724,82149376
shared-library,/System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal,0x18d7a5024,0x18d7dcb30,82149376
shared-library,/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation,0x18b27d2d0,0x18bb1e308,82149376
shared-library,/usr/lib/liboah.dylib,0x19696a618,0x19696fcb0,82149376
shared-library,/usr/lib/libfakelink.dylib,0x19699e468,0x19699fb80,82149376
shared-library,/usr/lib/libicucore.A.dylib,0x18d1dba8c,0x18d4293e0,82149376
shared-library,/usr/lib/libSystem.B.dylib,0x19699b4d4,0x19699baec,82149376
shared-library,/System/Library/PrivateFrameworks/SoftLinking.framework/Versions/A/SoftLinking,0x1969a0bbc,0x1969a0e50,82149376
shared-library,/usr/lib/libc++abi.dylib,0x18a094f34,0x18a0a8b74,82149376
shared-library,/usr/lib/libc++.1.dylib,0x18a007370,0x18a0685f4,82149376
shared-library,/usr/lib/system/libcache.dylib,0x1969955e0,0x196998370,82149376
shared-library,/usr/lib/system/libcommonCrypto.dylib,0x1969505e8,0x19695b9d4,82149376
shared-library,/usr/lib/system/libcompiler_rt.dylib,0x19697b980,0x19697e834,82149376
shared-library,/usr/lib/system/libcopyfile.dylib,0x19697254c,0x196978f20,82149376
shared-library,/usr/lib/system/libcorecrypto.dylib,0x189e63e40,0x189ee213c,82149376
shared-library,/usr/lib/system/libdispatch.dylib,0x189f3a2a0,0x189f76d40,82149376
shared-library,/usr/lib/system/libdyld.dylib,0x18a0f58f0,0x18a117f58,82149376
shared-library,/usr/lib/system/libkeymgr.dylib,0x19698a760,0x19698ae48,82149376
shared-library,/usr/lib/system/libmacho.dylib,0x19692a5ac,0x19692e87c,82149376
shared-library,/usr/lib/system/libquarantine.dylib,0x195ebdb44,0x195ebfb58,82149376
shared-library,/usr/lib/system/libremovefile.dylib,0x196988304,0x196989c08,82149376
shared-library,/usr/lib/system/libsystem_asl.dylib,0x18f7d23c4,0x18f7e7010,82149376
shared-library,/usr/lib/system/libsystem_blocks.dylib,0x189dfd9a8,0x189e008d8,82149376
shared-library,/usr/lib/system/libsystem_c.dylib,0x189f843b0,0x189ffa2a0,82149376
shared-library,/usr/lib/system/libsystem_collections.dylib,0x19697f87c,0x196983960,82149376
shared-library,/usr/lib/system/libsystem_configuration.dylib,0x19519a558,0x19519d708,82149376
shared-library,/usr/lib/system/libsystem_containermanager.dylib,0x194218cd4,0x19423ae80,82149376
shared-library,/usr/lib/system/libsystem_coreservices.dylib,0x1965c408c,0x1965c80d8,82149376
shared-library,/usr/lib/system/libsystem_darwin.dylib,0x18d495558,0x18d49c170,82149376
shared-library,/usr/lib/system/libsystem_darwindirectory.dylib,0x22b63ddb0,0x22b640268,82149376
shared-library,/usr/lib/system/libsystem_dnssd.dylib,0x19698bdd0,0x196991f50,82149376
shared-library,/usr/lib/system/libsystem_featureflags.dylib,0x189f80c80,0x189f82a28,82149376
shared-library,/usr/lib/system/libsystem_info.dylib,0x18a122888,0x18a1492d0,82149376
shared-library,/usr/lib/system/libsystem_m.dylib,0x1968ed240,0x196913f18,82149376
shared-library,/usr/lib/system/libsystem_malloc.dylib,0x189f03310,0x189f312a0,82149376
shared-library,/usr/lib/system/libsystem_networkextension.dylib,0x18f742504,0x18f756740,82149376
shared-library,/usr/lib/system/libsystem_notify.dylib,0x18d908110,0x18d916b40,82149376
shared-library,/usr/lib/system/libsystem_sandbox.dylib,0x19519ee5c,0x1951a2fa0,82149376
shared-library,/usr/lib/system/libsystem_secinit.dylib,0x196984acc,0x1969862c0,82149376
shared-library,/usr/lib/system/libsystem_kernel.dylib,0x18a0ad400,0x18a0dffbc,82149376
shared-library,/usr/lib/system/libsystem_platform.dylib,0x18a11aa00,0x18a120448,82149376
shared-library,/usr/lib/system/libsystem_pthread.dylib,0x18a0e7b90,0x18a0f28f0,82149376
shared-library,/usr/lib/system/libsystem_symptoms.dylib,0x1911aa6e4,0x1911b02ac,82149376
shared-library,/usr/lib/system/libsystem_trace.dylib,0x189e494b8,0x189e5fa78,82149376
shared-library,/usr/lib/system/libunwind.dylib,0x1969623e8,0x1969683c0,82149376
shared-library,/usr/lib/system/libxpc.dylib,0x189e023e0,0x189e3bea0,82149376
shared-library,/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit,0x18d826fdc,0x18d8dec18,82149376
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices,0x19df8bfc0,0x19df8bfc0,82149376
shared-library,/usr/lib/libDiagnosticMessagesClient.dylib,0x191dcee80,0x191dcfad8,82149376
shared-library,/usr/lib/libenergytrace.dylib,0x18f75c6a4,0x18f75cd28,82149376
shared-library,/usr/lib/libbsm.0.dylib,0x195ee53cc,0x195ef3d40,82149376
shared-library,/usr/lib/libz.1.dylib,0x1968dda50,0x1968e9178,82149376
shared-library,/usr/lib/system/libkxld.dylib,0x196933140,0x19694da74,82149376
shared-library,/System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork,0x18f36eed8,0x18f5f0038,82149376
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents,0x192955c88,0x19295fd80,82149376
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore,0x18d4a0adc,0x18d590760,82149376
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata,0x191e18d0c,0x191e9aaa8,82149376
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices,0x1965c9d94,0x1965f3e38,82149376
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit,0x196a7a2d8,0x196adb870,82149376
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE,0x19112cbc4,0x191190210,82149376
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices,0x18a6281d0,0x18a8241c0,82149376
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices,0x197d94c48,0x197ddbe30,82149376
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList,0x19296434c,0x192981900,82149376
shared-library,/System/Library/Frameworks/Security.framework/Versions/A/Security,0x18ce1aa18,0x18d12d8a0,82149376
shared-library,/System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration,0x18af052bc,0x18af87a90,82149376
shared-library,/usr/lib/libapple_nghttp2.dylib,0x196b1961c,0x196b2b370,82149376
shared-library,/usr/lib/libcompression.dylib,0x196b4ea40,0x196ba4700,82149376
shared-library,/usr/lib/libsqlite3.dylib,0x190dae204,0x190f478f0,82149376
shared-library,/System/Library/Frameworks/Network.framework/Versions/A/Network,0x1911b4234,0x191b37330,82149376
shared-library,/usr/lib/libCoreEntitlements.dylib,0x229da69a0,0x229db01b0,82149376
shared-library,/System/Library/PrivateFrameworks/MessageSecurity.framework/Versions/A/MessageSecurity,0x2117ca10c,0x211802058,82149376
shared-library,/System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer,0x190d9414c,0x190da62f0,82149376
shared-library,/usr/lib/libMobileGestalt.dylib,0x18f75e5c0,0x18f7b5328,82149376
shared-library,/System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression,0x1964f2e00,0x196540e4c,82149376
shared-library,/usr/lib/libcoretls.dylib,0x195ecd2d0,0x195edf3b0,82149376
shared-library,/usr/lib/libcoretls_cfhelpers.dylib,0x197e03df0,0x197e04c00,82149376
shared-library,/usr/lib/libpam.2.dylib,0x196b4886c,0x196b4bc6c,82149376
shared-library,/usr/lib/libxar.1.dylib,0x197e755bc,0x197e81778,82149376
shared-library,/System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout,0x192995570,0x1929c8990,82149376
shared-library,/System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration,0x191eb30f0,0x191eb9d28,82149376
shared-library,/usr/lib/libarchive.2.dylib,0x1969f17a0,0x196a64030,82149376
shared-library,/usr/lib/libxml2.2.dylib,0x1929df3a8,0x192aa8878,82149376
shared-library,/usr/lib/liblangid.dylib,0x1951ab1c4,0x1951abcd0,82149376
shared-library,/System/Library/Frameworks/Combine.framework/Versions/A/Combine,0x19be73cd8,0x19bf89890,82149376
shared-library,/System/Library/PrivateFrameworks/CollectionsInternal.framework/Versions/A/CollectionsInternal,0x200caef24,0x200df21f0,82149376
shared-library,/System/Library/PrivateFrameworks/ReflectionInternal.framework/Versions/A/ReflectionInternal,0x21647dbb4,0x216482950,82149376
shared-library,/System/Library/PrivateFrameworks/RuntimeInternal.framework/Versions/A/RuntimeInternal,0x216a2ad7c,0x216a39fe0,82149376
shared-library,/usr/lib/swift/libswiftCore.dylib,0x1999c33e8,0x199e0b190,82149376
shared-library,/usr/lib/swift/libswiftCoreFoundation.dylib,0x1aefb90f0,0x1aefbdf78,82149376
shared-library,/usr/lib/swift/libswiftDarwin.dylib,0x1acc55598,0x1acc591c8,82149376
shared-library,/usr/lib/swift/libswiftDispatch.dylib,0x19f600034,0x19f6124d0,82149376
shared-library,/usr/lib/swift/libswiftIOKit.dylib,0x1af005d44,0x1af005fb0,82149376
shared-library,/usr/lib/swift/libswiftObjectiveC.dylib,0x1a1df446c,0x1a1df6030,82149376
shared-library,/usr/lib/swift/libswiftXPC.dylib,0x1aefcfa60,0x1aeff9210,82149376
shared-library,/usr/lib/swift/libswift_Concurrency.dylib,0x22b3159a0,0x22b360c28,82149376
shared-library,/usr/lib/swift/libswift_StringProcessing.dylib,0x22b45ed08,0x22b4e8af0,82149376
shared-library,/usr/lib/swift/libswiftos.dylib,0x1a1df834c,0x1a1e0bad0,82149376
shared-library,/System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo,0x1951a69c4,0x1951a94e0,82149376
shared-library,/usr/lib/libpcap.A.dylib,0x1969a1d34,0x1969c3380,82149376
shared-library,/usr/lib/libdns_services.dylib,0x19119fd34,0x1911a6ea0,82149376
shared-library,/usr/lib/libnetwork.dylib,0x18f36cfc0,0x18f36cfc0,82149376
shared-library,/System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer,0x195bce6a0,0x195bdac90,82149376
shared-library,/System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface,0x194243720,0x194253df8,82149376
shared-library,/usr/lib/liblzma.5.dylib,0x197dea6e8,0x197dfc760,82149376
shared-library,/usr/lib/swift/libswift_RegexParser.dylib,0x22b3b25c4,0x22b442230,82149376
shared-library,/usr/lib/libbz2.1.0.dylib,0x1965b740c,0x1965c1fb0,82149376
shared-library,/usr/lib/libiconv.2.dylib,0x1969d79a0,0x1969dd834,82149376
shared-library,/usr/lib/libcharset.1.dylib,0x196926fa0,0x196926fb0,82149376
shared-library,/usr/lib/libheimdal-asn1.dylib,0x19825bdb8,0x198265b48,82149376
shared-library,/usr/lib/libCheckFix.dylib,0x195ec08c8,0x195ec9d04,82149376
shared-library,/System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC,0x18f7eadb0,0x18f8041f8,82149376
shared-library,/System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP,0x1951ad840,0x1952a203c,82149376
shared-library,/System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities,0x191dd20b0,0x191e093b0,82149376
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate,0x19e290000,0x19e290000,82149376
shared-library,/usr/lib/libmecab.dylib,0x195ef7390,0x195f44f50,82149376
shared-library,/usr/lib/libCRFSuite.dylib,0x18af98538,0x18afc68f0,82149376
shared-library,/usr/lib/libgermantok.dylib,0x195f5329c,0x195f54d40,82149376
shared-library,/usr/lib/libThaiTokenizer.dylib,0x196af0d2c,0x196af1d50,82149376
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage,0x191ebc290,0x1921f8bec,82149376
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib,0x19df63000,0x19df63000,82149376
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib,0x197ebbbb4,0x197f31e90,82149376
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib,0x195aaa100,0x195b92a7c,82149376
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib,0x18aa26c30,0x18ada99b8,82149376
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib,0x196c22254,0x197d7faf0,82149376
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib,0x195f56098,0x195f67c38,82149376
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib,0x196b34628,0x196b45950,82149376
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib,0x196c1d1a0,0x196c201d0,82149376
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib,0x1952cf130,0x195a53f54,82149376
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib,0x18ae9de38,0x18aefec60,82149376
shared-library,/System/Library/PrivateFrameworks/MIL.framework/Versions/A/MIL,0x21003f8f4,0x21046b880,82149376
shared-library,/System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory,0x192937acc,0x19294d448,82149376
shared-library,/System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory,0x1929285cc,0x19292f2c8,82149376
shared-library,/System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS,0x197e064c0,0x197e5af98,82149376
shared-library,/System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation,0x195dff00c,0x195e41418,82149376
shared-library,/usr/lib/libutil.dylib,0x197e84068,0x197e86660,82149376
shared-library,/System/Library/PrivateFrameworks/InstalledContentLibrary.framework/Versions/A/InstalledContentLibrary,0x20e226564,0x20e2cbea8,82149376
shared-library,/System/Library/PrivateFrameworks/CoreServicesStore.framework/Versions/A/CoreServicesStore,0x18d7e5ec0,0x18d816920,82149376
shared-library,/usr/lib/libapp_launch_measurement.dylib,0x192991800,0x192993750,82149376
shared-library,/System/Library/PrivateFrameworks/AppleMobileFileIntegrity.framework/Versions/A/AppleMobileFileIntegrity,0x1fe86a080,0x1fe875348,82149376
shared-library,/usr/lib/libmis.dylib,0x1aef97dc4,0x1aefa48f8,82149376
shared-library,/System/Library/PrivateFrameworks/MobileSystemServices.framework/Versions/A/MobileSystemServices,0x1beab9a14,0x1beabbe10,82149376
shared-library,/System/Library/PrivateFrameworks/ConfigProfileHelper.framework/Versions/A/ConfigProfileHelper,0x1efd593f4,0x1efd5a788,82149376
shared-library,/System/Library/PrivateFrameworks/CoreAnalytics.framework/Versions/A/CoreAnalytics,0x191da0bc4,0x191dc4f28,82149376
shared-library,/System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce,0x196af2bac,0x196b14850,82149376
shared-library,/System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling,0x18bec4bc0,0x18c0626d0,82149376
shared-library,/usr/lib/libxslt.1.dylib,0x197e88490,0x197eaaa70,82149376
shared-library,/usr/lib/libcmph.dylib,0x1969de910,0x1969edbd0,82149376
shared-library,/System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji,0x195b9aeec,0x195bc25d0,82149376
shared-library,/System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData,0x1952c9340,0x1952ccb10,82149376
shared-library,/System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon,0x18adb1794,0x18ae75910,82149376
shared-library,/System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement,0x195e8cb64,0x195ea7020,82149376
shared-library,/usr/lib/libTLE.dylib,0x229f91448,0x229f986e8,82149376
shared-library,/System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore,0x1922a1fe4,0x1925dcc08,82149376
shared-library,/System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage,0x194d97bdc,0x194ff50e8,82149376
shared-library,/System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo,0x192ac93e4,0x192b0ef60,82149376
shared-library,/System/Library/PrivateFrameworks/ASEProcessing.framework/Versions/A/ASEProcessing,0x1a2dc1bac,0x1a2dc97f0,82149376
shared-library,/System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication,0x1ca728d40,0x1ca7ccb60,82149376
shared-library,/System/Library/PrivateFrameworks/RunningBoardServices.framework/Versions/A/RunningBoardServices,0x1910ca864,0x19110f490,82149376
shared-library,/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics,0x18fca412c,0x190148f90,82149376
shared-library,/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText,0x18c532f3c,0x18c690968,82149376
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO,0x194a7d2d8,0x194d26138,82149376
shared-library,/System/Library/PrivateFrameworks/PhotosensitivityProcessing.framework/Versions/A/PhotosensitivityProcessing,0x2154eef38,0x2154fc3d0,82149376
shared-library,/System/Library/PrivateFrameworks/IOSurfaceAccelerator.framework/Versions/A/IOSurfaceAccelerator,0x1a46afce0,0x1a46b2104,82149376
shared-library,/System/Library/Frameworks/Metal.framework/Versions/A/Metal,0x194265930,0x1943d4ae8,82149376
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL,0x1f28f0b08,0x1f28fdd80,82149376
shared-library,/System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync,0x190380e2c,0x1903f3940,82149376
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders,0x196b478d8,0x196b47c78,82149376
shared-library,/System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer,0x1983c3d58,0x1983cc150,82149376
shared-library,/System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG,0x198744560,0x19877df50,82149376
shared-library,/usr/lib/libexpat.1.dylib,0x1982408c4,0x1982594cc,82149376
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib,0x198d3df84,0x198d641c0,82149376
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib,0x198d691e0,0x198da57a0,82149376
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib,0x198e540c0,0x198e58a84,82149376
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib,0x19878a034,0x1988419ec,82149376
shared-library,/usr/lib/libate.dylib,0x197f37f18,0x197f748e8,82149376
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib,0x198df8db4,0x198e200a0,82149376
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib,0x198defccc,0x198df1c68,82149376
shared-library,/System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight,0x18f80cdf8,0x18fbf5480,82149376
shared-library,/System/Library/PrivateFrameworks/FontServices.framework/libFontParser.dylib,0x1945fe08c,0x1946d32c0,82149376
shared-library,/System/Library/PrivateFrameworks/WatchdogClient.framework/Versions/A/WatchdogClient,0x19887b8b4,0x19887cc30,82149376
shared-library,/System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay,0x18c0ab1fc,0x18c192158,82149376
shared-library,/System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia,0x1944b80e0,0x1945db6e0,82149376
shared-library,/System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator,0x19425b004,0x194262418,82149376
shared-library,/System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport,0x19887ebbc,0x19889a008,82149376
shared-library,/System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox,0x1988bd700,0x198ce0d48,82149376
shared-library,/System/Library/PrivateFrameworks/UserManagement.framework/Versions/A/UserManagement,0x192b64fb0,0x192b7fc80,82149376
shared-library,/System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard,0x190ffa39c,0x19108fea8,82149376
shared-library,/System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag,0x195dd89d0,0x195de76c8,82149376
shared-library,/System/Library/PrivateFrameworks/AggregateDictionary.framework/Versions/A/AggregateDictionary,0x1951a59c8,0x1951a5de0,82149376
shared-library,/System/Library/PrivateFrameworks/AppleKeyStore.framework/Versions/A/AppleKeyStore,0x1fe7e69b4,0x1fe80fe30,82149376
shared-library,/System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler,0x198deae84,0x198dee580,82149376
shared-library,/System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment,0x198dcb618,0x198de5da0,82149376
shared-library,/System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay,0x198df330c,0x198df6ca8,82149376
shared-library,/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/32023/Libraries/libllvm-flatbuffers.dylib,0x20a394e8c,0x20a3cca00,82149376
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib,0x1f28e2a18,0x1f28e7fa0,82149376
shared-library,/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/32023/Libraries/libGPUCompilerUtils.dylib,0x2075cef54,0x2075cef90,82149376
shared-library,/System/Library/PrivateFrameworks/CMCaptureCore.framework/Versions/A/CMCaptureCore,0x198e5a9ec,0x198e5c638,82149376
shared-library,/usr/lib/libspindump.dylib,0x198427110,0x19842ad10,82149376
shared-library,/System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio,0x18c727380,0x18ccc8f64,82149376
shared-library,/System/Library/Frameworks/ExtensionFoundation.framework/Versions/A/ExtensionFoundation,0x1f76d9ef4,0x1f773f530,82149376
shared-library,/System/Library/PrivateFrameworks/CoreTime.framework/Versions/A/CoreTime,0x19fe450cc,0x19fe4b6b8,82149376
shared-library,/System/Library/PrivateFrameworks/AppServerSupport.framework/Versions/A/AppServerSupport,0x198411f18,0x198418000,82149376
shared-library,/System/Library/PrivateFrameworks/perfdata.framework/Versions/A/perfdata,0x19a96ce70,0x19a974d50,82149376
shared-library,/System/Library/PrivateFrameworks/AudioToolboxCore.framework/Versions/A/AudioToolboxCore,0x18c1cbed0,0x18c4a81f8,82149376
shared-library,/System/Library/PrivateFrameworks/caulk.framework/Versions/A/caulk,0x19448d4a4,0x1944abb80,82149376
shared-library,/usr/lib/libAudioStatistics.dylib,0x19a1e98b4,0x19a1f6cf0,82149376
shared-library,/System/Library/PrivateFrameworks/SystemPolicy.framework/Versions/A/SystemPolicy,0x1ae2f6a00,0x1ae30bf80,82149376
shared-library,/usr/lib/libSMC.dylib,0x19a4bf478,0x19a4c3c18,82149376
shared-library,/System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI,0x1a3caa3e0,0x1a3d24a38,82149376
shared-library,/usr/lib/libAudioToolboxUtility.dylib,0x198d04e98,0x198d35560,82149376
shared-library,/System/Library/PrivateFrameworks/OSAServicesClient.framework/Versions/A/OSAServicesClient,0x1a9a98970,0x1a9a9d098,82149376
shared-library,/usr/lib/libperfcheck.dylib,0x19a979e2c,0x19a984950,82149376
shared-library,/System/Library/PrivateFrameworks/PlugInKit.framework/Versions/A/PlugInKit,0x19812bfd0,0x1981551e0,82149376
shared-library,/System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices,0x195df0154,0x195df7f80,82149376
shared-library,/usr/lib/swift/libswiftMetal.dylib,0x1ba9c51c8,0x1ba9c77a8,82149376
shared-library,/usr/lib/swift/libswiftQuartzCore.dylib,0x1be5f03b4,0x1be5f0b80,82149376
shared-library,/usr/lib/swift/libswiftsimd.dylib,0x1b21e9994,0x1b21ffce0,82149376
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib,0x1f29450c4,0x1f2978bcc,82149376
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib,0x1f29045e4,0x1f290a7f8,82149376
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib,0x1f2adc86c,0x1f2ae5f44,82149376
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib,0x1f290d670,0x1f2943660,82149376
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib,0x1f2901074,0x1f2902c8c,82149376
shared-library,/usr/lib/libRosetta.dylib,0x229f49618,0x229f4ecb0,82149376
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib,0x1f28e9e98,0x1f28edc48,82149376
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSCore.framework/Versions/A/MPSCore,0x19511cf08,0x19517a0a0,82149376
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSImage.framework/Versions/A/MPSImage,0x196466820,0x1964a59c0,82149376
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork,0x195f6bc40,0x1960efdd0,82149376
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix,0x196359f04,0x196379fc0,82149376
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSRayIntersector.framework/Versions/A/MPSRayIntersector,0x196165878,0x1961aabf0,82149376
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSNDArray.framework/Versions/A/MPSNDArray,0x196388fb4,0x196404718,82149376
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSFunctions.framework/Versions/A/MPSFunctions,0x1f8db17b0,0x1f8dbeca8,82149376
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSBenchmarkLoop.framework/Versions/A/MPSBenchmarkLoop,0x1f8d93924,0x1f8d9fa18,82149376
shared-library,/System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools,0x18a8dc16c,0x18a9ac520,82149376
shared-library,/System/Library/PrivateFrameworks/IOAccelMemoryInfo.framework/Versions/A/IOAccelMemoryInfo,0x1b33a6a2c,0x1b33ac420,82149376
shared-library,/System/Library/PrivateFrameworks/kperf.framework/Versions/A/kperf,0x1be9c3e94,0x1be9c8648,82149376
shared-library,/System/Library/PrivateFrameworks/GPURawCounter.framework/Versions/A/GPURawCounter,0x1aefab998,0x1aefac8f0,82149376
shared-library,/System/Library/PrivateFrameworks/VideoToolboxParavirtualizationSupport.framework/Versions/A/VideoToolboxParavirtualizationSupport,0x2214c061c,0x2214c0d20,82149376
shared-library,/System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA,0x1981f6e50,0x1982394e0,82149376
shared-library,/System/Library/PrivateFrameworks/FontServices.framework/libhvf.dylib,0x19841bb4c,0x198423c80,82149376
shared-library,/System/Library/PrivateFrameworks/FontServices.framework/Versions/A/FontServices,0x205985f50,0x205985f58,82149376
shared-library,/System/Library/Frameworks/UniformTypeIdentifiers.framework/Versions/A/UniformTypeIdentifiers,0x18ee519dc,0x18ee5e420,82149376
shared-library,/System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG,0x1983d03dc,0x198409ee0,82149376
shared-library,/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib,0x19266a9f4,0x1926a9f78,82149376
shared-library,/System/Library/PrivateFrameworks/FontServices.framework/libXTFontStaticRegistryData.dylib,0x205987207,0x205987207,82149376
shared-library,/System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication,0x19fd3513c,0x19fe2b160,82149376
shared-library,/System/Library/PrivateFrameworks/MallocStackLogging.framework/Versions/A/MallocStackLogging,0x1aef6929c,0x1aef71040,82149376
shared-library,/System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport,0x197fd27dc,0x197fdfc88,82149376
shared-library,/System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols,0x19fcf04b4,0x19fd2b6d0,82149376
shared-library,/System/Library/PrivateFrameworks/OSAnalytics.framework/Versions/A/OSAnalytics,0x1bdd024fc,0x1bdd3b280,82149376
shared-library-end
tick,0x184ef9b94,1542,0,0x0,6
profiler,begin,1000
new,CodeRange,0x140000000,0
tick,0x105c6f990,2792,0,0x0,6
new,MemoryChunk,0x2b755a400000,262144
new,MemoryChunk,0x2baae08c0000,262144
new,MemoryChunk,0x397199600000,262144
new,MemoryChunk,0x3d0870640000,262144
tick,0x1852c56b0,4042,0,0x0,6
tick,0x1852c56a8,5292,0,0x0,6
tick,0x1852c56b0,6542,0,0x0,6
new,MemoryChunk,0x147812f40000,262144
new,MemoryChunk,0x298909540000,262144
new,MemoryChunk,0x21d50bd80000,262144
new,MemoryChunk,0x171e55c80000,262144
tick,0x10587d0ac,7792,0,0x0,6
heap-capacity,1031008
heap-available,1518565056
new,MemoryChunk,0x38e60b540000,262144
tick,0x105b5db88,9083,0,0x0,6
new,MemoryChunk,0x40f46380000,262144
new,MemoryChunk,0x288e06640000,262144
tick,0x105c6b228,10333,0,0x0,6
new,MemoryChunk,0xfc54f80000,262144
tick,0x105c6b228,11583,0,0x0,6
new,MemoryChunk,0x360c06600000,212992
tick,0x105c66b70,12833,0,0x0,6
new,MemoryChunk,0x3fd3d01c0000,262144
new,MemoryChunk,0x1e36f12c0000,147456
tick,0x105c6b228,14083,0,0x0,6
new,MemoryChunk,0x1a64c17c0000,262144
tick,0x105c6b228,15333,0,0x0,6
new,MemoryChunk,0x9cf11a80000,262144
new,MemoryChunk,0xfd4e11c0000,262144
tick,0x105c6b228,16583,0,0x0,6
new,MemoryChunk,0x3743c7e80000,262144
tick,0x105c6b228,17833,0,0x0,6
new,MemoryChunk,0x31a67d740000,262144
new,MemoryChunk,0xcb077140000,262144
tick,0x105c6b228,19083,0,0x0,6
new,MemoryChunk,0x2136e0d40000,262144
tick,0x105c6b228,20333,0,0x0,6
new,MemoryChunk,0xb815c240000,262144
new,MemoryChunk,0x249fd9400000,196608
tick,0x105c6b228,21583,0,0x0,6
new,MemoryChunk,0x1533a61c0000,262144
new,MemoryChunk,0x15a2a1400000,262144
tick,0x105c6ab20,22833,0,0x0,6
new,MemoryChunk,0x1e3fa0400000,262144
tick,0x105c6b228,24125,0,0x0,6
new,MemoryChunk,0x3bd2e7800000,262144
new,MemoryChunk,0xb845240000,262144
tick,0x105c66b8c,25375,0,0x0,6
new,MemoryChunk,0x1d13e940000,262144
tick,0x105c66b8c,26625,0,0x0,6
new,MemoryChunk,0x1c5dbe1c0000,262144
code-creation,Builtin,2,27125,0x106674000,804,DeoptimizationEntry_Eager
code-creation,Builtin,2,27250,0x106674340,804,DeoptimizationEntry_Lazy
code-creation,Builtin,2,27292,0x106674680,2012,RecordWriteSaveFP
code-creation,Builtin,2,27292,0x106674e60,1340,RecordWriteIgnoreFP
code-creation,Builtin,2,27292,0x1066753a0,276,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,27292,0x1066754c0,180,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,27292,0x106675580,76,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,27292,0x1066755e0,40,IndirectPointerBarrierSaveFP
code-creation,Builtin,2,27292,0x106675620,40,IndirectPointerBarrierIgnoreFP
code-creation,Builtin,2,27292,0x106675660,336,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,27292,0x1066757c0,412,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,27292,0x106675960,452,CallFunction_ReceiverIsAny
code-creation,Builtin,2,27292,0x106675b40,232,CallBoundFunction
code-creation,Builtin,2,27292,0x106675c40,908,CallWrappedFunction
code-creation,Builtin,2,27292,0x106675fe0,192,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,27333,0x1066760c0,192,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,27333,0x1066761a0,192,Call_ReceiverIsAny
code-creation,Builtin,2,27333,0x106676280,820,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,27333,0x1066765c0,820,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,27333,0x106676900,956,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,27333,0x106676cc0,956,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,27333,0x106677080,956,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,27333,0x106677440,956,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,27333,0x106677800,792,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,27333,0x106677b20,792,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,27333,0x106677e40,792,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,27333,0x106678160,764,CallProxy
code-creation,Builtin,2,27375,0x106678460,172,CallVarargs
code-creation,Builtin,2,27375,0x106678520,1152,CallWithSpread
code-creation,Builtin,2,27375,0x1066789c0,1896,CallWithSpread_Baseline
code-creation,Builtin,2,27375,0x106679140,1960,CallWithSpread_WithFeedback
code-creation,Builtin,2,27375,0x106679900,1172,CallWithArrayLike
code-creation,Builtin,2,27375,0x106679da0,1948,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,27375,0x10667a540,200,CallForwardVarargs
code-creation,Builtin,2,27375,0x10667a620,200,CallFunctionForwardVarargs
code-creation,Builtin,2,27375,0x10667a700,372,CallFunctionTemplate_Generic
code-creation,Builtin,2,27417,0x10667a880,192,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,27417,0x10667a960,272,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,27417,0x10667aa80,360,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,27417,0x10667ac00,24,ConstructFunction
code-creation,Builtin,2,27417,0x10667ac20,236,ConstructBoundFunction
code-creation,Builtin,2,27417,0x10667ad20,44,ConstructedNonConstructable
code-creation,Builtin,2,27417,0x10667ad60,88,Construct
code-creation,Builtin,2,27417,0x10667adc0,172,ConstructVarargs
code-creation,Builtin,2,27417,0x10667ae80,1180,ConstructWithSpread
code-creation,Builtin,2,27417,0x10667b320,1912,ConstructWithSpread_Baseline
code-creation,Builtin,2,27417,0x10667baa0,1892,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,27417,0x10667c220,1300,ConstructWithArrayLike
code-creation,Builtin,2,27417,0x10667c740,2012,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,27458,0x10667cf20,252,ConstructForwardVarargs
code-creation,Builtin,2,27458,0x10667d020,120,ConstructForwardAllArgs
code-creation,Builtin,2,27458,0x10667d0a0,696,ConstructForwardAllArgs_Baseline
code-creation,Builtin,2,27458,0x10667d360,684,ConstructForwardAllArgs_WithFeedback
code-creation,Builtin,2,27458,0x10667d620,252,ConstructFunctionForwardVarargs
code-creation,Builtin,2,27458,0x10667d720,712,Construct_Baseline
code-creation,Builtin,2,27458,0x10667da00,716,Construct_WithFeedback
code-creation,Builtin,2,27458,0x10667dce0,540,JSConstructStubGeneric
code-creation,Builtin,2,27458,0x10667df00,448,JSBuiltinsConstructStub
code-creation,Builtin,2,27458,0x10667e0e0,840,FastNewObject
code-creation,Builtin,2,27458,0x10667e440,376,FastNewClosure
code-creation,Builtin,2,27458,0x10667e5c0,796,ConstructProxy
code-creation,Builtin,2,27458,0x10667e8e0,236,JSEntry
code-creation,Builtin,2,27458,0x10667e9e0,236,JSConstructEntry
code-creation,Builtin,2,27458,0x10667eae0,236,JSRunMicrotasksEntry
code-creation,Builtin,2,27500,0x10667ebe0,184,JSEntryTrampoline
code-creation,Builtin,2,27500,0x10667eca0,184,JSConstructEntryTrampoline
code-creation,Builtin,2,27500,0x10667ed60,356,ResumeGeneratorTrampoline
code-creation,Builtin,2,27500,0x10667eee0,1400,StringFromCodePointAt
code-creation,Builtin,2,27500,0x10667f460,808,StringEqual
code-creation,Builtin,2,27500,0x10667f7a0,380,StringGreaterThan
code-creation,Builtin,2,27500,0x10667f920,380,StringGreaterThanOrEqual
code-creation,Builtin,2,27500,0x10667faa0,380,StringLessThan
code-creation,Builtin,2,27500,0x10667fc20,380,StringLessThanOrEqual
code-creation,Builtin,2,27500,0x10667fda0,380,StringCompare
code-creation,Builtin,2,27500,0x10667ff20,3772,StringSubstring
code-creation,Builtin,2,27500,0x106680de0,124,OrderedHashTableHealIndex
code-creation,Builtin,2,27500,0x106680e60,1084,InterpreterEntryTrampoline
code-creation,Builtin,2,27500,0x1066812a0,1120,InterpreterEntryTrampolineForProfiling
code-creation,Builtin,2,27542,0x106681720,120,InterpreterForwardAllArgsThenConstruct
code-creation,Builtin,2,27708,0x1066817a0,124,InterpreterPushArgsThenCall
code-creation,Builtin,2,27708,0x106681820,132,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,27708,0x1066818c0,132,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,27708,0x106681960,132,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,27708,0x106681a00,840,InterpreterPushArgsThenFastConstructFunction
code-creation,Builtin,2,27708,0x106681d60,132,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,27708,0x106681e00,140,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,27708,0x106681ea0,88,InterpreterEnterAtBytecode
code-creation,Builtin,2,27708,0x106681f00,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,27708,0x106681fe0,144,InterpreterOnStackReplacement
code-creation,Builtin,2,27750,0x106682080,492,BaselineOutOfLinePrologue
code-creation,Builtin,2,27750,0x106682280,24,BaselineOutOfLinePrologueDeopt
code-creation,Builtin,2,27750,0x1066822a0,140,BaselineOnStackReplacement
code-creation,Builtin,2,27750,0x106682340,100,BaselineLeaveFrame
code-creation,Builtin,2,27750,0x1066823c0,232,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,27750,0x1066824c0,236,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,27750,0x1066825c0,212,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,27750,0x1066826a0,4,MaglevOnStackReplacement
code-creation,Builtin,2,27750,0x1066826c0,4,MaglevFunctionEntryStackCheck_WithoutNewTarget
code-creation,Builtin,2,27750,0x1066826e0,4,MaglevFunctionEntryStackCheck_WithNewTarget
code-creation,Builtin,2,27750,0x106682700,4,MaglevOptimizeCodeOrTailCallOptimizedCodeSlot
code-creation,Builtin,2,27750,0x106682720,1192,CompileLazy
code-creation,Builtin,2,27750,0x106682be0,76,CompileLazyDeoptimizedCode
code-creation,Builtin,2,27792,0x106682c40,276,InstantiateAsmJs
code-creation,Builtin,2,27792,0x106682d60,44,NotifyDeoptimized
code-creation,Builtin,2,27792,0x106682da0,88,ContinueToCodeStubBuiltin
code-creation,Builtin,2,27792,0x106682e00,92,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,27792,0x106682e60,92,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,27792,0x106682ec0,108,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,27792,0x106682f40,372,CallApiCallbackGeneric
code-creation,Builtin,2,27792,0x1066830c0,308,CallApiCallbackOptimizedNoProfiling
code-creation,Builtin,2,27792,0x106683200,340,CallApiCallbackOptimized
code-creation,Builtin,2,27792,0x106683360,312,CallApiGetter
code-creation,Builtin,2,27792,0x1066834a0,36,HandleApiCallOrConstruct
code-creation,Builtin,2,27792,0x1066834e0,8,HandleApiConstruct
code-creation,Builtin,2,27792,0x106683500,8,HandleApiCallAsFunctionDelegate
code-creation,Builtin,2,27833,0x106683520,8,HandleApiCallAsConstructorDelegate
code-creation,Builtin,2,27833,0x106683540,52,AllocateInYoungGeneration
code-creation,Builtin,2,27833,0x106683580,52,AllocateInOldGeneration
code-creation,Builtin,2,27833,0x1066835c0,52,WasmAllocateInYoungGeneration
code-creation,Builtin,2,27833,0x106683600,52,WasmAllocateInOldGeneration
code-creation,Builtin,2,27833,0x106683640,140,NewHeapNumber
code-creation,Builtin,2,27833,0x1066836e0,652,CopyFastSmiOrObjectElements
code-creation,Builtin,2,27833,0x106683980,548,GrowFastDoubleElements
code-creation,Builtin,2,27833,0x106683bc0,480,GrowFastSmiOrObjectElements
code-creation,Builtin,2,27833,0x106683dc0,456,DebugBreakTrampoline
code-creation,Builtin,2,27833,0x106683fa0,320,RestartFrameTrampoline
code-creation,Builtin,2,27833,0x106684100,220,ToNumber
code-creation,Builtin,2,27833,0x1066841e0,124,ToBigInt
code-creation,Builtin,2,27833,0x106684260,324,ToNumber_Baseline
code-creation,Builtin,2,27875,0x1066843c0,388,ToNumeric_Baseline
code-creation,Builtin,2,27875,0x106684560,140,PlainPrimitiveToNumber
code-creation,Builtin,2,27875,0x106684600,260,ToNumberConvertBigInt
code-creation,Builtin,2,27875,0x106684720,100,ToBigIntConvertNumber
code-creation,Builtin,2,27875,0x1066847a0,208,Typeof
code-creation,Builtin,2,27875,0x106684880,140,BigIntToI64
code-creation,Builtin,2,27875,0x106684920,8,BigIntToI32Pair
code-creation,Builtin,2,27875,0x106684940,248,I64ToBigInt
code-creation,Builtin,2,27875,0x106684a40,8,I32PairToBigInt
code-creation,Builtin,2,27875,0x106684a60,152,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,27875,0x106684b00,176,MathCeilContinuation
code-creation,Builtin,2,27917,0x106684bc0,176,MathFloorContinuation
code-creation,Builtin,2,27917,0x106684c80,200,MathRoundContinuation
code-creation,Builtin,2,27917,0x106684d60,4124,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,27917,0x106685d80,21484,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,27917,0x10668b180,12740,DefineKeyedOwnIC_Megamorphic
code-creation,Builtin,2,27917,0x10668e360,680,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,27917,0x10668e620,84,LoadIC_FunctionPrototype
code-creation,Builtin,2,27917,0x10668e680,16,LoadIC_StringLength
code-creation,Builtin,2,27917,0x10668e6a0,20,LoadIC_StringWrapperLength
code-creation,Builtin,2,27958,0x10668e6c0,4164,LoadIC_NoFeedback
code-creation,Builtin,2,27958,0x10668f720,44,StoreGlobalIC_Slow
code-creation,Builtin,2,27958,0x10668f760,8696,StoreIC_NoFeedback
code-creation,Builtin,2,27958,0x106691960,4584,DefineNamedOwnIC_NoFeedback
code-creation,Builtin,2,27958,0x106692b60,220,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,27958,0x106692c40,68,LoadIndexedInterceptorIC
code-creation,Builtin,2,27958,0x106692ca0,288,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,27958,0x106692de0,288,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,27958,0x106692f20,288,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,28000,0x106693060,288,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,28000,0x1066931a0,14496,StoreFastElementIC_Standard
code-creation,Builtin,2,28000,0x106696a60,12544,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,28000,0x106699b80,13724,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,28000,0x10669d120,7492,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,28000,0x10669ee80,8880,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,28000,0x1066a1140,22960,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,28000,0x1066a6b00,8880,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,28042,0x1066a8dc0,13628,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,28042,0x1066ac300,1112,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,28042,0x1066ac760,196,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,28042,0x1066ac840,68,HasIndexedInterceptorIC
code-creation,Builtin,2,28042,0x1066ac8a0,160,EnqueueMicrotask
code-creation,Builtin,2,28042,0x1066ac960,8,RunMicrotasksTrampoline
code-creation,Builtin,2,28042,0x1066ac980,3556,RunMicrotasks
code-creation,Builtin,2,28042,0x1066ad780,4736,HasProperty
code-creation,Builtin,2,28042,0x1066aea20,1292,DeleteProperty
code-creation,Builtin,2,28042,0x1066aef40,2616,CopyDataProperties
code-creation,Builtin,2,28083,0x1066af980,10928,SetDataProperties
code-creation,Builtin,2,28083,0x1066b2440,3580,CopyDataPropertiesWithExcludedPropertiesOnStack
code-creation,Builtin,2,28083,0x1066b3240,76,CopyDataPropertiesWithExcludedProperties
code-creation,Builtin,2,28083,0x1066b32a0,32,Abort
code-creation,Builtin,2,28083,0x1066b32e0,32,AbortCSADcheck
code-creation,Builtin,2,28083,0x1066b3320,8,EmptyFunction
code-creation,Builtin,2,28083,0x1066b3340,8,Illegal
code-creation,Builtin,2,28083,0x1066b3360,8,StrictPoisonPillThrower
code-creation,Builtin,2,28083,0x1066b3380,8,UnsupportedThrower
code-creation,Builtin,2,28125,0x1066b33a0,80,ReturnReceiver
code-creation,Builtin,2,28125,0x1066b3400,36,ArrayConstructor
code-creation,Builtin,2,28125,0x1066b3440,452,ArrayConstructorImpl
code-creation,Builtin,2,28125,0x1066b3620,228,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,28125,0x1066b3720,228,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,28125,0x1066b3820,188,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,28125,0x1066b38e0,188,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,28125,0x1066b39a0,188,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,28125,0x1066b3a60,188,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,28167,0x1066b3b20,192,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,28167,0x1066b3c00,192,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,28167,0x1066b3ce0,872,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,28167,0x1066b4060,848,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,28167,0x1066b43c0,760,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,28167,0x1066b46c0,736,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,28167,0x1066b49c0,760,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,28208,0x1066b4cc0,736,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,28208,0x1066b4fc0,852,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,28208,0x1066b5320,828,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,28208,0x1066b5660,60,ArrayNArgumentsConstructor
code-creation,Builtin,2,28208,0x1066b56a0,8,ArrayConcat
code-creation,Builtin,2,28208,0x1066b56c0,8,ArrayPrototypeFill
code-creation,Builtin,2,28208,0x1066b56e0,2012,ArrayIncludesSmi
code-creation,Builtin,2,28208,0x1066b5ec0,1940,ArrayIncludesSmiOrObject
code-creation,Builtin,2,28208,0x1066b6660,352,ArrayIncludesPackedDoubles
code-creation,Builtin,2,28250,0x1066b67e0,480,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,28250,0x1066b69e0,648,ArrayIncludes
code-creation,Builtin,2,28250,0x1066b6c80,1836,ArrayIndexOfSmi
code-creation,Builtin,2,28250,0x1066b73c0,1768,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,28250,0x1066b7ac0,284,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,28250,0x1066b7be0,284,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,28250,0x1066b7d00,648,ArrayIndexOf
code-creation,Builtin,2,28250,0x1066b7fa0,8,ArrayPop
code-creation,Builtin,2,28250,0x1066b7fc0,580,ArrayPrototypePop
code-creation,Builtin,2,28250,0x1066b8220,8,ArrayPush
code-creation,Builtin,2,28292,0x1066b8240,2504,ArrayPrototypePush
code-creation,Builtin,2,28292,0x1066b8c20,8,ArrayShift
code-creation,Builtin,2,28292,0x1066b8c40,8,ArrayUnshift
code-creation,Builtin,2,28292,0x1066b8c60,1268,CloneFastJSArray
code-creation,Builtin,2,28292,0x1066b9160,2728,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,28292,0x1066b9c20,1264,ExtractFastJSArray
code-creation,Builtin,2,28292,0x1066ba120,256,ArrayPrototypeEntries
code-creation,Builtin,2,28292,0x1066ba240,252,ArrayPrototypeKeys
code-creation,Builtin,2,28292,0x1066ba340,256,ArrayPrototypeValues
code-creation,Builtin,2,28292,0x1066ba460,4060,ArrayIteratorPrototypeNext
code-creation,Builtin,2,28333,0x1066bb440,8,ArrayBufferConstructor
code-creation,Builtin,2,28333,0x1066bb460,8,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,28333,0x1066bb480,8,ArrayBufferPrototypeSlice
code-creation,Builtin,2,28333,0x1066bb4a0,8,ArrayBufferPrototypeResize
code-creation,Builtin,2,28333,0x1066bb4c0,8,ArrayBufferPrototypeTransfer
code-creation,Builtin,2,28333,0x1066bb4e0,8,ArrayBufferPrototypeTransferToFixedLength
code-creation,Builtin,2,28333,0x1066bb500,1280,AsyncFunctionEnter
code-creation,Builtin,2,28333,0x1066bba20,96,AsyncFunctionReject
code-creation,Builtin,2,28333,0x1066bbaa0,92,AsyncFunctionResolve
code-creation,Builtin,2,28333,0x1066bbb00,16,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,28375,0x1066bbb20,1936,AsyncFunctionAwaitCaught
code-creation,Builtin,2,28375,0x1066bc2c0,1936,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,28375,0x1066bca60,208,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,28375,0x1066bcb40,204,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,28375,0x1066bcc20,8,BigIntConstructor
code-creation,Builtin,2,28375,0x1066bcc40,8,BigIntAsUintN
code-creation,Builtin,2,28375,0x1066bcc60,8,BigIntAsIntN
code-creation,Builtin,2,28375,0x1066bcc80,8,BigIntPrototypeToLocaleString
code-creation,Builtin,2,28375,0x1066bcca0,8,BigIntPrototypeToString
code-creation,Builtin,2,28417,0x1066bccc0,8,BigIntPrototypeValueOf
code-creation,Builtin,2,28417,0x1066bcce0,8,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,28417,0x1066bcd00,8,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,28417,0x1066bcd20,8,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,28417,0x1066bcd40,8,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,28417,0x1066bcd60,8,CallSitePrototypeGetFileName
code-creation,Builtin,2,28417,0x1066bcd80,8,CallSitePrototypeGetFunction
code-creation,Builtin,2,28417,0x1066bcda0,8,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,28417,0x1066bcdc0,8,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,28458,0x1066bcde0,8,CallSitePrototypeGetMethodName
code-creation,Builtin,2,28458,0x1066bce00,8,CallSitePrototypeGetPosition
code-creation,Builtin,2,28458,0x1066bce20,8,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,28458,0x1066bce40,8,CallSitePrototypeGetScriptHash
code-creation,Builtin,2,28458,0x1066bce60,8,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,28458,0x1066bce80,8,CallSitePrototypeGetThis
code-creation,Builtin,2,28458,0x1066bcea0,8,CallSitePrototypeGetTypeName
code-creation,Builtin,2,28458,0x1066bcec0,8,CallSitePrototypeIsAsync
code-creation,Builtin,2,28458,0x1066bcee0,8,CallSitePrototypeIsConstructor
code-creation,Builtin,2,28500,0x1066bcf00,8,CallSitePrototypeIsEval
code-creation,Builtin,2,28500,0x1066bcf20,8,CallSitePrototypeIsNative
code-creation,Builtin,2,28500,0x1066bcf40,8,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,28500,0x1066bcf60,8,CallSitePrototypeIsToplevel
code-creation,Builtin,2,28500,0x1066bcf80,8,CallSitePrototypeToString
code-creation,Builtin,2,28500,0x1066bcfa0,8,ConsoleDebug
code-creation,Builtin,2,28500,0x1066bcfc0,8,ConsoleError
code-creation,Builtin,2,28500,0x1066bcfe0,8,ConsoleInfo
code-creation,Builtin,2,28500,0x1066bd000,8,ConsoleLog
code-creation,Builtin,2,28500,0x1066bd020,8,ConsoleWarn
code-creation,Builtin,2,28542,0x1066bd040,8,ConsoleDir
code-creation,Builtin,2,28542,0x1066bd060,8,ConsoleDirXml
code-creation,Builtin,2,28542,0x1066bd080,8,ConsoleTable
code-creation,Builtin,2,28542,0x1066bd0a0,8,ConsoleTrace
code-creation,Builtin,2,28542,0x1066bd0c0,8,ConsoleGroup
code-creation,Builtin,2,28542,0x1066bd0e0,8,ConsoleGroupCollapsed
code-creation,Builtin,2,28542,0x1066bd100,8,ConsoleGroupEnd
code-creation,Builtin,2,28542,0x1066bd120,8,ConsoleClear
code-creation,Builtin,2,28542,0x1066bd140,8,ConsoleCount
code-creation,Builtin,2,28542,0x1066bd160,8,ConsoleCountReset
code-creation,Builtin,2,28583,0x1066bd180,8,ConsoleAssert
code-creation,Builtin,2,28583,0x1066bd1a0,8,ConsoleProfile
code-creation,Builtin,2,28583,0x1066bd1c0,8,ConsoleProfileEnd
code-creation,Builtin,2,28583,0x1066bd1e0,8,ConsoleTime
code-creation,Builtin,2,28583,0x1066bd200,8,ConsoleTimeLog
code-creation,Builtin,2,28583,0x1066bd220,8,ConsoleTimeEnd
code-creation,Builtin,2,28583,0x1066bd240,8,ConsoleTimeStamp
code-creation,Builtin,2,28583,0x1066bd260,8,ConsoleContext
code-creation,Builtin,2,28583,0x1066bd280,8,DataViewConstructor
code-creation,Builtin,2,28583,0x1066bd2a0,8,DateConstructor
code-creation,Builtin,2,28583,0x1066bd2c0,204,DatePrototypeGetDate
code-creation,Builtin,2,28625,0x1066bd3a0,204,DatePrototypeGetDay
code-creation,Builtin,2,28625,0x1066bd480,204,DatePrototypeGetFullYear
code-creation,Builtin,2,28625,0x1066bd560,204,DatePrototypeGetHours
code-creation,Builtin,2,28625,0x1066bd640,176,DatePrototypeGetMilliseconds
code-creation,Builtin,2,28625,0x1066bd700,204,DatePrototypeGetMinutes
code-creation,Builtin,2,28625,0x1066bd7e0,204,DatePrototypeGetMonth
code-creation,Builtin,2,28625,0x1066bd8c0,204,DatePrototypeGetSeconds
code-creation,Builtin,2,28625,0x1066bd9a0,144,DatePrototypeGetTime
code-creation,Builtin,2,28625,0x1066bda40,176,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,28625,0x1066bdb00,176,DatePrototypeGetUTCDate
code-creation,Builtin,2,28667,0x1066bdbc0,176,DatePrototypeGetUTCDay
code-creation,Builtin,2,28667,0x1066bdc80,176,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,28667,0x1066bdd40,176,DatePrototypeGetUTCHours
code-creation,Builtin,2,28667,0x1066bde00,176,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,28667,0x1066bdec0,176,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,28667,0x1066bdf80,176,DatePrototypeGetUTCMonth
code-creation,Builtin,2,28667,0x1066be040,176,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,28667,0x1066be100,144,DatePrototypeValueOf
code-creation,Builtin,2,28708,0x1066be1a0,460,DatePrototypeToPrimitive
code-creation,Builtin,2,28708,0x1066be380,8,DatePrototypeGetYear
code-creation,Builtin,2,28708,0x1066be3a0,8,DatePrototypeSetYear
code-creation,Builtin,2,28708,0x1066be3c0,8,DateNow
code-creation,Builtin,2,28708,0x1066be3e0,8,DateParse
code-creation,Builtin,2,28708,0x1066be400,8,DatePrototypeSetDate
code-creation,Builtin,2,28708,0x1066be420,8,DatePrototypeSetFullYear
code-creation,Builtin,2,28708,0x1066be440,8,DatePrototypeSetHours
code-creation,Builtin,2,28708,0x1066be460,8,DatePrototypeSetMilliseconds
code-creation,Builtin,2,28708,0x1066be480,8,DatePrototypeSetMinutes
code-creation,Builtin,2,28708,0x1066be4a0,8,DatePrototypeSetMonth
code-creation,Builtin,2,28750,0x1066be4c0,8,DatePrototypeSetSeconds
code-creation,Builtin,2,28750,0x1066be4e0,8,DatePrototypeSetTime
code-creation,Builtin,2,28750,0x1066be500,8,DatePrototypeSetUTCDate
code-creation,Builtin,2,28750,0x1066be520,8,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,28750,0x1066be540,8,DatePrototypeSetUTCHours
code-creation,Builtin,2,28750,0x1066be560,8,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,28750,0x1066be580,8,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,28750,0x1066be5a0,8,DatePrototypeSetUTCMonth
code-creation,Builtin,2,28750,0x1066be5c0,8,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,28792,0x1066be5e0,8,DatePrototypeToDateString
code-creation,Builtin,2,28792,0x1066be600,8,DatePrototypeToISOString
code-creation,Builtin,2,28792,0x1066be620,8,DatePrototypeToUTCString
code-creation,Builtin,2,28792,0x1066be640,8,DatePrototypeToString
code-creation,Builtin,2,28792,0x1066be660,8,DatePrototypeToTimeString
code-creation,Builtin,2,28792,0x1066be680,8,DatePrototypeToJson
code-creation,Builtin,2,28792,0x1066be6a0,8,DateUTC
code-creation,Builtin,2,28792,0x1066be6c0,8,ErrorConstructor
code-creation,Builtin,2,28792,0x1066be6e0,8,ErrorCaptureStackTrace
code-creation,Builtin,2,28792,0x1066be700,8,ErrorPrototypeToString
code-creation,Builtin,2,28833,0x1066be720,8,FunctionConstructor
code-creation,Builtin,2,28833,0x1066be740,80,FunctionPrototypeApply
code-creation,Builtin,2,28833,0x1066be7a0,8,FunctionPrototypeBind
code-creation,Builtin,2,28833,0x1066be7c0,8,WebAssemblyFunctionPrototypeBind
code-creation,Builtin,2,28833,0x1066be7e0,152,FunctionPrototypeCall
code-creation,Builtin,2,28833,0x1066be880,8,FunctionPrototypeToString
code-creation,Builtin,2,28833,0x1066be8a0,276,CreateIterResultObject
code-creation,Builtin,2,28833,0x1066be9c0,1084,CreateGeneratorObject
code-creation,Builtin,2,28833,0x1066bee00,8,GeneratorFunctionConstructor
code-creation,Builtin,2,28833,0x1066bee20,436,GeneratorPrototypeNext
code-creation,Builtin,2,28875,0x1066befe0,440,GeneratorPrototypeReturn
code-creation,Builtin,2,28875,0x1066bf1a0,452,GeneratorPrototypeThrow
code-creation,Builtin,2,28875,0x1066bf380,8,AsyncFunctionConstructor
code-creation,Builtin,2,28875,0x1066bf3a0,368,SuspendGeneratorBaseline
code-creation,Builtin,2,28875,0x1066bf520,116,ResumeGeneratorBaseline
code-creation,Builtin,2,28875,0x1066bf5a0,56,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,28875,0x1066bf5e0,116,CallIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,28875,0x1066bf660,8,GlobalDecodeURI
code-creation,Builtin,2,28875,0x1066bf680,8,GlobalDecodeURIComponent
code-creation,Builtin,2,28875,0x1066bf6a0,8,GlobalEncodeURI
code-creation,Builtin,2,28917,0x1066bf6c0,8,GlobalEncodeURIComponent
code-creation,Builtin,2,28917,0x1066bf6e0,8,GlobalEscape
code-creation,Builtin,2,28917,0x1066bf700,8,GlobalUnescape
code-creation,Builtin,2,28917,0x1066bf720,8,GlobalEval
code-creation,Builtin,2,28917,0x1066bf740,160,GlobalIsFinite
code-creation,Builtin,2,28917,0x1066bf800,156,GlobalIsNaN
code-creation,Builtin,2,28917,0x1066bf8a0,8,JsonParse
code-creation,Builtin,2,28917,0x1066bf8c0,8,JsonStringify
code-creation,Builtin,2,28917,0x1066bf8e0,8,JsonRawJson
code-creation,Builtin,2,28958,0x1066bf900,8,JsonIsRawJson
code-creation,Builtin,2,28958,0x1066bf920,4716,LoadIC
code-creation,Builtin,2,28958,0x1066c0ba0,4356,LoadIC_Megamorphic
code-creation,Builtin,2,28958,0x1066c1cc0,4588,LoadIC_Noninlined
code-creation,Builtin,2,28958,0x1066c2ec0,48,LoadICTrampoline
code-creation,Builtin,2,28958,0x1066c2f00,28,LoadICBaseline
code-creation,Builtin,2,28958,0x1066c2f20,48,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,28958,0x1066c2f60,9580,LoadSuperIC
code-creation,Builtin,2,28958,0x1066c54e0,28,LoadSuperICBaseline
code-creation,Builtin,2,28958,0x1066c5500,8968,KeyedLoadIC
code-creation,Builtin,2,28958,0x1066c7820,17040,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,29000,0x1066cbac0,48,KeyedLoadICTrampoline
code-creation,Builtin,2,29000,0x1066cbb00,28,KeyedLoadICBaseline
code-creation,Builtin,2,29000,0x1066cbb20,48,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,29000,0x1066cbb60,5140,StoreGlobalIC
code-creation,Builtin,2,29000,0x1066ccf80,48,StoreGlobalICTrampoline
code-creation,Builtin,2,29000,0x1066ccfc0,28,StoreGlobalICBaseline
code-creation,Builtin,2,29000,0x1066ccfe0,5792,StoreIC
code-creation,Builtin,2,29000,0x1066ce6a0,48,StoreICTrampoline
code-creation,Builtin,2,29000,0x1066ce6e0,28,StoreICBaseline
code-creation,Builtin,2,29000,0x1066ce700,5600,DefineNamedOwnIC
code-creation,Builtin,2,29042,0x1066cfd00,48,DefineNamedOwnICTrampoline
code-creation,Builtin,2,29042,0x1066cfd40,28,DefineNamedOwnICBaseline
code-creation,Builtin,2,29042,0x1066cfd60,6236,KeyedStoreIC
code-creation,Builtin,2,29042,0x1066d15c0,48,KeyedStoreICTrampoline
code-creation,Builtin,2,29042,0x1066d1600,48,KeyedStoreICTrampoline_Megamorphic
code-creation,Builtin,2,29042,0x1066d1640,28,KeyedStoreICBaseline
code-creation,Builtin,2,29042,0x1066d1660,5724,DefineKeyedOwnIC
code-creation,Builtin,2,29042,0x1066d2cc0,56,DefineKeyedOwnICTrampoline
code-creation,Builtin,2,29042,0x1066d2d00,36,DefineKeyedOwnICBaseline
code-creation,Builtin,2,29083,0x1066d2d40,368,StoreInArrayLiteralIC
code-creation,Builtin,2,29083,0x1066d2ec0,28,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,29083,0x1066d2ee0,172,LookupContextTrampoline
code-creation,Builtin,2,29083,0x1066d2fa0,184,LookupContextBaseline
code-creation,Builtin,2,29083,0x1066d3060,172,LookupContextInsideTypeofTrampoline
code-creation,Builtin,2,29083,0x1066d3120,184,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,29083,0x1066d31e0,2740,LoadGlobalIC
code-creation,Builtin,2,29083,0x1066d3ca0,2720,LoadGlobalICInsideTypeof
code-creation,Builtin,2,29083,0x1066d4760,48,LoadGlobalICTrampoline
code-creation,Builtin,2,29083,0x1066d47a0,28,LoadGlobalICBaseline
code-creation,Builtin,2,29125,0x1066d47c0,48,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,29125,0x1066d4800,28,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,29125,0x1066d4820,152,LookupGlobalIC
code-creation,Builtin,2,29125,0x1066d48c0,192,LookupGlobalICTrampoline
code-creation,Builtin,2,29125,0x1066d49a0,176,LookupGlobalICBaseline
code-creation,Builtin,2,29125,0x1066d4a60,152,LookupGlobalICInsideTypeof
code-creation,Builtin,2,29125,0x1066d4b00,192,LookupGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,29125,0x1066d4be0,176,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,29125,0x1066d4ca0,3124,CloneObjectIC
code-creation,Builtin,2,29167,0x1066d58e0,28,CloneObjectICBaseline
code-creation,Builtin,2,29167,0x1066d5900,2840,CloneObjectIC_Slow
code-creation,Builtin,2,29167,0x1066d6420,3120,KeyedHasIC
code-creation,Builtin,2,29167,0x1066d7060,28,KeyedHasICBaseline
code-creation,Builtin,2,29167,0x1066d7080,4736,KeyedHasIC_Megamorphic
code-creation,Builtin,2,29167,0x1066d8320,1752,IterableToList
code-creation,Builtin,2,29167,0x1066d8a00,1560,IterableToFixedArray
code-creation,Builtin,2,29167,0x1066d9020,968,IterableToListWithSymbolLookup
code-creation,Builtin,2,29167,0x1066d9400,64,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,29208,0x1066d9460,120,IterableToListMayPreserveHoles
code-creation,Builtin,2,29208,0x1066d94e0,120,IterableToListConvertHoles
code-creation,Builtin,2,29208,0x1066d9560,1272,IterableToFixedArrayForWasm
code-creation,Builtin,2,29208,0x1066d9a60,1680,StringListFromIterable
code-creation,Builtin,2,29208,0x1066da100,1312,FindOrderedHashMapEntry
code-creation,Builtin,2,29208,0x1066da640,4408,MapConstructor
code-creation,Builtin,2,29208,0x1066db780,1976,MapPrototypeSet
code-creation,Builtin,2,29208,0x1066dbf40,1548,MapPrototypeDelete
code-creation,Builtin,2,29208,0x1066dc560,236,MapPrototypeGet
code-creation,Builtin,2,29250,0x1066dc660,192,MapPrototypeHas
code-creation,Builtin,2,29250,0x1066dc740,8,MapPrototypeClear
code-creation,Builtin,2,29250,0x1066dc760,288,MapPrototypeEntries
code-creation,Builtin,2,29250,0x1066dc8a0,160,MapPrototypeGetSize
code-creation,Builtin,2,29250,0x1066dc960,532,MapPrototypeForEach
code-creation,Builtin,2,29250,0x1066dcb80,288,MapPrototypeKeys
code-creation,Builtin,2,29250,0x1066dccc0,288,MapPrototypeValues
code-creation,Builtin,2,29250,0x1066dce00,868,MapIteratorPrototypeNext
code-creation,Builtin,2,29250,0x1066dd180,1192,MapIteratorToList
code-creation,Builtin,2,29250,0x1066dd640,8,NumberPrototypeToExponential
code-creation,Builtin,2,29292,0x1066dd660,8,NumberPrototypeToFixed
code-creation,Builtin,2,29292,0x1066dd680,8,NumberPrototypeToLocaleString
code-creation,Builtin,2,29292,0x1066dd6a0,8,NumberPrototypeToPrecision
code-creation,Builtin,2,29292,0x1066dd6c0,348,SameValue
code-creation,Builtin,2,29292,0x1066dd820,184,SameValueNumbersOnly
code-creation,Builtin,2,29292,0x1066dd8e0,1392,Add_Baseline
code-creation,Builtin,2,29292,0x1066dde60,932,AddSmi_Baseline
code-creation,Builtin,2,29292,0x1066de220,1396,Subtract_Baseline
code-creation,Builtin,2,29292,0x1066de7a0,1000,SubtractSmi_Baseline
code-creation,Builtin,2,29292,0x1066deba0,1492,Multiply_Baseline
code-creation,Builtin,2,29333,0x1066df180,1092,MultiplySmi_Baseline
code-creation,Builtin,2,29333,0x1066df5e0,1536,Divide_Baseline
code-creation,Builtin,2,29333,0x1066dfc00,1216,DivideSmi_Baseline
code-creation,Builtin,2,29333,0x1066e00e0,1440,Modulus_Baseline
code-creation,Builtin,2,29333,0x1066e06a0,1068,ModulusSmi_Baseline
code-creation,Builtin,2,29333,0x1066e0ae0,684,Exponentiate_Baseline
code-creation,Builtin,2,29333,0x1066e0da0,588,ExponentiateSmi_Baseline
code-creation,Builtin,2,29333,0x1066e1000,1452,BitwiseAnd_Baseline
code-creation,Builtin,2,29333,0x1066e15c0,400,BitwiseAndSmi_Baseline
code-creation,Builtin,2,29375,0x1066e1760,1452,BitwiseOr_Baseline
code-creation,Builtin,2,29375,0x1066e1d20,400,BitwiseOrSmi_Baseline
code-creation,Builtin,2,29375,0x1066e1ec0,1452,BitwiseXor_Baseline
code-creation,Builtin,2,29375,0x1066e2480,400,BitwiseXorSmi_Baseline
code-creation,Builtin,2,29375,0x1066e2620,968,ShiftLeft_Baseline
code-creation,Builtin,2,29375,0x1066e2a00,408,ShiftLeftSmi_Baseline
code-creation,Builtin,2,29375,0x1066e2ba0,968,ShiftRight_Baseline
code-creation,Builtin,2,29375,0x1066e2f80,396,ShiftRightSmi_Baseline
code-creation,Builtin,2,29375,0x1066e3120,1036,ShiftRightLogical_Baseline
code-creation,Builtin,2,29375,0x1066e3540,644,ShiftRightLogicalSmi_Baseline
code-creation,Builtin,2,29417,0x1066e37e0,1300,Add_WithFeedback
code-creation,Builtin,2,29417,0x1066e3d00,1328,Subtract_WithFeedback
code-creation,Builtin,2,29417,0x1066e4240,1416,Multiply_WithFeedback
code-creation,Builtin,2,29417,0x1066e47e0,1448,Divide_WithFeedback
code-creation,Builtin,2,29417,0x1066e4da0,1352,Modulus_WithFeedback
code-creation,Builtin,2,29417,0x1066e5300,636,Exponentiate_WithFeedback
code-creation,Builtin,2,29417,0x1066e5580,1372,BitwiseAnd_WithFeedback
code-creation,Builtin,2,29417,0x1066e5ae0,1372,BitwiseOr_WithFeedback
code-creation,Builtin,2,29417,0x1066e6040,1372,BitwiseXor_WithFeedback
code-creation,Builtin,2,29417,0x1066e65a0,896,ShiftLeft_WithFeedback
code-creation,Builtin,2,29458,0x1066e6940,896,ShiftRight_WithFeedback
code-creation,Builtin,2,29458,0x1066e6ce0,984,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,29458,0x1066e70c0,2004,Equal_Baseline
code-creation,Builtin,2,29458,0x1066e78a0,1024,StrictEqual_Baseline
code-creation,Builtin,2,29458,0x1066e7cc0,1364,LessThan_Baseline
code-creation,Builtin,2,29458,0x1066e8220,1364,GreaterThan_Baseline
code-creation,Builtin,2,29458,0x1066e8780,1364,LessThanOrEqual_Baseline
code-creation,Builtin,2,29458,0x1066e8ce0,1364,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,29500,0x1066e9240,2016,Equal_WithFeedback
code-creation,Builtin,2,29500,0x1066e9a40,1008,StrictEqual_WithFeedback
code-creation,Builtin,2,29500,0x1066e9e40,1332,LessThan_WithFeedback
code-creation,Builtin,2,29500,0x1066ea380,1332,GreaterThan_WithFeedback
code-creation,Builtin,2,29500,0x1066ea8c0,1332,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,29500,0x1066eae00,1332,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,29500,0x1066eb340,380,BitwiseNot_Baseline
code-creation,Builtin,2,29500,0x1066eb4c0,508,Decrement_Baseline
code-creation,Builtin,2,29500,0x1066eb6c0,508,Increment_Baseline
code-creation,Builtin,2,29542,0x1066eb8c0,528,Negate_Baseline
code-creation,Builtin,2,29542,0x1066ebae0,356,BitwiseNot_WithFeedback
code-creation,Builtin,2,29542,0x1066ebc60,484,Decrement_WithFeedback
code-creation,Builtin,2,29542,0x1066ebe60,484,Increment_WithFeedback
code-creation,Builtin,2,29542,0x1066ec060,504,Negate_WithFeedback
code-creation,Builtin,2,29542,0x1066ec260,300,ObjectAssign
code-creation,Builtin,2,29542,0x1066ec3a0,908,ObjectCreate
code-creation,Builtin,2,29542,0x1066ec740,8,ObjectDefineGetter
code-creation,Builtin,2,29542,0x1066ec760,8,ObjectDefineProperties
code-creation,Builtin,2,29542,0x1066ec780,8,ObjectDefineProperty
code-creation,Builtin,2,29583,0x1066ec7a0,8,ObjectDefineSetter
code-creation,Builtin,2,29583,0x1066ec7c0,1464,ObjectEntries
code-creation,Builtin,2,29583,0x1066ecd80,8,ObjectFreeze
code-creation,Builtin,2,29583,0x1066ecda0,4552,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,29583,0x1066edf80,8,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,29583,0x1066edfa0,924,ObjectGetOwnPropertyNames
code-creation,Builtin,2,29583,0x1066ee340,8,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,29583,0x1066ee360,208,ObjectHasOwn
code-creation,Builtin,2,29583,0x1066ee440,400,ObjectIs
code-creation,Builtin,2,29583,0x1066ee5e0,8,ObjectIsFrozen
code-creation,Builtin,2,29625,0x1066ee600,8,ObjectIsSealed
code-creation,Builtin,2,29625,0x1066ee620,864,ObjectKeys
code-creation,Builtin,2,29625,0x1066ee9a0,8,ObjectLookupGetter
code-creation,Builtin,2,29625,0x1066ee9c0,8,ObjectLookupSetter
code-creation,Builtin,2,29625,0x1066ee9e0,2996,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,29625,0x1066ef5a0,268,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,29625,0x1066ef6c0,8,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,29625,0x1066ef6e0,8,ObjectPrototypeGetProto
code-creation,Builtin,2,29625,0x1066ef700,8,ObjectPrototypeSetProto
code-creation,Builtin,2,29625,0x1066ef720,8,ObjectSeal
code-creation,Builtin,2,29667,0x1066ef740,1316,ObjectToString
code-creation,Builtin,2,29667,0x1066efc80,1220,ObjectValues
code-creation,Builtin,2,29667,0x1066f0160,416,OrdinaryHasInstance
code-creation,Builtin,2,29667,0x1066f0320,444,InstanceOf
code-creation,Builtin,2,29667,0x1066f04e0,844,InstanceOf_WithFeedback
code-creation,Builtin,2,29667,0x1066f0840,864,InstanceOf_Baseline
code-creation,Builtin,2,29667,0x1066f0bc0,276,ForInEnumerate
code-creation,Builtin,2,29667,0x1066f0ce0,136,ForInPrepare
code-creation,Builtin,2,29667,0x1066f0d80,4720,ForInFilter
code-creation,Builtin,2,29667,0x1066f2000,68,ReflectApply
code-creation,Builtin,2,29708,0x1066f2060,72,ReflectConstruct
code-creation,Builtin,2,29708,0x1066f20c0,8,ReflectDefineProperty
code-creation,Builtin,2,29708,0x1066f20e0,8,ReflectOwnKeys
code-creation,Builtin,2,29708,0x1066f2100,8,ReflectSet
code-creation,Builtin,2,29708,0x1066f2120,8,RegExpCapture1Getter
code-creation,Builtin,2,29708,0x1066f2140,8,RegExpCapture2Getter
code-creation,Builtin,2,29708,0x1066f2160,8,RegExpCapture3Getter
code-creation,Builtin,2,29708,0x1066f2180,8,RegExpCapture4Getter
code-creation,Builtin,2,29708,0x1066f21a0,8,RegExpCapture5Getter
code-creation,Builtin,2,29708,0x1066f21c0,8,RegExpCapture6Getter
code-creation,Builtin,2,29750,0x1066f21e0,8,RegExpCapture7Getter
code-creation,Builtin,2,29750,0x1066f2200,8,RegExpCapture8Getter
code-creation,Builtin,2,29750,0x1066f2220,8,RegExpCapture9Getter
code-creation,Builtin,2,29750,0x1066f2240,2288,RegExpConstructor
code-creation,Builtin,2,29750,0x1066f2b40,8,RegExpInputGetter
code-creation,Builtin,2,29750,0x1066f2b60,8,RegExpInputSetter
code-creation,Builtin,2,29750,0x1066f2b80,8,RegExpLastMatchGetter
code-creation,Builtin,2,29750,0x1066f2ba0,8,RegExpLastParenGetter
code-creation,Builtin,2,29750,0x1066f2bc0,8,RegExpLeftContextGetter
code-creation,Builtin,2,29792,0x1066f2be0,852,RegExpPrototypeCompile
code-creation,Builtin,2,29792,0x1066f2f40,8,RegExpPrototypeToString
code-creation,Builtin,2,29792,0x1066f2f60,8,RegExpRightContextGetter
code-creation,Builtin,2,29792,0x1066f2f80,240,RegExpExecAtom
code-creation,Builtin,2,29792,0x1066f3080,1188,RegExpExecInternal
code-creation,Builtin,2,29792,0x1066f3540,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,29792,0x1066f3560,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,29792,0x1066f3580,1284,FindOrderedHashSetEntry
code-creation,Builtin,2,29792,0x1066f3aa0,3124,SetConstructor
code-creation,Builtin,2,29792,0x1066f46e0,192,SetPrototypeHas
code-creation,Builtin,2,29833,0x1066f47c0,1776,SetPrototypeAdd
code-creation,Builtin,2,29833,0x1066f4ec0,1556,SetPrototypeDelete
code-creation,Builtin,2,29833,0x1066f54e0,8,SetPrototypeClear
code-creation,Builtin,2,29833,0x1066f5500,288,SetPrototypeEntries
code-creation,Builtin,2,29833,0x1066f5640,160,SetPrototypeGetSize
code-creation,Builtin,2,29833,0x1066f5700,500,SetPrototypeForEach
code-creation,Builtin,2,29833,0x1066f5900,288,SetPrototypeValues
code-creation,Builtin,2,29833,0x1066f5a40,800,SetIteratorPrototypeNext
code-creation,Builtin,2,29833,0x1066f5d80,1144,SetOrSetIteratorToList
code-creation,Builtin,2,29833,0x1066f6200,8,ShadowRealmConstructor
code-creation,Builtin,2,29875,0x1066f6220,708,ShadowRealmGetWrappedValue
code-creation,Builtin,2,29875,0x1066f6500,8,ShadowRealmPrototypeEvaluate
code-creation,Builtin,2,29875,0x1066f6520,1388,ShadowRealmPrototypeImportValue
code-creation,Builtin,2,29875,0x1066f6aa0,284,ShadowRealmImportValueFulfilled
code-creation,Builtin,2,29875,0x1066f6bc0,88,ShadowRealmImportValueRejected
code-creation,Builtin,2,29875,0x1066f6c20,8,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,29875,0x1066f6c40,8,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,29875,0x1066f6c60,8,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,29875,0x1066f6c80,2056,AtomicsLoad
code-creation,Builtin,2,29917,0x1066f74a0,2196,AtomicsStore
code-creation,Builtin,2,29917,0x1066f7d40,2780,AtomicsExchange
code-creation,Builtin,2,29917,0x1066f8820,3152,AtomicsCompareExchange
code-creation,Builtin,2,29917,0x1066f9480,2648,AtomicsAdd
code-creation,Builtin,2,29917,0x1066f9ee0,2680,AtomicsSub
code-creation,Builtin,2,29917,0x1066fa960,2680,AtomicsAnd
code-creation,Builtin,2,29917,0x1066fb3e0,2648,AtomicsOr
code-creation,Builtin,2,29917,0x1066fbe40,2648,AtomicsXor
code-creation,Builtin,2,29917,0x1066fc8a0,8,AtomicsNotify
code-creation,Builtin,2,29917,0x1066fc8c0,8,AtomicsIsLockFree
code-creation,Builtin,2,29917,0x1066fc8e0,8,AtomicsWait
code-creation,Builtin,2,29958,0x1066fc900,8,AtomicsWaitAsync
code-creation,Builtin,2,29958,0x1066fc920,8,StringFromCodePoint
code-creation,Builtin,2,29958,0x1066fc940,1356,StringFromCharCode
code-creation,Builtin,2,29958,0x1066fcea0,8,StringPrototypeLastIndexOf
code-creation,Builtin,2,29958,0x1066fcec0,4592,StringPrototypeMatchAll
code-creation,Builtin,2,29958,0x1066fe0c0,8,StringPrototypeLocaleCompare
code-creation,Builtin,2,29958,0x1066fe0e0,1296,StringPrototypeReplace
code-creation,Builtin,2,29958,0x1066fe600,2764,StringPrototypeSplit
code-creation,Builtin,2,29958,0x1066ff0e0,8,StringRaw
code-creation,Builtin,2,29958,0x1066ff100,8,SymbolConstructor
code-creation,Builtin,2,30000,0x1066ff120,8,SymbolFor
code-creation,Builtin,2,30000,0x1066ff140,8,SymbolKeyFor
code-creation,Builtin,2,30000,0x1066ff160,96,TypedArrayBaseConstructor
code-creation,Builtin,2,30000,0x1066ff1e0,304,TypedArrayConstructor
code-creation,Builtin,2,30000,0x1066ff320,8,TypedArrayPrototypeBuffer
code-creation,Builtin,2,30000,0x1066ff340,868,TypedArrayPrototypeByteLength
code-creation,Builtin,2,30000,0x1066ff6c0,328,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,30000,0x1066ff820,588,TypedArrayPrototypeLength
code-creation,Builtin,2,30000,0x1066ffa80,8,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,30042,0x1066ffaa0,8,TypedArrayPrototypeFill
code-creation,Builtin,2,30042,0x1066ffac0,8,TypedArrayPrototypeIncludes
code-creation,Builtin,2,30042,0x1066ffae0,8,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,30042,0x1066ffb00,8,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,30042,0x1066ffb20,8,TypedArrayPrototypeReverse
code-creation,Builtin,2,30042,0x1066ffb40,540,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,30042,0x1066ffd60,25788,TypedArrayPrototypeMap
code-creation,Builtin,2,30042,0x106706220,208,JSToWasmWrapperAsm
code-creation,Builtin,2,30042,0x106706300,760,WasmReturnPromiseOnSuspendAsm
code-creation,Builtin,2,30083,0x106706600,40,WasmToJsWrapperAsm
code-creation,Builtin,2,30083,0x106706640,5068,WasmToJsWrapperCSA
code-creation,Builtin,2,30083,0x106707a20,200,WasmSuspend
code-creation,Builtin,2,30083,0x106707b00,308,WasmResume
code-creation,Builtin,2,30083,0x106707c40,324,WasmReject
code-creation,Builtin,2,30083,0x106707da0,8,WasmTrapHandlerLandingPad
code-creation,Builtin,2,30083,0x106707dc0,132,WasmCompileLazy
code-creation,Builtin,2,30083,0x106707e60,148,WasmLiftoffFrameSetup
code-creation,Builtin,2,30083,0x106707f00,260,WasmDebugBreak
code-creation,Builtin,2,30083,0x106708020,4,WasmOnStackReplace
code-creation,Builtin,2,30083,0x106708040,152,WasmFloat32ToNumber
code-creation,Builtin,2,30125,0x1067080e0,140,WasmFloat64ToNumber
code-creation,Builtin,2,30125,0x106708180,1524,WasmFloat64ToString
code-creation,Builtin,2,30125,0x106708780,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,30125,0x1067087a0,4672,WeakMapConstructor
code-creation,Builtin,2,30125,0x106709a00,268,WeakMapLookupHashIndex
code-creation,Builtin,2,30125,0x106709b20,244,WeakMapGet
code-creation,Builtin,2,30125,0x106709c20,204,WeakMapPrototypeHas
code-creation,Builtin,2,30125,0x106709d00,260,WeakMapPrototypeSet
code-creation,Builtin,2,30125,0x106709e20,212,WeakMapPrototypeDelete
code-creation,Builtin,2,30125,0x106709f00,3316,WeakSetConstructor
code-creation,Builtin,2,30167,0x10670ac00,204,WeakSetPrototypeHas
code-creation,Builtin,2,30167,0x10670ace0,260,WeakSetPrototypeAdd
code-creation,Builtin,2,30167,0x10670ae00,212,WeakSetPrototypeDelete
code-creation,Builtin,2,30167,0x10670aee0,476,WeakCollectionDelete
code-creation,Builtin,2,30167,0x10670b0c0,768,WeakCollectionSet
code-creation,Builtin,2,30167,0x10670b3e0,8,SharedSpaceJSObjectHasInstance
code-creation,Builtin,2,30167,0x10670b400,8,SharedStructTypeConstructor
code-creation,Builtin,2,30167,0x10670b420,8,SharedStructTypeIsSharedStruct
code-creation,Builtin,2,30167,0x10670b440,8,SharedStructConstructor
code-creation,Builtin,2,30167,0x10670b460,8,SharedArrayConstructor
code-creation,Builtin,2,30208,0x10670b480,8,SharedArrayIsSharedArray
code-creation,Builtin,2,30208,0x10670b4a0,8,AtomicsMutexConstructor
code-creation,Builtin,2,30208,0x10670b4c0,8,AtomicsMutexIsMutex
code-creation,Builtin,2,30208,0x10670b4e0,8,AtomicsMutexLock
code-creation,Builtin,2,30208,0x10670b500,8,AtomicsMutexLockWithTimeout
code-creation,Builtin,2,30208,0x10670b520,8,AtomicsMutexTryLock
code-creation,Builtin,2,30208,0x10670b540,8,AtomicsConditionConstructor
code-creation,Builtin,2,30208,0x10670b560,8,AtomicsConditionIsCondition
code-creation,Builtin,2,30208,0x10670b580,8,AtomicsConditionWait
code-creation,Builtin,2,30208,0x10670b5a0,8,AtomicsConditionNotify
code-creation,Builtin,2,30250,0x10670b5c0,340,AsyncGeneratorResolve
code-creation,Builtin,2,30250,0x10670b720,108,AsyncGeneratorReject
code-creation,Builtin,2,30250,0x10670b7a0,1992,AsyncGeneratorYieldWithAwait
code-creation,Builtin,2,30250,0x10670bf80,2332,AsyncGeneratorReturn
code-creation,Builtin,2,30250,0x10670c8a0,376,AsyncGeneratorResumeNext
code-creation,Builtin,2,30250,0x10670ca20,8,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,30250,0x10670ca40,1064,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,30250,0x10670ce80,1072,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,30292,0x10670d2c0,1072,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,30292,0x10670d700,1964,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,30292,0x10670dec0,1964,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,30292,0x10670e680,188,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,30292,0x10670e740,188,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,30292,0x10670e800,128,AsyncGeneratorYieldWithAwaitResolveClosure
code-creation,Builtin,2,30292,0x10670e8a0,128,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,30292,0x10670e940,124,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,30292,0x10670e9c0,192,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,30292,0x10670eaa0,1732,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,30333,0x10670f180,1852,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,30333,0x10670f8c0,1876,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,30333,0x106710020,128,AsyncIteratorValueUnwrap
code-creation,Builtin,2,30333,0x1067100c0,208,CEntry_Return1_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,30333,0x1067101a0,236,CEntry_Return1_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,30333,0x1067102a0,236,CEntry_Return1_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,30333,0x1067103a0,208,CEntry_Return2_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,30333,0x106710480,236,CEntry_Return2_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,30333,0x106710580,236,CEntry_Return2_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,30375,0x106710680,376,WasmCEntry
code-creation,Builtin,2,30375,0x106710800,16,DirectCEntry
code-creation,Builtin,2,30375,0x106710820,1408,StringAdd_CheckNone
code-creation,Builtin,2,30375,0x106710dc0,3736,SubString
code-creation,Builtin,2,30375,0x106711c60,80,DoubleToI
code-creation,Builtin,2,30375,0x106711cc0,3660,GetProperty
code-creation,Builtin,2,30375,0x106712b20,4012,GetPropertyWithReceiver
code-creation,Builtin,2,30375,0x106713ae0,16400,SetProperty
code-creation,Builtin,2,30375,0x106717b00,13436,CreateDataProperty
code-creation,Builtin,2,30417,0x10671af80,48,GetOwnPropertyDescriptor
code-creation,Builtin,2,30417,0x10671afc0,4,MemCopyUint8Uint8
code-creation,Builtin,2,30417,0x10671afe0,4,MemMove
code-creation,Builtin,2,30417,0x10671b000,192,FindNonDefaultConstructorOrConstruct
code-creation,Builtin,2,30417,0x10671b0e0,2692,OrdinaryGetOwnPropertyDescriptor
code-creation,Builtin,2,30417,0x10671bb80,8,IsTraceCategoryEnabled
code-creation,Builtin,2,30417,0x10671bba0,8,Trace
code-creation,Builtin,2,30417,0x10671bbc0,8,FinalizationRegistryUnregister
code-creation,Builtin,2,30417,0x10671bbe0,440,AsyncModuleEvaluate
code-creation,Builtin,2,30458,0x10671bda0,8,CallAsyncModuleFulfilled
code-creation,Builtin,2,30458,0x10671bdc0,8,CallAsyncModuleRejected
code-creation,Builtin,2,30458,0x10671bde0,8,TemporalNowTimeZone
code-creation,Builtin,2,30458,0x10671be00,8,TemporalNowInstant
code-creation,Builtin,2,30458,0x10671be20,8,TemporalNowPlainDateTime
code-creation,Builtin,2,30458,0x10671be40,8,TemporalNowPlainDateTimeISO
code-creation,Builtin,2,30458,0x10671be60,8,TemporalNowZonedDateTime
code-creation,Builtin,2,30458,0x10671be80,8,TemporalNowZonedDateTimeISO
code-creation,Builtin,2,30458,0x10671bea0,8,TemporalNowPlainDate
code-creation,Builtin,2,30458,0x10671bec0,8,TemporalNowPlainDateISO
code-creation,Builtin,2,30500,0x10671bee0,8,TemporalNowPlainTimeISO
code-creation,Builtin,2,30500,0x10671bf00,8,TemporalPlainDateConstructor
code-creation,Builtin,2,30500,0x10671bf20,8,TemporalPlainDateFrom
code-creation,Builtin,2,30500,0x10671bf40,8,TemporalPlainDateCompare
code-creation,Builtin,2,30500,0x10671bf60,8,TemporalPlainDatePrototypeCalendar
code-creation,Builtin,2,30500,0x10671bf80,8,TemporalPlainDatePrototypeYear
code-creation,Builtin,2,30500,0x10671bfa0,8,TemporalPlainDatePrototypeMonth
code-creation,Builtin,2,30500,0x10671bfc0,8,TemporalPlainDatePrototypeMonthCode
code-creation,Builtin,2,30542,0x10671bfe0,8,TemporalPlainDatePrototypeDay
code-creation,Builtin,2,30542,0x10671c000,8,TemporalPlainDatePrototypeDayOfWeek
code-creation,Builtin,2,30542,0x10671c020,8,TemporalPlainDatePrototypeDayOfYear
code-creation,Builtin,2,30542,0x10671c040,8,TemporalPlainDatePrototypeWeekOfYear
code-creation,Builtin,2,30542,0x10671c060,8,TemporalPlainDatePrototypeDaysInWeek
code-creation,Builtin,2,30542,0x10671c080,8,TemporalPlainDatePrototypeDaysInMonth
code-creation,Builtin,2,30542,0x10671c0a0,8,TemporalPlainDatePrototypeDaysInYear
code-creation,Builtin,2,30542,0x10671c0c0,8,TemporalPlainDatePrototypeMonthsInYear
code-creation,Builtin,2,30542,0x10671c0e0,8,TemporalPlainDatePrototypeInLeapYear
code-creation,Builtin,2,30583,0x10671c100,8,TemporalPlainDatePrototypeToPlainYearMonth
code-creation,Builtin,2,30583,0x10671c120,8,TemporalPlainDatePrototypeToPlainMonthDay
code-creation,Builtin,2,30583,0x10671c140,8,TemporalPlainDatePrototypeGetISOFields
code-creation,Builtin,2,30583,0x10671c160,8,TemporalPlainDatePrototypeAdd
code-creation,Builtin,2,30583,0x10671c180,8,TemporalPlainDatePrototypeSubtract
code-creation,Builtin,2,30625,0x10671c1a0,8,TemporalPlainDatePrototypeWith
code-creation,Builtin,2,30625,0x10671c1c0,8,TemporalPlainDatePrototypeWithCalendar
code-creation,Builtin,2,30625,0x10671c1e0,8,TemporalPlainDatePrototypeUntil
code-creation,Builtin,2,30625,0x10671c200,8,TemporalPlainDatePrototypeSince
code-creation,Builtin,2,30667,0x10671c220,8,TemporalPlainDatePrototypeEquals
code-creation,Builtin,2,30667,0x10671c240,8,TemporalPlainDatePrototypeToPlainDateTime
code-creation,Builtin,2,30667,0x10671c260,8,TemporalPlainDatePrototypeToZonedDateTime
code-creation,Builtin,2,30667,0x10671c280,8,TemporalPlainDatePrototypeToString
code-creation,Builtin,2,30667,0x10671c2a0,8,TemporalPlainDatePrototypeToJSON
code-creation,Builtin,2,30667,0x10671c2c0,8,TemporalPlainDatePrototypeToLocaleString
code-creation,Builtin,2,30667,0x10671c2e0,8,TemporalPlainDatePrototypeValueOf
code-creation,Builtin,2,30667,0x10671c300,8,TemporalPlainTimeConstructor
code-creation,Builtin,2,30667,0x10671c320,8,TemporalPlainTimeFrom
code-creation,Builtin,2,30708,0x10671c340,8,TemporalPlainTimeCompare
code-creation,Builtin,2,30708,0x10671c360,8,TemporalPlainTimePrototypeCalendar
code-creation,Builtin,2,30708,0x10671c380,8,TemporalPlainTimePrototypeHour
code-creation,Builtin,2,30708,0x10671c3a0,8,TemporalPlainTimePrototypeMinute
code-creation,Builtin,2,30708,0x10671c3c0,8,TemporalPlainTimePrototypeSecond
code-creation,Builtin,2,30708,0x10671c3e0,8,TemporalPlainTimePrototypeMillisecond
code-creation,Builtin,2,30708,0x10671c400,8,TemporalPlainTimePrototypeMicrosecond
code-creation,Builtin,2,30708,0x10671c420,8,TemporalPlainTimePrototypeNanosecond
code-creation,Builtin,2,30708,0x10671c440,8,TemporalPlainTimePrototypeAdd
code-creation,Builtin,2,30750,0x10671c460,8,TemporalPlainTimePrototypeSubtract
code-creation,Builtin,2,30750,0x10671c480,8,TemporalPlainTimePrototypeWith
code-creation,Builtin,2,30750,0x10671c4a0,8,TemporalPlainTimePrototypeUntil
code-creation,Builtin,2,30750,0x10671c4c0,8,TemporalPlainTimePrototypeSince
code-creation,Builtin,2,30750,0x10671c4e0,8,TemporalPlainTimePrototypeRound
code-creation,Builtin,2,30750,0x10671c500,8,TemporalPlainTimePrototypeEquals
code-creation,Builtin,2,30750,0x10671c520,8,TemporalPlainTimePrototypeToPlainDateTime
code-creation,Builtin,2,30750,0x10671c540,8,TemporalPlainTimePrototypeToZonedDateTime
code-creation,Builtin,2,30792,0x10671c560,8,TemporalPlainTimePrototypeGetISOFields
code-creation,Builtin,2,30792,0x10671c580,8,TemporalPlainTimePrototypeToString
code-creation,Builtin,2,30792,0x10671c5a0,8,TemporalPlainTimePrototypeToJSON
code-creation,Builtin,2,30792,0x10671c5c0,8,TemporalPlainTimePrototypeToLocaleString
code-creation,Builtin,2,30792,0x10671c5e0,8,TemporalPlainTimePrototypeValueOf
code-creation,Builtin,2,30792,0x10671c600,8,TemporalPlainDateTimeConstructor
code-creation,Builtin,2,30792,0x10671c620,8,TemporalPlainDateTimeFrom
code-creation,Builtin,2,30792,0x10671c640,8,TemporalPlainDateTimeCompare
code-creation,Builtin,2,30792,0x10671c660,8,TemporalPlainDateTimePrototypeCalendar
code-creation,Builtin,2,30833,0x10671c680,8,TemporalPlainDateTimePrototypeYear
code-creation,Builtin,2,30833,0x10671c6a0,8,TemporalPlainDateTimePrototypeMonth
code-creation,Builtin,2,30833,0x10671c6c0,8,TemporalPlainDateTimePrototypeMonthCode
code-creation,Builtin,2,30833,0x10671c6e0,8,TemporalPlainDateTimePrototypeDay
code-creation,Builtin,2,30833,0x10671c700,8,TemporalPlainDateTimePrototypeHour
code-creation,Builtin,2,30833,0x10671c720,8,TemporalPlainDateTimePrototypeMinute
code-creation,Builtin,2,30833,0x10671c740,8,TemporalPlainDateTimePrototypeSecond
code-creation,Builtin,2,30833,0x10671c760,8,TemporalPlainDateTimePrototypeMillisecond
code-creation,Builtin,2,30833,0x10671c780,8,TemporalPlainDateTimePrototypeMicrosecond
code-creation,Builtin,2,30875,0x10671c7a0,8,TemporalPlainDateTimePrototypeNanosecond
code-creation,Builtin,2,30875,0x10671c7c0,8,TemporalPlainDateTimePrototypeDayOfWeek
code-creation,Builtin,2,30875,0x10671c7e0,8,TemporalPlainDateTimePrototypeDayOfYear
code-creation,Builtin,2,30875,0x10671c800,8,TemporalPlainDateTimePrototypeWeekOfYear
code-creation,Builtin,2,30875,0x10671c820,8,TemporalPlainDateTimePrototypeDaysInWeek
code-creation,Builtin,2,30875,0x10671c840,8,TemporalPlainDateTimePrototypeDaysInMonth
code-creation,Builtin,2,30875,0x10671c860,8,TemporalPlainDateTimePrototypeDaysInYear
code-creation,Builtin,2,30875,0x10671c880,8,TemporalPlainDateTimePrototypeMonthsInYear
code-creation,Builtin,2,30917,0x10671c8a0,8,TemporalPlainDateTimePrototypeInLeapYear
code-creation,Builtin,2,30917,0x10671c8c0,8,TemporalPlainDateTimePrototypeWith
code-creation,Builtin,2,30917,0x10671c8e0,8,TemporalPlainDateTimePrototypeWithPlainTime
code-creation,Builtin,2,30917,0x10671c900,8,TemporalPlainDateTimePrototypeWithPlainDate
code-creation,Builtin,2,30917,0x10671c920,8,TemporalPlainDateTimePrototypeWithCalendar
code-creation,Builtin,2,30917,0x10671c940,8,TemporalPlainDateTimePrototypeAdd
code-creation,Builtin,2,30917,0x10671c960,8,TemporalPlainDateTimePrototypeSubtract
code-creation,Builtin,2,30917,0x10671c980,8,TemporalPlainDateTimePrototypeUntil
code-creation,Builtin,2,30917,0x10671c9a0,8,TemporalPlainDateTimePrototypeSince
code-creation,Builtin,2,30958,0x10671c9c0,8,TemporalPlainDateTimePrototypeRound
code-creation,Builtin,2,30958,0x10671c9e0,8,TemporalPlainDateTimePrototypeEquals
code-creation,Builtin,2,30958,0x10671ca00,8,TemporalPlainDateTimePrototypeToString
code-creation,Builtin,2,30958,0x10671ca20,8,TemporalPlainDateTimePrototypeToJSON
code-creation,Builtin,2,30958,0x10671ca40,8,TemporalPlainDateTimePrototypeToLocaleString
code-creation,Builtin,2,30958,0x10671ca60,8,TemporalPlainDateTimePrototypeValueOf
code-creation,Builtin,2,30958,0x10671ca80,8,TemporalPlainDateTimePrototypeToZonedDateTime
code-creation,Builtin,2,30958,0x10671caa0,8,TemporalPlainDateTimePrototypeToPlainDate
code-creation,Builtin,2,30958,0x10671cac0,8,TemporalPlainDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,31000,0x10671cae0,8,TemporalPlainDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,31000,0x10671cb00,8,TemporalPlainDateTimePrototypeToPlainTime
code-creation,Builtin,2,31000,0x10671cb20,8,TemporalPlainDateTimePrototypeGetISOFields
code-creation,Builtin,2,31000,0x10671cb40,8,TemporalZonedDateTimeConstructor
code-creation,Builtin,2,31000,0x10671cb60,8,TemporalZonedDateTimeFrom
code-creation,Builtin,2,31000,0x10671cb80,8,TemporalZonedDateTimeCompare
code-creation,Builtin,2,31000,0x10671cba0,8,TemporalZonedDateTimePrototypeCalendar
code-creation,Builtin,2,31000,0x10671cbc0,8,TemporalZonedDateTimePrototypeTimeZone
code-creation,Builtin,2,31000,0x10671cbe0,8,TemporalZonedDateTimePrototypeYear
code-creation,Builtin,2,31042,0x10671cc00,8,TemporalZonedDateTimePrototypeMonth
code-creation,Builtin,2,31042,0x10671cc20,8,TemporalZonedDateTimePrototypeMonthCode
code-creation,Builtin,2,31042,0x10671cc40,8,TemporalZonedDateTimePrototypeDay
code-creation,Builtin,2,31042,0x10671cc60,8,TemporalZonedDateTimePrototypeHour
code-creation,Builtin,2,31042,0x10671cc80,8,TemporalZonedDateTimePrototypeMinute
code-creation,Builtin,2,31042,0x10671cca0,8,TemporalZonedDateTimePrototypeSecond
code-creation,Builtin,2,31042,0x10671ccc0,8,TemporalZonedDateTimePrototypeMillisecond
code-creation,Builtin,2,31042,0x10671cce0,8,TemporalZonedDateTimePrototypeMicrosecond
code-creation,Builtin,2,31083,0x10671cd00,8,TemporalZonedDateTimePrototypeNanosecond
code-creation,Builtin,2,31083,0x10671cd20,8,TemporalZonedDateTimePrototypeEpochSeconds
code-creation,Builtin,2,31083,0x10671cd40,8,TemporalZonedDateTimePrototypeEpochMilliseconds
code-creation,Builtin,2,31083,0x10671cd60,8,TemporalZonedDateTimePrototypeEpochMicroseconds
code-creation,Builtin,2,31083,0x10671cd80,8,TemporalZonedDateTimePrototypeEpochNanoseconds
code-creation,Builtin,2,31083,0x10671cda0,8,TemporalZonedDateTimePrototypeDayOfWeek
code-creation,Builtin,2,31083,0x10671cdc0,8,TemporalZonedDateTimePrototypeDayOfYear
code-creation,Builtin,2,31083,0x10671cde0,8,TemporalZonedDateTimePrototypeWeekOfYear
code-creation,Builtin,2,31083,0x10671ce00,8,TemporalZonedDateTimePrototypeHoursInDay
code-creation,Builtin,2,31125,0x10671ce20,8,TemporalZonedDateTimePrototypeDaysInWeek
code-creation,Builtin,2,31125,0x10671ce40,8,TemporalZonedDateTimePrototypeDaysInMonth
code-creation,Builtin,2,31125,0x10671ce60,8,TemporalZonedDateTimePrototypeDaysInYear
code-creation,Builtin,2,31125,0x10671ce80,8,TemporalZonedDateTimePrototypeMonthsInYear
code-creation,Builtin,2,31125,0x10671cea0,8,TemporalZonedDateTimePrototypeInLeapYear
code-creation,Builtin,2,31125,0x10671cec0,8,TemporalZonedDateTimePrototypeOffsetNanoseconds
code-creation,Builtin,2,31125,0x10671cee0,8,TemporalZonedDateTimePrototypeOffset
code-creation,Builtin,2,31125,0x10671cf00,8,TemporalZonedDateTimePrototypeWith
code-creation,Builtin,2,31125,0x10671cf20,8,TemporalZonedDateTimePrototypeWithPlainTime
code-creation,Builtin,2,31167,0x10671cf40,8,TemporalZonedDateTimePrototypeWithPlainDate
code-creation,Builtin,2,31167,0x10671cf60,8,TemporalZonedDateTimePrototypeWithTimeZone
code-creation,Builtin,2,31167,0x10671cf80,8,TemporalZonedDateTimePrototypeWithCalendar
code-creation,Builtin,2,31167,0x10671cfa0,8,TemporalZonedDateTimePrototypeAdd
code-creation,Builtin,2,31167,0x10671cfc0,8,TemporalZonedDateTimePrototypeSubtract
code-creation,Builtin,2,31167,0x10671cfe0,8,TemporalZonedDateTimePrototypeUntil
code-creation,Builtin,2,31167,0x10671d000,8,TemporalZonedDateTimePrototypeSince
code-creation,Builtin,2,31167,0x10671d020,8,TemporalZonedDateTimePrototypeRound
code-creation,Builtin,2,31167,0x10671d040,8,TemporalZonedDateTimePrototypeEquals
code-creation,Builtin,2,31208,0x10671d060,8,TemporalZonedDateTimePrototypeToString
code-creation,Builtin,2,31208,0x10671d080,8,TemporalZonedDateTimePrototypeToJSON
code-creation,Builtin,2,31208,0x10671d0a0,8,TemporalZonedDateTimePrototypeToLocaleString
code-creation,Builtin,2,31208,0x10671d0c0,8,TemporalZonedDateTimePrototypeValueOf
code-creation,Builtin,2,31208,0x10671d0e0,8,TemporalZonedDateTimePrototypeStartOfDay
code-creation,Builtin,2,31208,0x10671d100,8,TemporalZonedDateTimePrototypeToInstant
code-creation,Builtin,2,31208,0x10671d120,8,TemporalZonedDateTimePrototypeToPlainDate
code-creation,Builtin,2,31208,0x10671d140,8,TemporalZonedDateTimePrototypeToPlainTime
code-creation,Builtin,2,31208,0x10671d160,8,TemporalZonedDateTimePrototypeToPlainDateTime
code-creation,Builtin,2,31250,0x10671d180,8,TemporalZonedDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,31250,0x10671d1a0,8,TemporalZonedDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,31250,0x10671d1c0,8,TemporalZonedDateTimePrototypeGetISOFields
code-creation,Builtin,2,31250,0x10671d1e0,8,TemporalDurationConstructor
code-creation,Builtin,2,31250,0x10671d200,8,TemporalDurationFrom
code-creation,Builtin,2,31250,0x10671d220,8,TemporalDurationCompare
code-creation,Builtin,2,31250,0x10671d240,8,TemporalDurationPrototypeYears
code-creation,Builtin,2,31250,0x10671d260,8,TemporalDurationPrototypeMonths
code-creation,Builtin,2,31292,0x10671d280,8,TemporalDurationPrototypeWeeks
code-creation,Builtin,2,31292,0x10671d2a0,8,TemporalDurationPrototypeDays
code-creation,Builtin,2,31292,0x10671d2c0,8,TemporalDurationPrototypeHours
code-creation,Builtin,2,31292,0x10671d2e0,8,TemporalDurationPrototypeMinutes
code-creation,Builtin,2,31292,0x10671d300,8,TemporalDurationPrototypeSeconds
code-creation,Builtin,2,31292,0x10671d320,8,TemporalDurationPrototypeMilliseconds
code-creation,Builtin,2,31292,0x10671d340,8,TemporalDurationPrototypeMicroseconds
code-creation,Builtin,2,31292,0x10671d360,8,TemporalDurationPrototypeNanoseconds
code-creation,Builtin,2,31292,0x10671d380,8,TemporalDurationPrototypeSign
code-creation,Builtin,2,31333,0x10671d3a0,8,TemporalDurationPrototypeBlank
code-creation,Builtin,2,31333,0x10671d3c0,8,TemporalDurationPrototypeWith
code-creation,Builtin,2,31333,0x10671d3e0,8,TemporalDurationPrototypeNegated
code-creation,Builtin,2,31333,0x10671d400,8,TemporalDurationPrototypeAbs
code-creation,Builtin,2,31333,0x10671d420,8,TemporalDurationPrototypeAdd
code-creation,Builtin,2,31333,0x10671d440,8,TemporalDurationPrototypeSubtract
code-creation,Builtin,2,31333,0x10671d460,8,TemporalDurationPrototypeRound
code-creation,Builtin,2,31333,0x10671d480,8,TemporalDurationPrototypeTotal
code-creation,Builtin,2,31333,0x10671d4a0,8,TemporalDurationPrototypeToString
code-creation,Builtin,2,31333,0x10671d4c0,8,TemporalDurationPrototypeToJSON
code-creation,Builtin,2,31375,0x10671d4e0,8,TemporalDurationPrototypeToLocaleString
code-creation,Builtin,2,31375,0x10671d500,8,TemporalDurationPrototypeValueOf
code-creation,Builtin,2,31375,0x10671d520,8,TemporalInstantConstructor
code-creation,Builtin,2,31375,0x10671d540,8,TemporalInstantFrom
code-creation,Builtin,2,31375,0x10671d560,8,TemporalInstantFromEpochSeconds
code-creation,Builtin,2,31375,0x10671d580,8,TemporalInstantFromEpochMilliseconds
code-creation,Builtin,2,31375,0x10671d5a0,8,TemporalInstantFromEpochMicroseconds
code-creation,Builtin,2,31375,0x10671d5c0,8,TemporalInstantFromEpochNanoseconds
code-creation,Builtin,2,31375,0x10671d5e0,8,TemporalInstantCompare
code-creation,Builtin,2,31417,0x10671d600,8,TemporalInstantPrototypeEpochSeconds
code-creation,Builtin,2,31417,0x10671d620,8,TemporalInstantPrototypeEpochMilliseconds
code-creation,Builtin,2,31417,0x10671d640,8,TemporalInstantPrototypeEpochMicroseconds
code-creation,Builtin,2,31417,0x10671d660,8,TemporalInstantPrototypeEpochNanoseconds
code-creation,Builtin,2,31417,0x10671d680,8,TemporalInstantPrototypeAdd
code-creation,Builtin,2,31417,0x10671d6a0,8,TemporalInstantPrototypeSubtract
code-creation,Builtin,2,31417,0x10671d6c0,8,TemporalInstantPrototypeUntil
code-creation,Builtin,2,31417,0x10671d6e0,8,TemporalInstantPrototypeSince
code-creation,Builtin,2,31417,0x10671d700,8,TemporalInstantPrototypeRound
code-creation,Builtin,2,31458,0x10671d720,8,TemporalInstantPrototypeEquals
code-creation,Builtin,2,31458,0x10671d740,8,TemporalInstantPrototypeToString
code-creation,Builtin,2,31458,0x10671d760,8,TemporalInstantPrototypeToJSON
code-creation,Builtin,2,31458,0x10671d780,8,TemporalInstantPrototypeToLocaleString
code-creation,Builtin,2,31458,0x10671d7a0,8,TemporalInstantPrototypeValueOf
code-creation,Builtin,2,31458,0x10671d7c0,8,TemporalInstantPrototypeToZonedDateTime
code-creation,Builtin,2,31458,0x10671d7e0,8,TemporalInstantPrototypeToZonedDateTimeISO
code-creation,Builtin,2,31458,0x10671d800,8,TemporalPlainYearMonthConstructor
code-creation,Builtin,2,31458,0x10671d820,8,TemporalPlainYearMonthFrom
code-creation,Builtin,2,31458,0x10671d840,8,TemporalPlainYearMonthCompare
code-creation,Builtin,2,31500,0x10671d860,8,TemporalPlainYearMonthPrototypeCalendar
code-creation,Builtin,2,31500,0x10671d880,8,TemporalPlainYearMonthPrototypeYear
code-creation,Builtin,2,31500,0x10671d8a0,8,TemporalPlainYearMonthPrototypeMonth
code-creation,Builtin,2,31500,0x10671d8c0,8,TemporalPlainYearMonthPrototypeMonthCode
code-creation,Builtin,2,31500,0x10671d8e0,8,TemporalPlainYearMonthPrototypeDaysInYear
code-creation,Builtin,2,31500,0x10671d900,8,TemporalPlainYearMonthPrototypeDaysInMonth
code-creation,Builtin,2,31500,0x10671d920,8,TemporalPlainYearMonthPrototypeMonthsInYear
code-creation,Builtin,2,31500,0x10671d940,8,TemporalPlainYearMonthPrototypeInLeapYear
code-creation,Builtin,2,31542,0x10671d960,8,TemporalPlainYearMonthPrototypeWith
code-creation,Builtin,2,31542,0x10671d980,8,TemporalPlainYearMonthPrototypeAdd
code-creation,Builtin,2,31542,0x10671d9a0,8,TemporalPlainYearMonthPrototypeSubtract
code-creation,Builtin,2,31542,0x10671d9c0,8,TemporalPlainYearMonthPrototypeUntil
code-creation,Builtin,2,31542,0x10671d9e0,8,TemporalPlainYearMonthPrototypeSince
code-creation,Builtin,2,31542,0x10671da00,8,TemporalPlainYearMonthPrototypeEquals
code-creation,Builtin,2,31542,0x10671da20,8,TemporalPlainYearMonthPrototypeToString
code-creation,Builtin,2,31542,0x10671da40,8,TemporalPlainYearMonthPrototypeToJSON
code-creation,Builtin,2,31542,0x10671da60,8,TemporalPlainYearMonthPrototypeToLocaleString
code-creation,Builtin,2,31583,0x10671da80,8,TemporalPlainYearMonthPrototypeValueOf
code-creation,Builtin,2,31583,0x10671daa0,8,TemporalPlainYearMonthPrototypeToPlainDate
code-creation,Builtin,2,31583,0x10671dac0,8,TemporalPlainYearMonthPrototypeGetISOFields
code-creation,Builtin,2,31583,0x10671dae0,8,TemporalPlainMonthDayConstructor
code-creation,Builtin,2,31583,0x10671db00,8,TemporalPlainMonthDayFrom
code-creation,Builtin,2,31583,0x10671db20,8,TemporalPlainMonthDayPrototypeCalendar
code-creation,Builtin,2,31583,0x10671db40,8,TemporalPlainMonthDayPrototypeMonthCode
code-creation,Builtin,2,31583,0x10671db60,8,TemporalPlainMonthDayPrototypeDay
code-creation,Builtin,2,31583,0x10671db80,8,TemporalPlainMonthDayPrototypeWith
code-creation,Builtin,2,31625,0x10671dba0,8,TemporalPlainMonthDayPrototypeEquals
code-creation,Builtin,2,31625,0x10671dbc0,8,TemporalPlainMonthDayPrototypeToString
code-creation,Builtin,2,31625,0x10671dbe0,8,TemporalPlainMonthDayPrototypeToJSON
code-creation,Builtin,2,31625,0x10671dc00,8,TemporalPlainMonthDayPrototypeToLocaleString
code-creation,Builtin,2,31625,0x10671dc20,8,TemporalPlainMonthDayPrototypeValueOf
code-creation,Builtin,2,31625,0x10671dc40,8,TemporalPlainMonthDayPrototypeToPlainDate
code-creation,Builtin,2,31625,0x10671dc60,8,TemporalPlainMonthDayPrototypeGetISOFields
code-creation,Builtin,2,31625,0x10671dc80,8,TemporalTimeZoneConstructor
code-creation,Builtin,2,31667,0x10671dca0,8,TemporalTimeZoneFrom
code-creation,Builtin,2,31667,0x10671dcc0,8,TemporalTimeZonePrototypeId
code-creation,Builtin,2,31667,0x10671dce0,8,TemporalTimeZonePrototypeGetOffsetNanosecondsFor
code-creation,Builtin,2,31667,0x10671dd00,8,TemporalTimeZonePrototypeGetOffsetStringFor
code-creation,Builtin,2,31667,0x10671dd20,8,TemporalTimeZonePrototypeGetPlainDateTimeFor
code-creation,Builtin,2,31667,0x10671dd40,8,TemporalTimeZonePrototypeGetInstantFor
code-creation,Builtin,2,31667,0x10671dd60,8,TemporalTimeZonePrototypeGetPossibleInstantsFor
code-creation,Builtin,2,31667,0x10671dd80,8,TemporalTimeZonePrototypeGetNextTransition
code-creation,Builtin,2,31708,0x10671dda0,8,TemporalTimeZonePrototypeGetPreviousTransition
code-creation,Builtin,2,31708,0x10671ddc0,8,TemporalTimeZonePrototypeToString
code-creation,Builtin,2,31708,0x10671dde0,8,TemporalTimeZonePrototypeToJSON
code-creation,Builtin,2,31708,0x10671de00,8,TemporalCalendarConstructor
code-creation,Builtin,2,31708,0x10671de20,8,TemporalCalendarFrom
code-creation,Builtin,2,31708,0x10671de40,8,TemporalCalendarPrototypeId
code-creation,Builtin,2,31708,0x10671de60,8,TemporalCalendarPrototypeDateFromFields
code-creation,Builtin,2,31708,0x10671de80,8,TemporalCalendarPrototypeYearMonthFromFields
code-creation,Builtin,2,31708,0x10671dea0,8,TemporalCalendarPrototypeMonthDayFromFields
code-creation,Builtin,2,31750,0x10671dec0,8,TemporalCalendarPrototypeDateAdd
code-creation,Builtin,2,31750,0x10671dee0,8,TemporalCalendarPrototypeDateUntil
code-creation,Builtin,2,31750,0x10671df00,8,TemporalCalendarPrototypeYear
code-creation,Builtin,2,31750,0x10671df20,8,TemporalCalendarPrototypeMonth
code-creation,Builtin,2,31750,0x10671df40,8,TemporalCalendarPrototypeMonthCode
code-creation,Builtin,2,31750,0x10671df60,8,TemporalCalendarPrototypeDay
code-creation,Builtin,2,31750,0x10671df80,8,TemporalCalendarPrototypeDayOfWeek
code-creation,Builtin,2,31750,0x10671dfa0,8,TemporalCalendarPrototypeDayOfYear
code-creation,Builtin,2,31792,0x10671dfc0,8,TemporalCalendarPrototypeWeekOfYear
code-creation,Builtin,2,31792,0x10671dfe0,8,TemporalCalendarPrototypeDaysInWeek
code-creation,Builtin,2,31792,0x10671e000,8,TemporalCalendarPrototypeDaysInMonth
code-creation,Builtin,2,31792,0x10671e020,8,TemporalCalendarPrototypeDaysInYear
code-creation,Builtin,2,31792,0x10671e040,8,TemporalCalendarPrototypeMonthsInYear
code-creation,Builtin,2,31792,0x10671e060,8,TemporalCalendarPrototypeInLeapYear
code-creation,Builtin,2,31792,0x10671e080,3596,TemporalCalendarPrototypeFields
code-creation,Builtin,2,31792,0x10671eea0,8,TemporalCalendarPrototypeMergeFields
code-creation,Builtin,2,31792,0x10671eec0,8,TemporalCalendarPrototypeToString
code-creation,Builtin,2,31833,0x10671eee0,8,TemporalCalendarPrototypeToJSON
code-creation,Builtin,2,31833,0x10671ef00,8,DatePrototypeToTemporalInstant
code-creation,Builtin,2,31833,0x10671ef20,1736,StringFixedArrayFromIterable
code-creation,Builtin,2,31833,0x10671f600,1736,TemporalInstantFixedArrayFromIterable
code-creation,Builtin,2,31833,0x10671fce0,296,AggregateErrorConstructor
code-creation,Builtin,2,31833,0x10671fe20,852,ArrayPrototypeAt
code-creation,Builtin,2,31833,0x106720180,544,ArrayPrototypeConcat
code-creation,Builtin,2,31833,0x1067203c0,4508,ArrayPrototypeCopyWithin
code-creation,Builtin,2,31833,0x106721560,240,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,31875,0x106721660,560,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,31875,0x1067218a0,4344,ArrayEveryLoopContinuation
code-creation,Builtin,2,31875,0x1067229a0,1572,ArrayEvery
code-creation,Builtin,2,31875,0x106722fe0,296,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,31875,0x106723120,828,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,31875,0x106723460,4500,ArrayFilterLoopContinuation
code-creation,Builtin,2,31875,0x106724600,4388,ArrayFilter
code-creation,Builtin,2,31875,0x106725740,232,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,31875,0x106725840,52,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,31917,0x106725880,364,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,31917,0x106725a00,508,ArrayFindLoopContinuation
code-creation,Builtin,2,31917,0x106725c00,1540,ArrayPrototypeFind
code-creation,Builtin,2,31917,0x106726220,232,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,31917,0x106726320,52,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,31917,0x106726360,364,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,31917,0x1067264e0,500,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,31917,0x1067266e0,1540,ArrayPrototypeFindIndex
code-creation,Builtin,2,31917,0x106726d00,452,ArrayFindLastLoopContinuation
code-creation,Builtin,2,31958,0x106726ee0,1656,ArrayPrototypeFindLast
code-creation,Builtin,2,31958,0x106727560,444,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,31958,0x106727720,1652,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,31958,0x106727da0,3148,FlattenIntoArrayWithoutMapFn
code-creation,Builtin,2,31958,0x106728a00,3100,FlattenIntoArrayWithMapFn
code-creation,Builtin,2,31958,0x106729620,852,ArrayPrototypeFlat
code-creation,Builtin,2,31958,0x106729980,820,ArrayPrototypeFlatMap
code-creation,Builtin,2,31958,0x106729cc0,240,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,31958,0x106729dc0,240,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,32000,0x106729ec0,4232,ArrayForEachLoopContinuation
code-creation,Builtin,2,32000,0x10672af60,1380,ArrayForEach
code-creation,Builtin,2,32000,0x10672b4e0,7684,ArrayFromAsyncIterableOnFulfilled
code-creation,Builtin,2,32000,0x10672d300,7708,ArrayFromAsyncIterableOnRejected
code-creation,Builtin,2,32000,0x10672f120,3892,ArrayFromAsyncArrayLikeOnFulfilled
code-creation,Builtin,2,32000,0x106730060,3932,ArrayFromAsyncArrayLikeOnRejected
code-creation,Builtin,2,32000,0x106730fc0,17516,ArrayFromAsync
code-creation,Builtin,2,32000,0x106735440,4768,ArrayFrom
code-creation,Builtin,2,32000,0x106736700,192,ArrayIsArray
code-creation,Builtin,2,32042,0x1067367e0,388,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,32042,0x106736980,60,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,32042,0x1067369c0,160,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,32042,0x106736a80,240,ConvertToLocaleString
code-creation,Builtin,2,32042,0x106736b80,792,JoinStackPush
code-creation,Builtin,2,32042,0x106736ea0,300,JoinStackPop
code-creation,Builtin,2,32042,0x106736fe0,8828,ArrayPrototypeJoin
code-creation,Builtin,2,32042,0x106739260,5688,ArrayPrototypeToLocaleString
code-creation,Builtin,2,32042,0x10673a8a0,276,ArrayPrototypeToString
code-creation,Builtin,2,32083,0x10673a9c0,8660,TypedArrayPrototypeJoin
code-creation,Builtin,2,32083,0x10673cba0,5456,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,32083,0x10673e100,3992,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,32083,0x10673f0a0,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,32083,0x10673f1c0,260,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,32083,0x10673f2e0,452,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,32083,0x10673f4c0,4208,ArrayMapLoopContinuation
code-creation,Builtin,2,32083,0x106740540,3840,ArrayMap
code-creation,Builtin,2,32083,0x106741460,1760,ArrayOf
code-creation,Builtin,2,32125,0x106741b60,400,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,32125,0x106741d00,232,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,32125,0x106741e00,232,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,32125,0x106741f00,4236,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,32125,0x106742fa0,1864,ArrayReduceRight
code-creation,Builtin,2,32125,0x106743700,208,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,32125,0x1067437e0,232,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,32125,0x1067438e0,232,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,32125,0x1067439e0,4288,ArrayReduceLoopContinuation
code-creation,Builtin,2,32125,0x106744ac0,1580,ArrayReduce
code-creation,Builtin,2,32167,0x106745100,3228,ArrayPrototypeReverse
code-creation,Builtin,2,32167,0x106745da0,3440,ArrayPrototypeShift
code-creation,Builtin,2,32167,0x106746b20,6028,ArrayPrototypeSlice
code-creation,Builtin,2,32167,0x1067482c0,240,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,32167,0x1067483c0,544,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,32167,0x106748600,4332,ArraySomeLoopContinuation
code-creation,Builtin,2,32167,0x106749700,1548,ArraySome
code-creation,Builtin,2,32167,0x106749d20,12616,ArrayPrototypeSplice
code-creation,Builtin,2,32167,0x10674ce80,2040,GenericArrayToReversed
code-creation,Builtin,2,32167,0x10674d680,2868,ArrayPrototypeToReversed
code-creation,Builtin,2,32208,0x10674e1c0,5332,ArrayTimSortIntoCopy
code-creation,Builtin,2,32208,0x10674f6a0,1896,ArrayPrototypeToSorted
code-creation,Builtin,2,32208,0x10674fe20,8300,ArrayPrototypeToSpliced
code-creation,Builtin,2,32208,0x106751ea0,2816,ArrayPrototypeUnshift
code-creation,Builtin,2,32208,0x1067529c0,1364,GenericArrayWith
code-creation,Builtin,2,32208,0x106752f20,1128,ArrayPrototypeWith
code-creation,Builtin,2,32208,0x1067533a0,308,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,32208,0x1067534e0,428,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,32208,0x1067536a0,228,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,32250,0x1067537a0,228,ArrayBufferPrototypeGetDetached
code-creation,Builtin,2,32250,0x1067538a0,308,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,32250,0x1067539e0,228,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,32250,0x106753ae0,128,ArrayBufferIsView
code-creation,Builtin,2,32250,0x106753b80,224,ToInteger
code-creation,Builtin,2,32250,0x106753c80,3900,FastCreateDataProperty
code-creation,Builtin,2,32250,0x106754bc0,1076,BooleanConstructor
code-creation,Builtin,2,32250,0x106755000,196,BooleanPrototypeToString
code-creation,Builtin,2,32250,0x1067550e0,192,BooleanPrototypeValueOf
code-creation,Builtin,2,32292,0x1067551c0,1008,BigIntAddNoThrow
code-creation,Builtin,2,32292,0x1067555c0,1184,BigIntAdd
code-creation,Builtin,2,32292,0x106755a80,1008,BigIntSubtractNoThrow
code-creation,Builtin,2,32292,0x106755e80,1184,BigIntSubtract
code-creation,Builtin,2,32292,0x106756340,316,BigIntMultiplyNoThrow
code-creation,Builtin,2,32292,0x106756480,524,BigIntMultiply
code-creation,Builtin,2,32292,0x1067566a0,508,BigIntDivideNoThrow
code-creation,Builtin,2,32292,0x1067568a0,624,BigIntDivide
code-creation,Builtin,2,32292,0x106756b20,420,BigIntModulusNoThrow
code-creation,Builtin,2,32292,0x106756ce0,536,BigIntModulus
code-creation,Builtin,2,32333,0x106756f00,900,BigIntBitwiseAndNoThrow
code-creation,Builtin,2,32333,0x1067572a0,1092,BigIntBitwiseAnd
code-creation,Builtin,2,32333,0x106757700,864,BigIntBitwiseOrNoThrow
code-creation,Builtin,2,32333,0x106757a80,1028,BigIntBitwiseOr
code-creation,Builtin,2,32333,0x106757ea0,928,BigIntBitwiseXorNoThrow
code-creation,Builtin,2,32333,0x106758260,1120,BigIntBitwiseXor
code-creation,Builtin,2,32333,0x1067586e0,1244,BigIntShiftLeftNoThrow
code-creation,Builtin,2,32333,0x106758bc0,1436,BigIntShiftLeft
code-creation,Builtin,2,32333,0x106759160,1244,BigIntShiftRightNoThrow
code-creation,Builtin,2,32333,0x106759640,1436,BigIntShiftRight
code-creation,Builtin,2,32375,0x106759be0,132,BigIntEqual
code-creation,Builtin,2,32375,0x106759c80,184,BigIntLessThan
code-creation,Builtin,2,32375,0x106759d40,188,BigIntGreaterThan
code-creation,Builtin,2,32375,0x106759e00,188,BigIntLessThanOrEqual
code-creation,Builtin,2,32375,0x106759ec0,184,BigIntGreaterThanOrEqual
code-creation,Builtin,2,32375,0x106759f80,324,BigIntUnaryMinus
code-creation,Builtin,2,32375,0x10675a0e0,2060,ToString
code-creation,Builtin,2,32375,0x10675a900,188,StringPrototypeToString
code-creation,Builtin,2,32375,0x10675a9c0,188,StringPrototypeValueOf
code-creation,Builtin,2,32375,0x10675aa80,2224,StringToList
code-creation,Builtin,2,32375,0x10675b340,808,StringPrototypeCharAt
code-creation,Builtin,2,32417,0x10675b680,692,StringPrototypeCharCodeAt
code-creation,Builtin,2,32417,0x10675b940,1204,StringPrototypeCodePointAt
code-creation,Builtin,2,32417,0x10675be00,436,StringPrototypeConcat
code-creation,Builtin,2,32417,0x10675bfc0,1116,StringConstructor
code-creation,Builtin,2,32417,0x10675c420,2132,StringAddConvertLeft
code-creation,Builtin,2,32417,0x10675cc80,2168,StringAddConvertRight
code-creation,Builtin,2,32417,0x10675d500,660,StringCharAt
code-creation,Builtin,2,32417,0x10675d7a0,20,FastNewClosureBaseline
code-creation,Builtin,2,32417,0x10675d7c0,296,FastNewFunctionContextEval
code-creation,Builtin,2,32417,0x10675d900,296,FastNewFunctionContextFunction
code-creation,Builtin,2,32458,0x10675da40,296,CreateRegExpLiteral
code-creation,Builtin,2,32458,0x10675db80,1392,CreateShallowArrayLiteral
code-creation,Builtin,2,32458,0x10675e100,480,CreateEmptyArrayLiteral
code-creation,Builtin,2,32458,0x10675e300,2224,CreateShallowObjectLiteral
code-creation,Builtin,2,32458,0x10675ebc0,472,ObjectConstructor
code-creation,Builtin,2,32458,0x10675eda0,256,CreateEmptyLiteralObject
code-creation,Builtin,2,32458,0x10675eec0,592,NumberConstructor
code-creation,Builtin,2,32458,0x10675f120,92,GenericLazyDeoptContinuation
code-creation,Builtin,2,32458,0x10675f180,84,StringToNumber
code-creation,Builtin,2,32500,0x10675f1e0,240,NonNumberToNumber
code-creation,Builtin,2,32500,0x10675f2e0,288,NonNumberToNumeric
code-creation,Builtin,2,32500,0x10675f420,60,ToNumeric
code-creation,Builtin,2,32500,0x10675f460,1392,NumberToString
code-creation,Builtin,2,32500,0x10675f9e0,140,ToBoolean
code-creation,Builtin,2,32500,0x10675fa80,140,ToBooleanForBaselineJump
code-creation,Builtin,2,32500,0x10675fb20,536,ToLength
code-creation,Builtin,2,32500,0x10675fd40,1300,ToName
code-creation,Builtin,2,32500,0x106760260,940,ToObject
code-creation,Builtin,2,32542,0x106760620,460,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,32542,0x106760800,460,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,32542,0x1067609e0,824,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,32542,0x106760d20,36,OrdinaryToPrimitive_Number
code-creation,Builtin,2,32542,0x106760d60,412,OrdinaryToPrimitive_Number_Inline
code-creation,Builtin,2,32542,0x106760f00,412,OrdinaryToPrimitive_String
code-creation,Builtin,2,32542,0x1067610a0,280,FastConsoleAssert
code-creation,Builtin,2,32542,0x1067611c0,216,DataViewPrototypeGetBuffer
code-creation,Builtin,2,32542,0x1067612a0,720,DataViewPrototypeGetByteLength
code-creation,Builtin,2,32542,0x106761580,440,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,32583,0x106761740,780,DataViewPrototypeGetUint8
code-creation,Builtin,2,32583,0x106761a60,780,DataViewPrototypeGetInt8
code-creation,Builtin,2,32583,0x106761d80,864,DataViewPrototypeGetUint16
code-creation,Builtin,2,32583,0x106762100,860,DataViewPrototypeGetInt16
code-creation,Builtin,2,32583,0x106762460,1004,DataViewPrototypeGetUint32
code-creation,Builtin,2,32583,0x106762860,892,DataViewPrototypeGetInt32
code-creation,Builtin,2,32583,0x106762be0,1028,DataViewPrototypeGetFloat32
code-creation,Builtin,2,32583,0x106763000,1092,DataViewPrototypeGetFloat64
code-creation,Builtin,2,32583,0x106763460,1152,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,32625,0x106763900,1176,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,32625,0x106763da0,1176,DataViewPrototypeSetUint8
code-creation,Builtin,2,32625,0x106764240,1176,DataViewPrototypeSetInt8
code-creation,Builtin,2,32625,0x1067646e0,1264,DataViewPrototypeSetUint16
code-creation,Builtin,2,32625,0x106764be0,1264,DataViewPrototypeSetInt16
code-creation,Builtin,2,32625,0x1067650e0,1296,DataViewPrototypeSetUint32
code-creation,Builtin,2,32625,0x106765600,1296,DataViewPrototypeSetInt32
code-creation,Builtin,2,32625,0x106765b20,1300,DataViewPrototypeSetFloat32
code-creation,Builtin,2,32625,0x106766040,1360,DataViewPrototypeSetFloat64
code-creation,Builtin,2,32625,0x1067665a0,1208,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,32667,0x106766a60,1208,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,32667,0x106766f20,976,FinalizationRegistryConstructor
code-creation,Builtin,2,32667,0x106767300,1056,FinalizationRegistryRegister
code-creation,Builtin,2,32667,0x106767740,668,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,32667,0x1067679e0,360,FunctionPrototypeHasInstance
code-creation,Builtin,2,32667,0x106767b60,912,FastFunctionPrototypeBind
code-creation,Builtin,2,32667,0x106767f00,152,IncBlockCounter
code-creation,Builtin,2,32667,0x106767fa0,308,GetTemplateObject
code-creation,Builtin,2,32667,0x1067680e0,128,ForInNext
code-creation,Builtin,2,32708,0x106768180,184,GetImportMetaObjectBaseline
code-creation,Builtin,2,32708,0x106768240,128,GetIteratorWithFeedback
code-creation,Builtin,2,32708,0x1067682e0,124,GetIteratorBaseline
code-creation,Builtin,2,32708,0x106768360,316,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,32708,0x1067684a0,1136,CallIteratorWithFeedback
code-creation,Builtin,2,32708,0x106768920,936,IteratorConstructor
code-creation,Builtin,2,32708,0x106768ce0,912,IteratorFrom
code-creation,Builtin,2,32708,0x106769080,184,WrapForValidIteratorPrototypeNext
code-creation,Builtin,2,32708,0x106769140,436,WrapForValidIteratorPrototypeReturn
code-creation,Builtin,2,32708,0x106769300,436,IteratorHelperPrototypeNext
code-creation,Builtin,2,32750,0x1067694c0,1348,IteratorHelperPrototypeReturn
code-creation,Builtin,2,32750,0x106769a20,388,IteratorPrototypeMap
code-creation,Builtin,2,32750,0x106769bc0,1356,IteratorMapHelperNext
code-creation,Builtin,2,32750,0x10676a120,388,IteratorPrototypeFilter
code-creation,Builtin,2,32750,0x10676a2c0,1520,IteratorFilterHelperNext
code-creation,Builtin,2,32750,0x10676a8c0,500,IteratorPrototypeTake
code-creation,Builtin,2,32750,0x10676aac0,1552,IteratorTakeHelperNext
code-creation,Builtin,2,32750,0x10676b0e0,500,IteratorPrototypeDrop
code-creation,Builtin,2,32750,0x10676b2e0,1804,IteratorDropHelperNext
code-creation,Builtin,2,32792,0x10676ba00,404,IteratorPrototypeFlatMap
code-creation,Builtin,2,32792,0x10676bba0,2668,IteratorFlatMapHelperNext
code-creation,Builtin,2,32792,0x10676c620,1744,IteratorPrototypeReduce
code-creation,Builtin,2,32792,0x10676cd00,1568,IteratorPrototypeToArray
code-creation,Builtin,2,32792,0x10676d340,1084,IteratorPrototypeForEach
code-creation,Builtin,2,32792,0x10676d780,1368,IteratorPrototypeSome
code-creation,Builtin,2,32792,0x10676dce0,1364,IteratorPrototypeEvery
code-creation,Builtin,2,32792,0x10676e240,1376,IteratorPrototypeFind
code-creation,Builtin,2,32792,0x10676e7c0,7756,MapGroupBy
code-creation,Builtin,2,32792,0x106770620,276,MathAbs
code-creation,Builtin,2,32833,0x106770740,256,MathCeil
code-creation,Builtin,2,32833,0x106770860,256,MathFloor
code-creation,Builtin,2,32833,0x106770980,280,MathRound
code-creation,Builtin,2,32833,0x106770aa0,256,MathTrunc
code-creation,Builtin,2,32833,0x106770bc0,368,MathPow
code-creation,Builtin,2,32833,0x106770d40,404,MathMax
code-creation,Builtin,2,32833,0x106770ee0,404,MathMin
code-creation,Builtin,2,32833,0x106771080,288,MathAcos
code-creation,Builtin,2,32833,0x1067711c0,288,MathAcosh
code-creation,Builtin,2,32833,0x106771300,288,MathAsin
code-creation,Builtin,2,32833,0x106771440,288,MathAsinh
code-creation,Builtin,2,32875,0x106771580,288,MathAtan
code-creation,Builtin,2,32875,0x1067716c0,364,MathAtan2
code-creation,Builtin,2,32875,0x106771840,288,MathAtanh
code-creation,Builtin,2,32875,0x106771980,288,MathCbrt
code-creation,Builtin,2,32875,0x106771ac0,156,MathClz32
code-creation,Builtin,2,32875,0x106771b60,288,MathCos
code-creation,Builtin,2,32875,0x106771ca0,288,MathCosh
code-creation,Builtin,2,32875,0x106771de0,288,MathExp
code-creation,Builtin,2,32875,0x106771f20,288,MathExpm1
code-creation,Builtin,2,32917,0x106772060,264,MathFround
code-creation,Builtin,2,32917,0x106772180,228,MathImul
code-creation,Builtin,2,32917,0x106772280,288,MathLog
code-creation,Builtin,2,32917,0x1067723c0,288,MathLog1p
code-creation,Builtin,2,32917,0x106772500,288,MathLog10
code-creation,Builtin,2,32917,0x106772640,288,MathLog2
code-creation,Builtin,2,32917,0x106772780,288,MathSin
code-creation,Builtin,2,32917,0x1067728c0,180,MathSign
code-creation,Builtin,2,32917,0x106772980,288,MathSinh
code-creation,Builtin,2,32917,0x106772ac0,260,MathSqrt
code-creation,Builtin,2,32917,0x106772be0,288,MathTan
code-creation,Builtin,2,32958,0x106772d20,288,MathTanh
code-creation,Builtin,2,32958,0x106772e60,1032,MathHypot
code-creation,Builtin,2,32958,0x106773280,328,MathRandom
code-creation,Builtin,2,32958,0x1067733e0,2572,NumberPrototypeToString
code-creation,Builtin,2,32958,0x106773e00,156,NumberIsFinite
code-creation,Builtin,2,32958,0x106773ea0,156,NumberIsInteger
code-creation,Builtin,2,32958,0x106773f40,152,NumberIsNaN
code-creation,Builtin,2,32958,0x106773fe0,184,NumberIsSafeInteger
code-creation,Builtin,2,32958,0x1067740a0,192,NumberPrototypeValueOf
code-creation,Builtin,2,32958,0x106774180,228,NumberParseFloat
code-creation,Builtin,2,33000,0x106774280,188,ParseInt
code-creation,Builtin,2,33000,0x106774340,108,NumberParseInt
code-creation,Builtin,2,33000,0x1067743c0,732,Add
code-creation,Builtin,2,33000,0x1067746a0,404,Subtract
code-creation,Builtin,2,33000,0x106774840,528,Multiply
code-creation,Builtin,2,33000,0x106774a60,452,Divide
code-creation,Builtin,2,33000,0x106774c40,504,Modulus
code-creation,Builtin,2,33000,0x106774e40,512,Exponentiate
code-creation,Builtin,2,33000,0x106775060,316,Negate
code-creation,Builtin,2,33000,0x1067751a0,152,BitwiseNot
code-creation,Builtin,2,33042,0x106775240,120,Decrement
code-creation,Builtin,2,33042,0x1067752c0,120,Increment
code-creation,Builtin,2,33042,0x106775340,476,ShiftLeft
code-creation,Builtin,2,33042,0x106775520,476,ShiftRight
code-creation,Builtin,2,33042,0x106775700,532,ShiftRightLogical
code-creation,Builtin,2,33042,0x106775920,264,BitwiseAnd
code-creation,Builtin,2,33042,0x106775a40,264,BitwiseOr
code-creation,Builtin,2,33042,0x106775b60,264,BitwiseXor
code-creation,Builtin,2,33042,0x106775c80,1004,LessThan
code-creation,Builtin,2,33083,0x106776080,1004,LessThanOrEqual
code-creation,Builtin,2,33083,0x106776480,1004,GreaterThan
code-creation,Builtin,2,33083,0x106776880,1004,GreaterThanOrEqual
code-creation,Builtin,2,33083,0x106776c80,1132,Equal
code-creation,Builtin,2,33083,0x106777100,540,StrictEqual
code-creation,Builtin,2,33083,0x106777320,3356,ObjectFromEntries
code-creation,Builtin,2,33083,0x106778040,3920,GroupByGeneric
code-creation,Builtin,2,33083,0x106778fa0,8000,ObjectGroupBy
code-creation,Builtin,2,33083,0x10677af00,916,CreateObjectWithoutProperties
code-creation,Builtin,2,33083,0x10677b2a0,176,ObjectIsExtensible
code-creation,Builtin,2,33125,0x10677b360,180,ObjectPreventExtensions
code-creation,Builtin,2,33125,0x10677b420,184,ObjectGetPrototypeOf
code-creation,Builtin,2,33125,0x10677b4e0,312,ObjectSetPrototypeOf
code-creation,Builtin,2,33125,0x10677b620,92,ObjectPrototypeToString
code-creation,Builtin,2,33125,0x10677b680,116,ObjectPrototypeValueOf
code-creation,Builtin,2,33125,0x10677b700,208,ObjectPrototypeToLocaleString
code-creation,Builtin,2,33125,0x10677b7e0,828,FulfillPromise
code-creation,Builtin,2,33125,0x10677bb20,984,RejectPromise
code-creation,Builtin,2,33125,0x10677bf00,2776,NewPromiseCapability
code-creation,Builtin,2,33125,0x10677c9e0,212,PromiseCapabilityDefaultReject
code-creation,Builtin,2,33167,0x10677cac0,192,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,33167,0x10677cba0,1436,PerformPromiseThen
code-creation,Builtin,2,33167,0x10677d140,716,PromiseReject
code-creation,Builtin,2,33167,0x10677d420,300,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,33167,0x10677d560,144,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,33167,0x10677d600,4472,PromiseAll
code-creation,Builtin,2,33167,0x10677e780,4772,PromiseAllSettled
code-creation,Builtin,2,33167,0x10677fa40,1084,PromiseAllResolveElementClosure
code-creation,Builtin,2,33167,0x10677fe80,1416,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,33208,0x106780420,1416,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,33208,0x1067809c0,1152,PromiseAnyRejectElementClosure
code-creation,Builtin,2,33208,0x106780e60,2688,PromiseAny
code-creation,Builtin,2,33208,0x106781900,3148,PromiseConstructor
code-creation,Builtin,2,33208,0x106782560,364,PromisePrototypeCatch
code-creation,Builtin,2,33208,0x1067826e0,108,PromiseValueThunkFinally
code-creation,Builtin,2,33208,0x106782760,108,PromiseThrowerFinally
code-creation,Builtin,2,33208,0x1067827e0,1052,PromiseCatchFinally
code-creation,Builtin,2,33208,0x106782c00,1052,PromiseThenFinally
code-creation,Builtin,2,33208,0x106783020,1724,PromisePrototypeFinally
code-creation,Builtin,2,33250,0x1067836e0,1344,PromiseResolveThenableJob
code-creation,Builtin,2,33250,0x106783c40,1536,PromiseRace
code-creation,Builtin,2,33250,0x106784260,384,PromiseFulfillReactionJob
code-creation,Builtin,2,33250,0x106784400,472,PromiseRejectReactionJob
code-creation,Builtin,2,33292,0x1067845e0,172,PromiseResolveTrampoline
code-creation,Builtin,2,33292,0x1067846a0,1000,PromiseResolve
code-creation,Builtin,2,33292,0x106784aa0,804,ResolvePromise
code-creation,Builtin,2,33292,0x106784de0,2384,PromisePrototypeThen
code-creation,Builtin,2,33292,0x106785740,332,PromiseWithResolvers
code-creation,Builtin,2,33292,0x1067858a0,448,ProxyConstructor
code-creation,Builtin,2,33333,0x106785a80,2448,ProxyDeleteProperty
code-creation,Builtin,2,33333,0x106786420,2748,ProxyGetProperty
code-creation,Builtin,2,33333,0x106786ee0,1068,ProxyGetPrototypeOf
code-creation,Builtin,2,33333,0x106787320,2368,ProxyHasProperty
code-creation,Builtin,2,33333,0x106787c80,844,ProxyIsExtensible
code-creation,Builtin,2,33333,0x106787fe0,876,ProxyPreventExtensions
code-creation,Builtin,2,33333,0x106788360,1096,ProxyRevocable
code-creation,Builtin,2,33333,0x1067887c0,144,ProxyRevoke
code-creation,Builtin,2,33333,0x106788860,2880,ProxySetProperty
code-creation,Builtin,2,33375,0x1067893c0,1336,ProxySetPrototypeOf
code-creation,Builtin,2,33375,0x106789900,228,ReflectIsExtensible
code-creation,Builtin,2,33375,0x106789a00,232,ReflectPreventExtensions
code-creation,Builtin,2,33375,0x106789b00,208,ReflectGetPrototypeOf
code-creation,Builtin,2,33375,0x106789be0,336,ReflectSetPrototypeOf
code-creation,Builtin,2,33375,0x106789d40,312,ReflectGet
code-creation,Builtin,2,33375,0x106789e80,176,ReflectDeleteProperty
code-creation,Builtin,2,33375,0x106789f40,172,ReflectHas
code-creation,Builtin,2,33375,0x10678a000,4428,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,33375,0x10678b160,5068,RegExpPrototypeExecSlow
code-creation,Builtin,2,33417,0x10678c540,5152,RegExpPrototypeExec
code-creation,Builtin,2,33417,0x10678d980,2492,RegExpPrototypeMatchAll
code-creation,Builtin,2,33417,0x10678e340,9020,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,33417,0x106790680,8924,RegExpMatchFast
code-creation,Builtin,2,33417,0x106792960,3652,RegExpPrototypeMatch
code-creation,Builtin,2,33417,0x1067937c0,6100,RegExpReplace
code-creation,Builtin,2,33417,0x106794fa0,568,RegExpPrototypeReplace
code-creation,Builtin,2,33417,0x1067951e0,1624,RegExpSearchFast
code-creation,Builtin,2,33417,0x106795840,1588,RegExpPrototypeSearch
code-creation,Builtin,2,33417,0x106795e80,220,RegExpPrototypeSourceGetter
code-creation,Builtin,2,33458,0x106795f60,5724,RegExpSplit
code-creation,Builtin,2,33458,0x1067975c0,504,RegExpPrototypeSplit
code-creation,Builtin,2,33458,0x1067977c0,2212,RegExpPrototypeTest
code-creation,Builtin,2,33458,0x106798080,1532,RegExpPrototypeTestFast
code-creation,Builtin,2,33458,0x106798680,236,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,33458,0x106798780,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,33458,0x106798880,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,33458,0x106798980,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,33458,0x106798a80,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,33458,0x106798b80,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,33500,0x106798c80,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,33500,0x106798da0,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,33500,0x106798ec0,244,RegExpPrototypeUnicodeSetsGetter
code-creation,Builtin,2,33500,0x106798fc0,2608,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,33500,0x106799a00,11276,SetPrototypeDifference
code-creation,Builtin,2,33500,0x10679c620,12320,SetPrototypeIntersection
code-creation,Builtin,2,33500,0x10679f660,2792,SetPrototypeIsDisjointFrom
code-creation,Builtin,2,33500,0x1067a0160,1584,SetPrototypeIsSubsetOf
code-creation,Builtin,2,33500,0x1067a07a0,2072,SetPrototypeIsSupersetOf
code-creation,Builtin,2,33500,0x1067a0fc0,11380,SetPrototypeSymmetricDifference
code-creation,Builtin,2,33542,0x1067a3c40,7332,SetPrototypeUnion
code-creation,Builtin,2,33542,0x1067a5900,1172,StringPrototypeAt
code-creation,Builtin,2,33542,0x1067a5da0,3296,StringPrototypeEndsWith
code-creation,Builtin,2,33542,0x1067a6aa0,468,CreateHTML
code-creation,Builtin,2,33542,0x1067a6c80,180,StringPrototypeAnchor
code-creation,Builtin,2,33542,0x1067a6d40,148,StringPrototypeBig
code-creation,Builtin,2,33542,0x1067a6de0,148,StringPrototypeBlink
code-creation,Builtin,2,33542,0x1067a6e80,148,StringPrototypeBold
code-creation,Builtin,2,33542,0x1067a6f20,180,StringPrototypeFontcolor
code-creation,Builtin,2,33542,0x1067a6fe0,180,StringPrototypeFontsize
code-creation,Builtin,2,33583,0x1067a70a0,148,StringPrototypeFixed
code-creation,Builtin,2,33583,0x1067a7140,148,StringPrototypeItalics
code-creation,Builtin,2,33583,0x1067a71e0,180,StringPrototypeLink
code-creation,Builtin,2,33583,0x1067a72a0,148,StringPrototypeSmall
code-creation,Builtin,2,33583,0x1067a7340,148,StringPrototypeStrike
code-creation,Builtin,2,33583,0x1067a73e0,148,StringPrototypeSub
code-creation,Builtin,2,33583,0x1067a7480,148,StringPrototypeSup
code-creation,Builtin,2,33583,0x1067a7520,976,StringPrototypeIncludes
code-creation,Builtin,2,33625,0x1067a7900,580,StringPrototypeIndexOf
code-creation,Builtin,2,33625,0x1067a7b60,660,StringPrototypeIsWellFormed
code-creation,Builtin,2,33625,0x1067a7e00,344,StringPrototypeIterator
code-creation,Builtin,2,33625,0x1067a7f60,1668,StringIteratorPrototypeNext
code-creation,Builtin,2,33625,0x1067a8600,1432,StringPrototypeMatch
code-creation,Builtin,2,33625,0x1067a8ba0,1432,StringPrototypeSearch
code-creation,Builtin,2,33625,0x1067a9140,832,StringPrototypePadStart
code-creation,Builtin,2,33625,0x1067a94a0,836,StringPrototypePadEnd
code-creation,Builtin,2,33625,0x1067a9800,136,StringRepeat
code-creation,Builtin,2,33625,0x1067a98a0,408,StringPrototypeRepeat
code-creation,Builtin,2,33667,0x1067a9a40,12608,StringPrototypeReplaceAll
code-creation,Builtin,2,33667,0x1067acba0,4152,StringPrototypeSlice
code-creation,Builtin,2,33667,0x1067adbe0,3304,StringPrototypeStartsWith
code-creation,Builtin,2,33667,0x1067ae8e0,4136,StringPrototypeSubstr
code-creation,Builtin,2,33667,0x1067af920,4080,StringPrototypeSubstring
code-creation,Builtin,2,33667,0x1067b0920,976,StringPrototypeToWellFormed
code-creation,Builtin,2,33667,0x1067b0d00,8784,StringPrototypeTrim
code-creation,Builtin,2,33667,0x1067b2f60,8240,StringPrototypeTrimStart
code-creation,Builtin,2,33667,0x1067b4fa0,7832,StringPrototypeTrimEnd
code-creation,Builtin,2,33667,0x1067b6e40,1196,SuppressedErrorConstructor
code-creation,Builtin,2,33708,0x1067b7300,196,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,33708,0x1067b73e0,204,SymbolPrototypeToPrimitive
code-creation,Builtin,2,33708,0x1067b74c0,216,SymbolPrototypeToString
code-creation,Builtin,2,33708,0x1067b75a0,192,SymbolPrototypeValueOf
code-creation,Builtin,2,33708,0x1067b7680,1060,TypedArrayPrototypeAt
code-creation,Builtin,2,33708,0x1067b7ac0,9664,CreateTypedArray
code-creation,Builtin,2,33708,0x1067ba0a0,1724,TypedArrayPrototypeEvery
code-creation,Builtin,2,33708,0x1067ba760,412,TypedArrayPrototypeEntries
code-creation,Builtin,2,33708,0x1067ba900,4276,TypedArrayPrototypeFilter
code-creation,Builtin,2,33708,0x1067bb9c0,1696,TypedArrayPrototypeFind
code-creation,Builtin,2,33750,0x1067bc080,1700,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,33750,0x1067bc740,1668,TypedArrayPrototypeFindLast
code-creation,Builtin,2,33750,0x1067bcde0,1672,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,33750,0x1067bd480,1564,TypedArrayPrototypeForEach
code-creation,Builtin,2,33750,0x1067bdaa0,2752,TypedArrayFrom
code-creation,Builtin,2,33750,0x1067be580,408,TypedArrayPrototypeKeys
code-creation,Builtin,2,33750,0x1067be720,1284,TypedArrayOf
code-creation,Builtin,2,33750,0x1067bec40,1676,TypedArrayPrototypeReduce
code-creation,Builtin,2,33792,0x1067bf2e0,1664,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,33792,0x1067bf980,3048,TypedArrayPrototypeSet
code-creation,Builtin,2,33792,0x1067c0580,3760,TypedArrayPrototypeSlice
code-creation,Builtin,2,33792,0x1067c1440,1700,TypedArrayPrototypeSome
code-creation,Builtin,2,33792,0x1067c1b00,980,TypedArrayMergeSort
code-creation,Builtin,2,33792,0x1067c1ee0,2192,TypedArrayPrototypeSort
code-creation,Builtin,2,33792,0x1067c2780,2820,TypedArrayPrototypeSubArray
code-creation,Builtin,2,33792,0x1067c32a0,1620,TypedArrayPrototypeToReversed
code-creation,Builtin,2,33792,0x1067c3900,3072,TypedArrayPrototypeToSorted
code-creation,Builtin,2,33792,0x1067c4520,412,TypedArrayPrototypeValues
code-creation,Builtin,2,33833,0x1067c46c0,2816,TypedArrayPrototypeWith
code-creation,Builtin,2,33833,0x1067c51e0,1116,WeakRefConstructor
code-creation,Builtin,2,33833,0x1067c5640,212,WeakRefDeref
code-creation,Builtin,2,33833,0x1067c5720,732,NewSloppyArgumentsElements
code-creation,Builtin,2,33833,0x1067c5a00,336,NewStrictArgumentsElements
code-creation,Builtin,2,33833,0x1067c5b60,376,NewRestArgumentsElements
code-creation,Builtin,2,33833,0x1067c5ce0,1640,FastNewSloppyArguments
code-creation,Builtin,2,33833,0x1067c6360,556,FastNewStrictArguments
code-creation,Builtin,2,33833,0x1067c65a0,604,FastNewRestArguments
code-creation,Builtin,2,33875,0x1067c6800,640,StringSlowFlatten
code-creation,Builtin,2,33875,0x1067c6aa0,2100,StringIndexOf
code-creation,Builtin,2,33875,0x1067c72e0,1336,TestTurbofanType
code-creation,Builtin,2,33875,0x1067c7820,208,CheckTurbofanType
code-creation,Builtin,2,33875,0x1067c7900,644,CheckTurboshaftWord32Type
code-creation,Builtin,2,33875,0x1067c7ba0,1092,CheckTurboshaftWord64Type
code-creation,Builtin,2,33875,0x1067c8000,936,CheckTurboshaftFloat32Type
code-creation,Builtin,2,33875,0x1067c83c0,920,CheckTurboshaftFloat64Type
code-creation,Builtin,2,33875,0x1067c8760,196,DebugPrintWordPtr
code-creation,Builtin,2,33875,0x1067c8840,192,DebugPrintFloat64
code-creation,Builtin,2,33917,0x1067c8920,8,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,33917,0x1067c8940,16,TestHelperPlus1
code-creation,Builtin,2,33917,0x1067c8960,16,TestHelperPlus2
code-creation,Builtin,2,33917,0x1067c8980,108,NewSmiBox
code-creation,Builtin,2,33917,0x1067c8a00,20,ReturnTwoValues
code-creation,Builtin,2,33917,0x1067c8a20,48,ThrowAsBuiltin
code-creation,Builtin,2,33917,0x1067c8a60,124,TestCallNever
code-creation,Builtin,2,33917,0x1067c8ae0,44,Load_FastSmiElements_0
code-creation,Builtin,2,33917,0x1067c8b20,44,Load_FastObjectElements_0
code-creation,Builtin,2,33917,0x1067c8b60,164,Load_FastDoubleElements_0
code-creation,Builtin,2,33958,0x1067c8c20,48,Store_FastSmiElements_0
code-creation,Builtin,2,33958,0x1067c8c60,108,Store_FastObjectElements_0
code-creation,Builtin,2,33958,0x1067c8ce0,56,Store_FastDoubleElements_0
code-creation,Builtin,2,33958,0x1067c8d20,52,Delete_FastSmiElements_0
code-creation,Builtin,2,33958,0x1067c8d60,52,Delete_FastObjectElements_0
code-creation,Builtin,2,33958,0x1067c8da0,52,Delete_FastDoubleElements_0
code-creation,Builtin,2,33958,0x1067c8de0,188,SortCompareDefault
code-creation,Builtin,2,33958,0x1067c8ea0,128,SortCompareUserFn
code-creation,Builtin,2,33958,0x1067c8f40,12,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,33958,0x1067c8f60,328,Copy
code-creation,Builtin,2,34000,0x1067c90c0,5408,MergeAt
code-creation,Builtin,2,34000,0x1067ca600,852,GallopLeft
code-creation,Builtin,2,34000,0x1067ca960,888,GallopRight
code-creation,Builtin,2,34000,0x1067cace0,3676,ArrayTimSort
code-creation,Builtin,2,34000,0x1067cbb40,1800,ArrayPrototypeSort
code-creation,Builtin,2,34000,0x1067cc260,3972,StringFastLocaleCompare
code-creation,Builtin,2,34000,0x1067cd200,2980,JSToWasmWrapper
code-creation,Builtin,2,34000,0x1067cddc0,2968,WasmReturnPromiseOnSuspend
code-creation,Builtin,2,34000,0x1067ce960,3560,JSToWasmHandleReturns
code-creation,Builtin,2,34000,0x1067cf760,108,WasmInt32ToHeapNumber
code-creation,Builtin,2,34042,0x1067cf7e0,76,WasmFuncRefToJS
code-creation,Builtin,2,34042,0x1067cf840,84,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,34042,0x1067cf8a0,96,WasmTaggedToFloat64
code-creation,Builtin,2,34042,0x1067cf920,100,WasmTaggedToFloat32
code-creation,Builtin,2,34042,0x1067cf9a0,108,WasmMemoryGrow
code-creation,Builtin,2,34042,0x1067cfa20,100,WasmTableInit
code-creation,Builtin,2,34042,0x1067cfaa0,100,WasmTableCopy
code-creation,Builtin,2,34042,0x1067cfb20,88,WasmTableFill
code-creation,Builtin,2,34042,0x1067cfb80,72,WasmTableGrow
code-creation,Builtin,2,34042,0x1067cfbe0,112,WasmTableGet
code-creation,Builtin,2,34042,0x1067cfc60,176,WasmTableSet
code-creation,Builtin,2,34083,0x1067cfd20,180,WasmTableGetFuncRef
code-creation,Builtin,2,34083,0x1067cfde0,120,WasmTableSetFuncRef
code-creation,Builtin,2,34083,0x1067cfe60,96,WasmRefFunc
code-creation,Builtin,2,34083,0x1067cfee0,56,WasmInternalFunctionCreateExternal
code-creation,Builtin,2,34083,0x1067cff20,212,WasmAllocateZeroedFixedArray
code-creation,Builtin,2,34083,0x1067d0000,196,WasmAllocateFixedArray
code-creation,Builtin,2,34083,0x1067d00e0,40,WasmThrow
code-creation,Builtin,2,34083,0x1067d0120,56,WasmRethrow
code-creation,Builtin,2,34083,0x1067d0160,48,WasmRethrowExplicitContext
code-creation,Builtin,2,34083,0x1067d01a0,44,WasmTriggerTierUp
code-creation,Builtin,2,34125,0x1067d01e0,28,WasmStackGuard
code-creation,Builtin,2,34125,0x1067d0200,28,WasmStackOverflow
code-creation,Builtin,2,34125,0x1067d0220,40,WasmTraceMemory
code-creation,Builtin,2,34125,0x1067d0260,28,WasmTraceEnter
code-creation,Builtin,2,34125,0x1067d0280,40,WasmTraceExit
code-creation,Builtin,2,34125,0x1067d02c0,696,WasmAllocateJSArray
code-creation,Builtin,2,34125,0x1067d0580,128,WasmAllocateStructWithRtt
code-creation,Builtin,2,34125,0x1067d0620,172,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,34167,0x1067d06e0,104,WasmArrayNewSegment
code-creation,Builtin,2,34167,0x1067d0760,148,WasmArrayInitSegment
code-creation,Builtin,2,34167,0x1067d0800,160,WasmArrayCopyWithChecks
code-creation,Builtin,2,34167,0x1067d08c0,108,WasmArrayCopy
code-creation,Builtin,2,34167,0x1067d0940,124,WasmUint32ToNumber
code-creation,Builtin,2,34167,0x1067d09c0,128,UintPtr53ToNumber
code-creation,Builtin,2,34167,0x1067d0a60,140,WasmI32AtomicWait
code-creation,Builtin,2,34167,0x1067d0b00,136,WasmI64AtomicWait
code-creation,Builtin,2,34167,0x1067d0ba0,1376,CallRefIC
code-creation,Builtin,2,34167,0x1067d1120,1720,WasmGetOwnProperty
code-creation,Builtin,2,34208,0x1067d17e0,96,WasmTrap
code-creation,Builtin,2,34208,0x1067d1860,12,ThrowWasmTrapUnreachable
code-creation,Builtin,2,34208,0x1067d1880,84,WasmTrapHandlerThrowTrap
code-creation,Builtin,2,34208,0x1067d18e0,12,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,34208,0x1067d1900,12,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,34208,0x1067d1920,12,ThrowWasmTrapDivByZero
code-creation,Builtin,2,34208,0x1067d1940,12,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,34208,0x1067d1960,12,ThrowWasmTrapRemByZero
code-creation,Builtin,2,34208,0x1067d1980,12,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,34250,0x1067d19a0,12,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,34250,0x1067d19c0,12,ThrowWasmTrapDataSegmentOutOfBounds
code-creation,Builtin,2,34250,0x1067d19e0,12,ThrowWasmTrapElementSegmentOutOfBounds
code-creation,Builtin,2,34250,0x1067d1a00,12,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,34250,0x1067d1a20,12,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,34250,0x1067d1a40,12,ThrowWasmTrapNullDereference
code-creation,Builtin,2,34250,0x1067d1a60,12,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,34250,0x1067d1a80,12,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,34250,0x1067d1aa0,12,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,34292,0x1067d1ac0,12,ThrowWasmTrapStringOffsetOutOfBounds
code-creation,Builtin,2,34292,0x1067d1ae0,136,WasmStringNewWtf8
code-creation,Builtin,2,34292,0x1067d1b80,204,WasmStringNewWtf8Array
code-creation,Builtin,2,34292,0x1067d1c60,128,WasmStringNewWtf16
code-creation,Builtin,2,34292,0x1067d1d00,1348,WasmStringNewWtf16Array
code-creation,Builtin,2,34292,0x1067d2260,136,WasmStringFromDataSegment
code-creation,Builtin,2,34292,0x1067d2300,80,WasmStringAsWtf16
code-creation,Builtin,2,34292,0x1067d2360,44,WasmStringConst
code-creation,Builtin,2,34292,0x1067d23a0,88,WasmStringMeasureUtf8
code-creation,Builtin,2,34292,0x1067d2400,88,WasmStringMeasureWtf8
code-creation,Builtin,2,34333,0x1067d2460,148,WasmStringEncodeWtf8
code-creation,Builtin,2,34333,0x1067d2500,132,WasmStringEncodeWtf8Array
code-creation,Builtin,2,34333,0x1067d25a0,136,WasmStringEncodeWtf16
code-creation,Builtin,2,34333,0x1067d2640,872,WasmStringEncodeWtf16Array
code-creation,Builtin,2,34333,0x1067d29c0,72,ThrowToLowerCaseCalledOnNull
code-creation,Builtin,2,34333,0x1067d2a20,72,ThrowIndexOfCalledOnNull
code-creation,Builtin,2,34333,0x1067d2a80,60,ThrowDataViewTypeError
code-creation,Builtin,2,34333,0x1067d2ac0,64,ThrowDataViewDetachedError
code-creation,Builtin,2,34333,0x1067d2b20,64,ThrowDataViewOutOfBounds
code-creation,Builtin,2,34333,0x1067d2b80,20,WasmStringConcat
code-creation,Builtin,2,34375,0x1067d2ba0,100,WasmStringEqual
code-creation,Builtin,2,34375,0x1067d2c20,124,WasmStringIsUSVSequence
code-creation,Builtin,2,34375,0x1067d2ca0,40,WasmStringAsWtf8
code-creation,Builtin,2,34375,0x1067d2ce0,332,WasmStringViewWtf8Advance
code-creation,Builtin,2,34375,0x1067d2e40,212,WasmStringViewWtf8Encode
code-creation,Builtin,2,34375,0x1067d2f20,180,WasmStringViewWtf8Slice
code-creation,Builtin,2,34375,0x1067d2fe0,588,WasmStringViewWtf16GetCodeUnit
code-creation,Builtin,2,34375,0x1067d3240,176,WasmStringViewWtf16Encode
code-creation,Builtin,2,34417,0x1067d3300,5516,WasmStringViewWtf16Slice
code-creation,Builtin,2,34417,0x1067d48a0,112,WasmStringAsIter
code-creation,Builtin,2,34417,0x1067d4920,1228,WasmStringCodePointAt
code-creation,Builtin,2,34417,0x1067d4e00,1200,WasmStringViewIterNext
code-creation,Builtin,2,34417,0x1067d52c0,1292,WasmStringViewIterAdvance
code-creation,Builtin,2,34417,0x1067d57e0,1252,WasmStringViewIterRewind
code-creation,Builtin,2,34417,0x1067d5ce0,5100,WasmStringViewIterSlice
code-creation,Builtin,2,34417,0x1067d70e0,2880,WasmIntToString
code-creation,Builtin,2,34417,0x1067d7c40,176,WasmStringToDouble
code-creation,Builtin,2,34417,0x1067d7d00,72,WasmStringFromCodePoint
code-creation,Builtin,2,34458,0x1067d7d60,64,WasmStringHash
code-creation,Builtin,2,34458,0x1067d7dc0,48,WasmAnyConvertExtern
code-creation,Builtin,2,34458,0x1067d7e00,180,WebAssemblyStringCast
code-creation,Builtin,2,34458,0x1067d7ec0,164,WebAssemblyStringTest
code-creation,Builtin,2,34458,0x1067d7f80,344,WebAssemblyStringFromWtf16Array
code-creation,Builtin,2,34458,0x1067d80e0,352,WebAssemblyStringFromWtf8Array
code-creation,Builtin,2,34458,0x1067d8260,344,WebAssemblyStringToWtf16Array
code-creation,Builtin,2,34458,0x1067d83c0,320,WebAssemblyStringFromCharCode
code-creation,Builtin,2,34458,0x1067d8520,396,WebAssemblyStringFromCodePoint
code-creation,Builtin,2,34500,0x1067d86c0,1276,WebAssemblyStringCodePointAt
code-creation,Builtin,2,34500,0x1067d8bc0,752,WebAssemblyStringCharCodeAt
code-creation,Builtin,2,34500,0x1067d8ec0,184,WebAssemblyStringLength
code-creation,Builtin,2,34500,0x1067d8f80,244,WebAssemblyStringConcat
code-creation,Builtin,2,34500,0x1067d9080,376,WebAssemblyStringSubstring
code-creation,Builtin,2,34500,0x1067d9200,504,WebAssemblyStringEquals
code-creation,Builtin,2,34500,0x1067d9400,244,WebAssemblyStringCompare
code-creation,Builtin,2,34500,0x1067d9500,156,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,34500,0x1067d95a0,28,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,34500,0x1067d95c0,124,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,34542,0x1067d9640,120,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,34542,0x1067d96c0,28,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,34542,0x1067d96e0,232,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,34542,0x1067d97e0,264,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,34542,0x1067d9900,28,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,34542,0x1067d9920,28,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,34542,0x1067d9940,28,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,34542,0x1067d9960,28,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,34583,0x1067d9980,140,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,34583,0x1067d9a20,12,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,34583,0x1067d9a40,52,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,34583,0x1067d9a80,52,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,34583,0x1067d9ac0,52,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,34583,0x1067d9b00,40,LoadNoHasPropertyCheck_GenericElementsAccessor_0
code-creation,Builtin,2,34583,0x1067d9b40,4984,Load_GenericElementsAccessor_0
code-creation,Builtin,2,34625,0x1067daec0,44,Store_GenericElementsAccessor_0
code-creation,Builtin,2,34625,0x1067daf00,48,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,34625,0x1067daf40,28,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,34625,0x1067daf60,180,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,34625,0x1067db020,532,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,34625,0x1067db240,124,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,34625,0x1067db2c0,36,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,34667,0x1067db300,536,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,34667,0x1067db520,120,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,34667,0x1067db5a0,32,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,34667,0x1067db5e0,532,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,34667,0x1067db800,28,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,34667,0x1067db820,32,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,34708,0x1067db860,612,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,34708,0x1067dbae0,232,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,34708,0x1067dbbe0,72,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,34708,0x1067dbc40,568,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,34708,0x1067dbe80,264,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,34708,0x1067dbfa0,72,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,34708,0x1067dc000,568,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,34708,0x1067dc240,28,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,34750,0x1067dc260,32,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,34750,0x1067dc2a0,532,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,34750,0x1067dc4c0,28,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,34750,0x1067dc4e0,32,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,34750,0x1067dc520,532,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,34750,0x1067dc740,28,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,34750,0x1067dc760,32,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,34750,0x1067dc7a0,532,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,34792,0x1067dc9c0,28,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,34792,0x1067dc9e0,32,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,34792,0x1067dca20,532,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,34792,0x1067dcc40,140,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,34792,0x1067dcce0,180,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,34792,0x1067dcda0,532,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,34792,0x1067dcfc0,8,CollatorConstructor
code-creation,Builtin,2,34792,0x1067dcfe0,8,CollatorInternalCompare
code-creation,Builtin,2,34792,0x1067dd000,8,CollatorPrototypeCompare
code-creation,Builtin,2,34792,0x1067dd020,8,CollatorSupportedLocalesOf
code-creation,Builtin,2,34833,0x1067dd040,8,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,34833,0x1067dd060,8,DatePrototypeToLocaleDateString
code-creation,Builtin,2,34833,0x1067dd080,8,DatePrototypeToLocaleString
code-creation,Builtin,2,34833,0x1067dd0a0,8,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,34833,0x1067dd0c0,8,DateTimeFormatConstructor
code-creation,Builtin,2,34833,0x1067dd0e0,8,DateTimeFormatInternalFormat
code-creation,Builtin,2,34833,0x1067dd100,8,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,34875,0x1067dd120,8,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,34875,0x1067dd140,8,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,34875,0x1067dd160,8,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,34875,0x1067dd180,8,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,34875,0x1067dd1a0,8,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,34875,0x1067dd1c0,8,DisplayNamesConstructor
code-creation,Builtin,2,34875,0x1067dd1e0,8,DisplayNamesPrototypeOf
code-creation,Builtin,2,34875,0x1067dd200,8,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,34875,0x1067dd220,8,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,34917,0x1067dd240,8,DurationFormatConstructor
code-creation,Builtin,2,34917,0x1067dd260,8,DurationFormatPrototypeFormat
code-creation,Builtin,2,34917,0x1067dd280,8,DurationFormatPrototypeFormatToParts
code-creation,Builtin,2,34917,0x1067dd2a0,8,DurationFormatPrototypeResolvedOptions
code-creation,Builtin,2,34917,0x1067dd2c0,8,DurationFormatSupportedLocalesOf
code-creation,Builtin,2,34917,0x1067dd2e0,8,IntlGetCanonicalLocales
code-creation,Builtin,2,34917,0x1067dd300,8,IntlSupportedValuesOf
code-creation,Builtin,2,34917,0x1067dd320,8,ListFormatConstructor
code-creation,Builtin,2,34958,0x1067dd340,240,ListFormatPrototypeFormat
code-creation,Builtin,2,34958,0x1067dd440,240,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,34958,0x1067dd540,8,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,34958,0x1067dd560,8,ListFormatSupportedLocalesOf
code-creation,Builtin,2,34958,0x1067dd580,8,LocaleConstructor
code-creation,Builtin,2,34958,0x1067dd5a0,8,LocalePrototypeBaseName
code-creation,Builtin,2,34958,0x1067dd5c0,8,LocalePrototypeCalendar
code-creation,Builtin,2,34958,0x1067dd5e0,8,LocalePrototypeCalendars
code-creation,Builtin,2,34958,0x1067dd600,8,LocalePrototypeCaseFirst
code-creation,Builtin,2,35000,0x1067dd620,8,LocalePrototypeCollation
code-creation,Builtin,2,35000,0x1067dd640,8,LocalePrototypeCollations
code-creation,Builtin,2,35000,0x1067dd660,8,LocalePrototypeGetCalendars
code-creation,Builtin,2,35000,0x1067dd680,8,LocalePrototypeGetCollations
code-creation,Builtin,2,35000,0x1067dd6a0,8,LocalePrototypeGetHourCycles
code-creation,Builtin,2,35000,0x1067dd6c0,8,LocalePrototypeGetNumberingSystems
code-creation,Builtin,2,35000,0x1067dd6e0,8,LocalePrototypeGetTimeZones
code-creation,Builtin,2,35000,0x1067dd700,8,LocalePrototypeGetTextInfo
code-creation,Builtin,2,35000,0x1067dd720,8,LocalePrototypeGetWeekInfo
code-creation,Builtin,2,35042,0x1067dd740,8,LocalePrototypeHourCycle
code-creation,Builtin,2,35042,0x1067dd760,8,LocalePrototypeHourCycles
code-creation,Builtin,2,35042,0x1067dd780,8,LocalePrototypeLanguage
code-creation,Builtin,2,35042,0x1067dd7a0,8,LocalePrototypeMaximize
code-creation,Builtin,2,35042,0x1067dd7c0,8,LocalePrototypeMinimize
code-creation,Builtin,2,35042,0x1067dd7e0,8,LocalePrototypeNumeric
code-creation,Builtin,2,35042,0x1067dd800,8,LocalePrototypeNumberingSystem
code-creation,Builtin,2,35042,0x1067dd820,8,LocalePrototypeNumberingSystems
code-creation,Builtin,2,35042,0x1067dd840,8,LocalePrototypeRegion
code-creation,Builtin,2,35042,0x1067dd860,8,LocalePrototypeScript
code-creation,Builtin,2,35083,0x1067dd880,8,LocalePrototypeTextInfo
code-creation,Builtin,2,35083,0x1067dd8a0,8,LocalePrototypeTimeZones
code-creation,Builtin,2,35083,0x1067dd8c0,8,LocalePrototypeToString
code-creation,Builtin,2,35083,0x1067dd8e0,8,LocalePrototypeWeekInfo
code-creation,Builtin,2,35083,0x1067dd900,8,NumberFormatConstructor
code-creation,Builtin,2,35083,0x1067dd920,8,NumberFormatInternalFormatNumber
code-creation,Builtin,2,35083,0x1067dd940,8,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,35083,0x1067dd960,8,NumberFormatPrototypeFormatRange
code-creation,Builtin,2,35083,0x1067dd980,8,NumberFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,35083,0x1067dd9a0,8,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,35125,0x1067dd9c0,8,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,35125,0x1067dd9e0,8,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,35125,0x1067dda00,8,PluralRulesConstructor
code-creation,Builtin,2,35125,0x1067dda20,8,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,35125,0x1067dda40,8,PluralRulesPrototypeSelect
code-creation,Builtin,2,35125,0x1067dda60,8,PluralRulesPrototypeSelectRange
code-creation,Builtin,2,35125,0x1067dda80,8,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,35125,0x1067ddaa0,8,RelativeTimeFormatConstructor
code-creation,Builtin,2,35125,0x1067ddac0,8,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,35167,0x1067ddae0,8,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,35167,0x1067ddb00,8,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,35167,0x1067ddb20,8,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,35167,0x1067ddb40,8,SegmenterConstructor
code-creation,Builtin,2,35167,0x1067ddb60,8,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,35167,0x1067ddb80,8,SegmenterPrototypeSegment
code-creation,Builtin,2,35167,0x1067ddba0,8,SegmenterSupportedLocalesOf
code-creation,Builtin,2,35167,0x1067ddbc0,8,SegmentIteratorPrototypeNext
code-creation,Builtin,2,35167,0x1067ddbe0,8,SegmentsPrototypeContaining
code-creation,Builtin,2,35208,0x1067ddc00,8,SegmentsPrototypeIterator
code-creation,Builtin,2,35208,0x1067ddc20,8,StringPrototypeNormalizeIntl
code-creation,Builtin,2,35208,0x1067ddc40,1168,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,35208,0x1067de0e0,8,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,35208,0x1067de100,216,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,35208,0x1067de1e0,8,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,35208,0x1067de200,724,StringToLowerCaseIntl
code-creation,Builtin,2,35208,0x1067de4e0,8,TemporalCalendarPrototypeEra
code-creation,Builtin,2,35208,0x1067de500,8,TemporalCalendarPrototypeEraYear
code-creation,Builtin,2,35250,0x1067de520,8,TemporalPlainDatePrototypeEra
code-creation,Builtin,2,35250,0x1067de540,8,TemporalPlainDatePrototypeEraYear
code-creation,Builtin,2,35250,0x1067de560,8,TemporalPlainDateTimePrototypeEra
code-creation,Builtin,2,35250,0x1067de580,8,TemporalPlainDateTimePrototypeEraYear
code-creation,Builtin,2,35250,0x1067de5a0,8,TemporalPlainYearMonthPrototypeEra
code-creation,Builtin,2,35250,0x1067de5c0,8,TemporalPlainYearMonthPrototypeEraYear
code-creation,Builtin,2,35250,0x1067de5e0,8,TemporalZonedDateTimePrototypeEra
code-creation,Builtin,2,35250,0x1067de600,8,TemporalZonedDateTimePrototypeEraYear
code-creation,Builtin,2,35250,0x1067de620,8,V8BreakIteratorConstructor
code-creation,Builtin,2,35292,0x1067de640,8,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,35292,0x1067de660,8,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,35292,0x1067de680,8,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,35292,0x1067de6a0,8,V8BreakIteratorInternalFirst
code-creation,Builtin,2,35292,0x1067de6c0,8,V8BreakIteratorInternalNext
code-creation,Builtin,2,35292,0x1067de6e0,8,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,35292,0x1067de700,8,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,35292,0x1067de720,8,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,35292,0x1067de740,8,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,35292,0x1067de760,8,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,35333,0x1067de780,8,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,35333,0x1067de7a0,8,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,35333,0x1067de7c0,28,Wide
code-creation,BytecodeHandler,0,35333,0x1067de7e0,28,ExtraWide
code-creation,BytecodeHandler,0,35333,0x1067de800,120,DebugBreakWide
code-creation,BytecodeHandler,0,35333,0x1067de880,120,DebugBreakExtraWide
code-creation,BytecodeHandler,0,35333,0x1067de900,184,DebugBreak0
code-creation,BytecodeHandler,0,35333,0x1067de9c0,120,DebugBreak1
code-creation,BytecodeHandler,0,35333,0x1067dea40,120,DebugBreak2
code-creation,BytecodeHandler,0,35333,0x1067deac0,120,DebugBreak3
code-creation,BytecodeHandler,0,35375,0x1067deb40,120,DebugBreak4
code-creation,BytecodeHandler,0,35375,0x1067debc0,120,DebugBreak5
code-creation,BytecodeHandler,0,35375,0x1067dec40,120,DebugBreak6
code-creation,BytecodeHandler,0,35375,0x1067decc0,44,Ldar
code-creation,BytecodeHandler,0,35375,0x1067ded00,76,LdaZero
code-creation,BytecodeHandler,0,35375,0x1067ded60,84,LdaSmi
code-creation,BytecodeHandler,0,35375,0x1067dedc0,76,LdaUndefined
code-creation,BytecodeHandler,0,35375,0x1067dee20,76,LdaNull
code-creation,BytecodeHandler,0,35375,0x1067dee80,76,LdaTheHole
tick,0x185256254,35417,0,0x0,6
tick,0x185259744,35417,0,0x0,6
tick,0x18513a970,35417,0,0x0,6
tick,0x185259744,35417,0,0x0,6
tick,0x1056aa7a8,35417,0,0x0,6
tick,0x185259744,35417,0,0x0,6
tick,0x1852586f4,35417,0,0x0,6
code-creation,BytecodeHandler,0,35417,0x1067deee0,28,LdaTrue
code-creation,BytecodeHandler,0,35417,0x1067def00,28,LdaFalse
code-creation,BytecodeHandler,0,35458,0x1067def20,92,LdaConstant
code-creation,BytecodeHandler,0,35458,0x1067def80,176,LdaContextSlot
code-creation,BytecodeHandler,0,35458,0x1067df040,176,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,35458,0x1067df100,108,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,35458,0x1067df180,108,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,35458,0x1067df200,40,Star
code-creation,BytecodeHandler,0,35458,0x1067df240,52,Mov
code-creation,BytecodeHandler,0,35458,0x1067df280,48,PushContext
code-creation,BytecodeHandler,0,35458,0x1067df2c0,44,PopContext
code-creation,BytecodeHandler,0,35458,0x1067df300,64,TestReferenceEqual
code-creation,BytecodeHandler,0,35458,0x1067df360,64,TestUndetectable
code-creation,BytecodeHandler,0,35458,0x1067df3c0,52,TestNull
code-creation,BytecodeHandler,0,35458,0x1067df400,52,TestUndefined
code-creation,BytecodeHandler,0,35500,0x1067df440,384,TestTypeOf
code-creation,BytecodeHandler,0,35500,0x1067df5e0,5476,LdaGlobal
code-creation,BytecodeHandler,0,35500,0x1067e0b60,4020,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,35500,0x1067e1b20,148,StaGlobal
code-creation,BytecodeHandler,0,35500,0x1067e1bc0,192,StaContextSlot
code-creation,BytecodeHandler,0,35500,0x1067e1ca0,124,StaCurrentContextSlot
code-creation,BytecodeHandler,0,35500,0x1067e1d20,148,LdaLookupSlot
code-creation,BytecodeHandler,0,35500,0x1067e1dc0,312,LdaLookupContextSlot
code-creation,BytecodeHandler,0,35500,0x1067e1f00,4348,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,35500,0x1067e3000,148,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,35500,0x1067e30a0,312,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,35500,0x1067e31e0,4272,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,35500,0x1067e42a0,236,StaLookupSlot
code-creation,BytecodeHandler,0,35500,0x1067e43a0,4676,GetNamedProperty
code-creation,BytecodeHandler,0,35542,0x1067e5600,172,GetNamedPropertyFromSuper
code-creation,BytecodeHandler,0,35542,0x1067e56c0,196,GetKeyedProperty
code-creation,BytecodeHandler,0,35542,0x1067e57a0,228,LdaModuleVariable
code-creation,BytecodeHandler,0,35542,0x1067e58a0,348,StaModuleVariable
code-creation,BytecodeHandler,0,35542,0x1067e5a00,164,SetNamedProperty
code-creation,BytecodeHandler,0,35542,0x1067e5ac0,164,DefineNamedOwnProperty
code-creation,BytecodeHandler,0,35542,0x1067e5b80,156,SetKeyedProperty
code-creation,BytecodeHandler,0,35542,0x1067e5c20,176,DefineKeyedOwnProperty
code-creation,BytecodeHandler,0,35542,0x1067e5ce0,156,StaInArrayLiteral
code-creation,BytecodeHandler,0,35542,0x1067e5d80,192,DefineKeyedOwnPropertyInLiteral
code-creation,BytecodeHandler,0,35542,0x1067e5e60,1456,Add
code-creation,BytecodeHandler,0,35542,0x1067e6420,1448,Sub
code-creation,BytecodeHandler,0,35542,0x1067e69e0,1544,Mul
code-creation,BytecodeHandler,0,35542,0x1067e7000,1568,Div
code-creation,BytecodeHandler,0,35542,0x1067e7640,1468,Mod
code-creation,BytecodeHandler,0,35583,0x1067e7c00,820,Exp
code-creation,BytecodeHandler,0,35583,0x1067e7f40,1712,BitwiseOr
code-creation,BytecodeHandler,0,35583,0x1067e8600,1712,BitwiseXor
code-creation,BytecodeHandler,0,35583,0x1067e8cc0,1712,BitwiseAnd
code-creation,BytecodeHandler,0,35583,0x1067e9380,1188,ShiftLeft
code-creation,BytecodeHandler,0,35583,0x1067e9840,1188,ShiftRight
code-creation,BytecodeHandler,0,35583,0x1067e9d00,1252,ShiftRightLogical
code-creation,BytecodeHandler,0,35583,0x1067ea200,1284,AddSmi
code-creation,BytecodeHandler,0,35583,0x1067ea720,1320,SubSmi
code-creation,BytecodeHandler,0,35583,0x1067eac60,1372,MulSmi
code-creation,BytecodeHandler,0,35583,0x1067eb1c0,1512,DivSmi
code-creation,BytecodeHandler,0,35583,0x1067eb7c0,1332,ModSmi
code-creation,BytecodeHandler,0,35583,0x1067ebd00,732,ExpSmi
code-creation,BytecodeHandler,0,35583,0x1067ebfe0,520,BitwiseOrSmi
code-creation,BytecodeHandler,0,35583,0x1067ec200,520,BitwiseXorSmi
code-creation,BytecodeHandler,0,35583,0x1067ec420,520,BitwiseAndSmi
code-creation,BytecodeHandler,0,35625,0x1067ec640,548,ShiftLeftSmi
code-creation,BytecodeHandler,0,35625,0x1067ec880,528,ShiftRightSmi
code-creation,BytecodeHandler,0,35625,0x1067ecaa0,820,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,35625,0x1067ecde0,700,Inc
code-creation,BytecodeHandler,0,35625,0x1067ed0a0,700,Dec
code-creation,BytecodeHandler,0,35625,0x1067ed360,672,Negate
code-creation,BytecodeHandler,0,35625,0x1067ed620,520,BitwiseNot
code-creation,BytecodeHandler,0,35625,0x1067ed840,160,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,35625,0x1067ed900,44,LogicalNot
code-creation,BytecodeHandler,0,35667,0x1067ed940,292,TypeOf
code-creation,BytecodeHandler,0,35667,0x1067eda80,128,DeletePropertyStrict
code-creation,BytecodeHandler,0,35667,0x1067edb20,128,DeletePropertySloppy
code-creation,BytecodeHandler,0,35667,0x1067edbc0,48,GetSuperConstructor
code-creation,BytecodeHandler,0,35667,0x1067edc00,340,FindNonDefaultConstructorOrConstruct
code-creation,BytecodeHandler,0,35667,0x1067edd60,860,CallAnyReceiver
code-creation,BytecodeHandler,0,35667,0x1067ee0c0,860,CallProperty
code-creation,BytecodeHandler,0,35667,0x1067ee420,880,CallProperty0
code-creation,BytecodeHandler,0,35667,0x1067ee7a0,892,CallProperty1
code-creation,BytecodeHandler,0,35667,0x1067eeb20,912,CallProperty2
code-creation,BytecodeHandler,0,35667,0x1067eeec0,864,CallUndefinedReceiver
code-creation,BytecodeHandler,0,35667,0x1067ef240,856,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,35667,0x1067ef5a0,868,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,35667,0x1067ef920,888,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,35708,0x1067efca0,860,CallWithSpread
code-creation,BytecodeHandler,0,35708,0x1067f0000,136,CallRuntime
code-creation,BytecodeHandler,0,35708,0x1067f00a0,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,35708,0x1067f0140,96,CallJSRuntime
code-creation,BytecodeHandler,0,35708,0x1067f01c0,1844,InvokeIntrinsic
code-creation,BytecodeHandler,0,35708,0x1067f0900,1164,Construct
code-creation,BytecodeHandler,0,35708,0x1067f0da0,452,ConstructWithSpread
code-creation,BytecodeHandler,0,35708,0x1067f0f80,1012,ConstructForwardAllArgs
code-creation,BytecodeHandler,0,35708,0x1067f1380,2224,TestEqual
code-creation,BytecodeHandler,0,35708,0x1067f1c40,1120,TestEqualStrict
code-creation,BytecodeHandler,0,35708,0x1067f20c0,1612,TestLessThan
code-creation,BytecodeHandler,0,35708,0x1067f2720,1612,TestGreaterThan
code-creation,BytecodeHandler,0,35708,0x1067f2d80,1612,TestLessThanOrEqual
code-creation,BytecodeHandler,0,35708,0x1067f33e0,1612,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,35750,0x1067f3a40,1052,TestInstanceOf
code-creation,BytecodeHandler,0,35750,0x1067f3e60,140,TestIn
code-creation,BytecodeHandler,0,35750,0x1067f3f00,104,ToName
code-creation,BytecodeHandler,0,35750,0x1067f3f80,200,ToNumber
code-creation,BytecodeHandler,0,35750,0x1067f4060,220,ToNumeric
code-creation,BytecodeHandler,0,35750,0x1067f4140,124,ToObject
code-creation,BytecodeHandler,0,35750,0x1067f41c0,152,ToString
code-creation,BytecodeHandler,0,35750,0x1067f4260,160,ToBoolean
code-creation,BytecodeHandler,0,35750,0x1067f4320,412,CreateRegExpLiteral
code-creation,BytecodeHandler,0,35750,0x1067f44c0,1840,CreateArrayLiteral
code-creation,BytecodeHandler,0,35750,0x1067f4c00,104,CreateArrayFromIterable
code-creation,BytecodeHandler,0,35750,0x1067f4c80,748,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,35750,0x1067f4f80,2796,CreateObjectLiteral
code-creation,BytecodeHandler,0,35750,0x1067f5a80,304,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,35750,0x1067f5bc0,156,CloneObject
code-creation,BytecodeHandler,0,35792,0x1067f5c60,208,GetTemplateObject
code-creation,BytecodeHandler,0,35792,0x1067f5d40,352,CreateClosure
code-creation,BytecodeHandler,0,35792,0x1067f5ec0,136,CreateBlockContext
code-creation,BytecodeHandler,0,35792,0x1067f5f60,144,CreateCatchContext
code-creation,BytecodeHandler,0,35792,0x1067f6000,376,CreateFunctionContext
code-creation,BytecodeHandler,0,35792,0x1067f6180,376,CreateEvalContext
code-creation,BytecodeHandler,0,35792,0x1067f6300,144,CreateWithContext
code-creation,BytecodeHandler,0,35792,0x1067f63a0,1908,CreateMappedArguments
code-creation,BytecodeHandler,0,35792,0x1067f6b20,632,CreateUnmappedArguments
code-creation,BytecodeHandler,0,35792,0x1067f6da0,680,CreateRestParameter
code-creation,BytecodeHandler,0,35792,0x1067f7060,1316,JumpLoop
code-creation,BytecodeHandler,0,35792,0x1067f75a0,32,Jump
code-creation,BytecodeHandler,0,35792,0x1067f75e0,48,JumpConstant
code-creation,BytecodeHandler,0,35833,0x1067f7620,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,35833,0x1067f7680,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,35833,0x1067f76e0,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,35833,0x1067f7740,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,35833,0x1067f77a0,92,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,35833,0x1067f7800,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,35833,0x1067f7860,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,35833,0x1067f78c0,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,35833,0x1067f7920,188,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,35833,0x1067f79e0,188,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,35833,0x1067f7aa0,172,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,35833,0x1067f7b60,172,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,35833,0x1067f7c20,64,JumpIfTrue
code-creation,BytecodeHandler,0,35833,0x1067f7c80,64,JumpIfFalse
code-creation,BytecodeHandler,0,35875,0x1067f7ce0,64,JumpIfNull
code-creation,BytecodeHandler,0,35875,0x1067f7d40,64,JumpIfNotNull
code-creation,BytecodeHandler,0,35875,0x1067f7da0,64,JumpIfUndefined
code-creation,BytecodeHandler,0,35875,0x1067f7e00,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,35875,0x1067f7e60,76,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,35875,0x1067f7ec0,72,JumpIfJSReceiver
code-creation,BytecodeHandler,0,35875,0x1067f7f20,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,35875,0x1067f7fa0,532,ForInEnumerate
code-creation,BytecodeHandler,0,35875,0x1067f81c0,236,ForInPrepare
code-creation,BytecodeHandler,0,35875,0x1067f82c0,76,ForInContinue
code-creation,BytecodeHandler,0,35875,0x1067f8320,268,ForInNext
code-creation,BytecodeHandler,0,35875,0x1067f8440,48,ForInStep
code-creation,BytecodeHandler,0,35875,0x1067f8480,36,SetPendingMessage
code-creation,BytecodeHandler,0,35875,0x1067f84c0,124,Throw
code-creation,BytecodeHandler,0,35875,0x1067f8540,124,ReThrow
code-creation,BytecodeHandler,0,35875,0x1067f85c0,120,Return
code-creation,BytecodeHandler,0,35917,0x1067f8640,224,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,35917,0x1067f8740,144,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,35917,0x1067f87e0,144,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,35917,0x1067f8880,168,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,35917,0x1067f8940,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,35917,0x1067f89c0,400,SuspendGenerator
code-creation,BytecodeHandler,0,35917,0x1067f8b60,176,ResumeGenerator
code-creation,BytecodeHandler,0,35917,0x1067f8c20,140,GetIterator
code-creation,BytecodeHandler,0,35917,0x1067f8cc0,112,Debugger
code-creation,BytecodeHandler,0,35917,0x1067f8d40,132,IncBlockCounter
code-creation,BytecodeHandler,0,35917,0x1067f8de0,72,Abort
code-creation,BytecodeHandler,0,35917,0x1067f8e40,44,Star0
code-creation,BytecodeHandler,0,35917,0x1067f8e80,68,Illegal
code-creation,BytecodeHandler,0,35917,0x1067f8ee0,124,DebugBreak1.Wide
code-creation,BytecodeHandler,0,35917,0x1067f8f60,124,DebugBreak2.Wide
code-creation,BytecodeHandler,0,35958,0x1067f8fe0,124,DebugBreak3.Wide
code-creation,BytecodeHandler,0,35958,0x1067f9060,124,DebugBreak4.Wide
code-creation,BytecodeHandler,0,35958,0x1067f90e0,124,DebugBreak5.Wide
code-creation,BytecodeHandler,0,35958,0x1067f9160,124,DebugBreak6.Wide
code-creation,BytecodeHandler,0,35958,0x1067f91e0,44,Ldar.Wide
code-creation,BytecodeHandler,0,35958,0x1067f9220,40,LdaSmi.Wide
code-creation,BytecodeHandler,0,35958,0x1067f9260,48,LdaConstant.Wide
code-creation,BytecodeHandler,0,35958,0x1067f92a0,136,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,35958,0x1067f9340,136,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,35958,0x1067f93e0,68,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,35958,0x1067f9440,68,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,35958,0x1067f94a0,40,Star.Wide
code-creation,BytecodeHandler,0,35958,0x1067f94e0,52,Mov.Wide
code-creation,BytecodeHandler,0,35958,0x1067f9520,48,PushContext.Wide
code-creation,BytecodeHandler,0,36000,0x1067f9560,44,PopContext.Wide
code-creation,BytecodeHandler,0,36000,0x1067f95a0,64,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,36000,0x1067f9600,4156,LdaGlobal.Wide
code-creation,BytecodeHandler,0,36000,0x1067fa640,4072,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,36000,0x1067fb640,152,StaGlobal.Wide
code-creation,BytecodeHandler,0,36000,0x1067fb6e0,192,StaContextSlot.Wide
code-creation,BytecodeHandler,0,36000,0x1067fb7c0,124,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,36000,0x1067fb840,152,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,36000,0x1067fb8e0,316,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,36000,0x1067fba20,4356,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,36000,0x1067fcb40,152,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,36000,0x1067fcbe0,316,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,36000,0x1067fcd20,4280,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,36000,0x1067fdde0,240,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,36042,0x1067fdee0,4700,GetNamedProperty.Wide
code-creation,BytecodeHandler,0,36042,0x1067ff140,176,GetNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,36042,0x1067ff200,144,GetKeyedProperty.Wide
code-creation,BytecodeHandler,0,36042,0x1067ff2a0,228,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,36042,0x1067ff3a0,352,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,36042,0x1067ff520,168,SetNamedProperty.Wide
code-creation,BytecodeHandler,0,36042,0x1067ff5e0,168,DefineNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,36042,0x1067ff6a0,160,SetKeyedProperty.Wide
code-creation,BytecodeHandler,0,36042,0x1067ff760,180,DefineKeyedOwnProperty.Wide
code-creation,BytecodeHandler,0,36042,0x1067ff820,160,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,36042,0x1067ff8e0,196,DefineKeyedOwnPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,36042,0x1067ff9c0,1420,Add.Wide
code-creation,BytecodeHandler,0,36042,0x1067fff60,1408,Sub.Wide
code-creation,BytecodeHandler,0,36042,0x106800500,1504,Mul.Wide
code-creation,BytecodeHandler,0,36083,0x106800b00,1580,Div.Wide
code-creation,BytecodeHandler,0,36083,0x106801140,1476,Mod.Wide
code-creation,BytecodeHandler,0,36083,0x106801720,832,Exp.Wide
code-creation,BytecodeHandler,0,36083,0x106801a80,1760,BitwiseOr.Wide
code-creation,BytecodeHandler,0,36083,0x106802180,1760,BitwiseXor.Wide
code-creation,BytecodeHandler,0,36083,0x106802880,1760,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,36083,0x106802f80,1220,ShiftLeft.Wide
code-creation,BytecodeHandler,0,36083,0x106803460,1220,ShiftRight.Wide
code-creation,BytecodeHandler,0,36083,0x106803940,1280,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,36083,0x106803e60,1256,AddSmi.Wide
code-creation,BytecodeHandler,0,36083,0x106804360,1284,SubSmi.Wide
code-creation,BytecodeHandler,0,36083,0x106804880,1380,MulSmi.Wide
code-creation,BytecodeHandler,0,36083,0x106804e00,1520,DivSmi.Wide
code-creation,BytecodeHandler,0,36083,0x106805400,1344,ModSmi.Wide
code-creation,BytecodeHandler,0,36083,0x106805960,724,ExpSmi.Wide
code-creation,BytecodeHandler,0,36083,0x106805c40,532,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,36125,0x106805e60,532,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,36125,0x106806080,532,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,36125,0x1068062a0,560,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,36125,0x1068064e0,540,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,36125,0x106806700,836,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,36125,0x106806a60,664,Inc.Wide
code-creation,BytecodeHandler,0,36125,0x106806d00,664,Dec.Wide
code-creation,BytecodeHandler,0,36125,0x106806fa0,684,Negate.Wide
code-creation,BytecodeHandler,0,36125,0x106807260,536,BitwiseNot.Wide
code-creation,BytecodeHandler,0,36125,0x106807480,132,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,36125,0x106807520,132,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,36125,0x1068075c0,48,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,36125,0x106807600,344,FindNonDefaultConstructorOrConstruct.Wide
code-creation,BytecodeHandler,0,36167,0x106807760,868,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,36167,0x106807ae0,868,CallProperty.Wide
code-creation,BytecodeHandler,0,36167,0x106807e60,880,CallProperty0.Wide
code-creation,BytecodeHandler,0,36167,0x1068081e0,892,CallProperty1.Wide
code-creation,BytecodeHandler,0,36167,0x106808560,912,CallProperty2.Wide
code-creation,BytecodeHandler,0,36167,0x106808900,864,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,36167,0x106808c80,856,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,36167,0x106808fe0,868,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,36167,0x106809360,888,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,36167,0x1068096e0,868,CallWithSpread.Wide
code-creation,BytecodeHandler,0,36167,0x106809a60,140,CallRuntime.Wide
code-creation,BytecodeHandler,0,36167,0x106809b00,164,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,36167,0x106809bc0,100,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,36167,0x106809c40,1852,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,36167,0x10680a380,1116,Construct.Wide
code-creation,BytecodeHandler,0,36208,0x10680a7e0,400,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,36208,0x10680a980,1012,ConstructForwardAllArgs.Wide
code-creation,BytecodeHandler,0,36208,0x10680ad80,2232,TestEqual.Wide
code-creation,BytecodeHandler,0,36208,0x10680b640,1128,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,36208,0x10680bac0,1624,TestLessThan.Wide
code-creation,BytecodeHandler,0,36208,0x10680c120,1624,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,36208,0x10680c780,1624,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,36208,0x10680cde0,1624,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,36208,0x10680d440,1060,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,36208,0x10680d880,144,TestIn.Wide
code-creation,BytecodeHandler,0,36208,0x10680d920,204,ToNumber.Wide
code-creation,BytecodeHandler,0,36208,0x10680da00,224,ToNumeric.Wide
code-creation,BytecodeHandler,0,36208,0x10680db00,128,ToObject.Wide
code-creation,BytecodeHandler,0,36208,0x10680dba0,416,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,36250,0x10680dd60,1752,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,36250,0x10680e440,748,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,36250,0x10680e740,2712,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,36250,0x10680f1e0,160,CloneObject.Wide
code-creation,BytecodeHandler,0,36250,0x10680f2a0,156,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,36250,0x10680f340,348,CreateClosure.Wide
code-creation,BytecodeHandler,0,36250,0x10680f4a0,140,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,36250,0x10680f540,148,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,36250,0x10680f5e0,376,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,36250,0x10680f760,376,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,36250,0x10680f8e0,148,CreateWithContext.Wide
code-creation,BytecodeHandler,0,36250,0x10680f980,1344,JumpLoop.Wide
code-creation,BytecodeHandler,0,36250,0x10680fee0,32,Jump.Wide
code-creation,BytecodeHandler,0,36250,0x10680ff20,48,JumpConstant.Wide
code-creation,BytecodeHandler,0,36250,0x10680ff60,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,36292,0x10680ffc0,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,36292,0x106810020,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,36292,0x106810080,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,36292,0x1068100e0,92,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,36292,0x106810140,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,36292,0x1068101a0,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,36292,0x106810200,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,36292,0x106810260,188,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,36292,0x106810320,188,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,36292,0x1068103e0,172,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,36292,0x1068104a0,172,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,36333,0x106810560,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,36333,0x1068105c0,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,36333,0x106810620,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,36333,0x106810680,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,36333,0x1068106e0,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,36333,0x106810740,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,36333,0x1068107a0,76,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,36333,0x106810800,72,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,36333,0x106810860,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,36333,0x1068108e0,536,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,36333,0x106810b00,236,ForInPrepare.Wide
code-creation,BytecodeHandler,0,36333,0x106810c00,76,ForInContinue.Wide
code-creation,BytecodeHandler,0,36333,0x106810c60,272,ForInNext.Wide
code-creation,BytecodeHandler,0,36333,0x106810d80,48,ForInStep.Wide
code-creation,BytecodeHandler,0,36333,0x106810dc0,184,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,36375,0x106810e80,172,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,36375,0x106810f40,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,36375,0x106810fc0,408,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,36375,0x106811160,176,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,36375,0x106811220,144,GetIterator.Wide
code-creation,BytecodeHandler,0,36375,0x1068112c0,136,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,36375,0x106811360,76,Abort.Wide
code-creation,BytecodeHandler,0,36375,0x1068113c0,124,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,36375,0x106811440,124,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,36375,0x1068114c0,124,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,36375,0x106811540,124,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,36375,0x1068115c0,124,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,36375,0x106811640,124,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,36375,0x1068116c0,44,Ldar.ExtraWide
code-creation,BytecodeHandler,0,36417,0x106811700,40,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,36417,0x106811740,48,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,36417,0x106811780,136,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,36417,0x106811820,136,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,36417,0x1068118c0,68,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,36417,0x106811920,68,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,36417,0x106811980,40,Star.ExtraWide
code-creation,BytecodeHandler,0,36417,0x1068119c0,52,Mov.ExtraWide
code-creation,BytecodeHandler,0,36417,0x106811a00,48,PushContext.ExtraWide
code-creation,BytecodeHandler,0,36417,0x106811a40,44,PopContext.ExtraWide
code-creation,BytecodeHandler,0,36417,0x106811a80,64,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,36417,0x106811ae0,4156,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,36417,0x106812b20,4072,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,36417,0x106813b20,152,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,36458,0x106813bc0,192,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,36458,0x106813ca0,124,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,36458,0x106813d20,152,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,36458,0x106813dc0,316,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,36458,0x106813f00,4356,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,36458,0x106815020,152,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,36458,0x1068150c0,316,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,36458,0x106815200,4280,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,36458,0x1068162c0,240,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,36458,0x1068163c0,4700,GetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,36458,0x106817620,176,GetNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,36458,0x1068176e0,144,GetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,36500,0x106817780,228,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,36500,0x106817880,352,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,36500,0x106817a00,168,SetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,36500,0x106817ac0,168,DefineNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,36500,0x106817b80,160,SetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,36500,0x106817c40,180,DefineKeyedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,36500,0x106817d00,160,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,36500,0x106817dc0,196,DefineKeyedOwnPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,36500,0x106817ea0,1420,Add.ExtraWide
code-creation,BytecodeHandler,0,36500,0x106818440,1408,Sub.ExtraWide
code-creation,BytecodeHandler,0,36500,0x1068189e0,1504,Mul.ExtraWide
code-creation,BytecodeHandler,0,36500,0x106818fe0,1580,Div.ExtraWide
code-creation,BytecodeHandler,0,36500,0x106819620,1476,Mod.ExtraWide
code-creation,BytecodeHandler,0,36500,0x106819c00,832,Exp.ExtraWide
code-creation,BytecodeHandler,0,36542,0x106819f60,1760,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,36542,0x10681a660,1760,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,36542,0x10681ad60,1760,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,36542,0x10681b460,1220,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,36542,0x10681b940,1220,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,36542,0x10681be20,1280,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,36542,0x10681c340,1256,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,36542,0x10681c840,1284,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,36542,0x10681cd60,1380,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,36542,0x10681d2e0,1520,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,36542,0x10681d8e0,1344,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,36542,0x10681de40,724,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,36542,0x10681e120,528,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,36542,0x10681e340,528,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,36542,0x10681e560,528,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,36583,0x10681e780,548,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,36583,0x10681e9c0,536,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,36583,0x10681ebe0,828,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,36583,0x10681ef20,664,Inc.ExtraWide
code-creation,BytecodeHandler,0,36583,0x10681f1c0,664,Dec.ExtraWide
code-creation,BytecodeHandler,0,36583,0x10681f460,684,Negate.ExtraWide
code-creation,BytecodeHandler,0,36583,0x10681f720,536,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,36583,0x10681f940,132,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,36583,0x10681f9e0,132,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,36583,0x10681fa80,48,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,36583,0x10681fac0,344,FindNonDefaultConstructorOrConstruct.ExtraWide
code-creation,BytecodeHandler,0,36583,0x10681fc20,868,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,36583,0x10681ffa0,868,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,36625,0x106820320,880,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,36625,0x1068206a0,892,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,36625,0x106820a20,912,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,36625,0x106820dc0,864,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,36625,0x106821140,856,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,36625,0x1068214a0,868,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,36625,0x106821820,888,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,36625,0x106821ba0,868,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,36625,0x106821f20,140,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,36625,0x106821fc0,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,36625,0x106822080,100,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,36625,0x106822100,1852,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,36667,0x106822840,1116,Construct.ExtraWide
code-creation,BytecodeHandler,0,36667,0x106822ca0,400,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,36667,0x106822e40,1012,ConstructForwardAllArgs.ExtraWide
code-creation,BytecodeHandler,0,36667,0x106823240,2232,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,36667,0x106823b00,1128,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,36667,0x106823f80,1624,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,36667,0x1068245e0,1624,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,36667,0x106824c40,1624,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,36667,0x1068252a0,1624,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,36708,0x106825900,1060,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,36708,0x106825d40,144,TestIn.ExtraWide
code-creation,BytecodeHandler,0,36708,0x106825de0,204,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,36708,0x106825ec0,224,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,36708,0x106825fc0,128,ToObject.ExtraWide
code-creation,BytecodeHandler,0,36708,0x106826060,416,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,36708,0x106826220,1752,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,36708,0x106826900,748,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,36708,0x106826c00,2712,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,36750,0x1068276a0,160,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,36750,0x106827760,156,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,36750,0x106827800,348,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,36750,0x106827960,140,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,36750,0x106827a00,148,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,36750,0x106827aa0,376,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,36750,0x106827c20,376,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,36750,0x106827da0,148,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,36750,0x106827e40,1344,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,36792,0x1068283a0,32,Jump.ExtraWide
code-creation,BytecodeHandler,0,36792,0x1068283e0,48,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,36792,0x106828420,80,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,36792,0x106828480,80,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,36792,0x1068284e0,80,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,36792,0x106828540,80,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,36792,0x1068285a0,92,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,36792,0x106828600,80,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,36792,0x106828660,80,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,36833,0x1068286c0,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,36833,0x106828720,188,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,36833,0x1068287e0,188,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,36833,0x1068288a0,172,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,36833,0x106828960,172,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,36833,0x106828a20,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,36833,0x106828a80,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,36833,0x106828ae0,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,36833,0x106828b40,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,36875,0x106828ba0,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,36875,0x106828c00,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,36875,0x106828c60,76,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,36875,0x106828cc0,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,36875,0x106828d20,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,36875,0x106828da0,536,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,36875,0x106828fc0,236,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,36875,0x1068290c0,76,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,36875,0x106829120,272,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,36917,0x106829240,48,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,36917,0x106829280,184,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,36917,0x106829340,172,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,36917,0x106829400,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,36917,0x106829480,408,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,36917,0x106829620,176,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,36917,0x1068296e0,144,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,36917,0x106829780,136,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,36917,0x106829820,76,Abort.ExtraWide
tick,0x185259744,36958,0,0x0,6
new,MemoryChunk,0xd68380c0000,262144
tick,0x105708698,37917,0,0x0,6
tick,0x105c662d0,39167,0,0x0,5
new,MemoryChunk,0x43357680000,262144
new,MemoryChunk,0x143014680000,262144
tick,0x105c6a7d8,40417,0,0x0,5
new,MemoryChunk,0x1e25b3600000,262144
new,MemoryChunk,0x38df7fd40000,262144
tick,0x105c66b8c,41667,0,0x0,5
new,MemoryChunk,0x3cd278cc0000,262144
new,MemoryChunk,0x30218dac0000,262144
tick,0x1852c56b0,42917,0,0x0,5
new,MemoryChunk,0x13527d0c0000,262144
new,MemoryChunk,0x10601c200000,262144
tick,0x105c66b8c,44167,0,0x0,5
new,MemoryChunk,0xc59e4b80000,262144
new,MemoryChunk,0x5e7d3080000,262144
tick,0x105c66b8c,45417,0,0x0,5
tick,0x105b3512c,46708,0,0x0,5
tick,0x105b5c188,48000,0,0x0,5
tick,0x1049f0008,49292,0,0x0,6
tick,0x1852c5704,50500,0,0x0,6
tick,0x1046806a0,51750,0,0x0,6
tick,0x106682720,53042,0,0x0,0
tick,0x10572be08,54250,0,0x0,2
tick,0x105967540,55500,0,0x0,3
new,MemoryChunk,0x1123fa480000,262144
code-creation,JS,10,56000,0x1123fa481168,987,bootstrapMainRuntime ext:runtime_main/js/99_main.js:635:30,0xb8452732c0,~
script-source,300,ext:runtime_main/js/99_main.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\n// Remove Intl.v8BreakIterator because it is a non-standard API.\ndelete Intl.v8BreakIterator;\n\nimport { core\x2C internals\x2C primordials } from "ext:core/mod.js";\nconst ops = core.ops;\nimport {\n  op_bootstrap_args\x2C\n  op_bootstrap_is_tty\x2C\n  op_bootstrap_no_color\x2C\n  op_bootstrap_pid\x2C\n  op_main_module\x2C\n  op_ppid\x2C\n  op_set_format_exception_callback\x2C\n  op_snapshot_options\x2C\n  op_worker_close\x2C\n  op_worker_get_type\x2C\n  op_worker_post_message\x2C\n  op_worker_recv_message\x2C\n  op_worker_sync_fetch\x2C\n} from "ext:core/ops";\nconst {\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePop\x2C\n  ArrayPrototypeShift\x2C\n  DateNow\x2C\n  Error\x2C\n  ErrorPrototype\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeIsPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  PromisePrototypeThen\x2C\n  PromiseResolve\x2C\n  SafeSet\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeTrim\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n  TypeError\x2C\n} = primordials;\nconst {\n  isNativeError\x2C\n} = core;\nimport * as event from "ext:deno_web/02_event.js";\nimport * as location from "ext:deno_web/12_location.js";\nimport * as version from "ext:runtime/01_version.ts";\nimport * as os from "ext:runtime/30_os.js";\nimport * as timers from "ext:deno_web/02_timers.js";\nimport {\n  customInspect\x2C\n  getDefaultInspectOptions\x2C\n  getNoColor\x2C\n  inspectArgs\x2C\n  quoteString\x2C\n  setNoColorFn\x2C\n} from "ext:deno_console/01_console.js";\nimport * as performance from "ext:deno_web/15_performance.js";\nimport * as url from "ext:deno_url/00_url.js";\nimport * as fetch from "ext:deno_fetch/26_fetch.js";\nimport * as messagePort from "ext:deno_web/13_message_port.js";\nimport {\n  denoNs\x2C\n  denoNsUnstable\x2C\n  denoNsUnstableById\x2C\n  unstableIds\x2C\n} from "ext:runtime/90_deno_ns.js";\nimport { errors } from "ext:runtime/01_errors.js";\nimport * as webidl from "ext:deno_webidl/00_webidl.js";\nimport { DOMException } from "ext:deno_web/01_dom_exception.js";\nimport {\n  unstableForWindowOrWorkerGlobalScope\x2C\n  windowOrWorkerGlobalScope\x2C\n} from "ext:runtime/98_global_scope_shared.js";\nimport {\n  mainRuntimeGlobalProperties\x2C\n  memoizeLazy\x2C\n} from "ext:runtime/98_global_scope_window.js";\nimport {\n  workerRuntimeGlobalProperties\x2C\n} from "ext:runtime/98_global_scope_worker.js";\nimport {\n  SymbolAsyncDispose\x2C\n  SymbolDispose\x2C\n  SymbolMetadata\x2C\n} from "ext:deno_web/00_infra.js";\n// deno-lint-ignore prefer-primordials\nif (Symbol.dispose) throw "V8 supports Symbol.dispose now\x2C no need to shim it!";\n// deno-lint-ignore prefer-primordials\nif (Symbol.asyncDispose) {\n  throw "V8 supports Symbol.asyncDispose now\x2C no need to shim it!";\n}\n// deno-lint-ignore prefer-primordials\nif (Symbol.metadata) {\n  throw "V8 supports Symbol.metadata now\x2C no need to shim it!";\n}\nObjectDefineProperties(Symbol\x2C {\n  dispose: {\n    value: SymbolDispose\x2C\n    enumerable: false\x2C\n    writable: false\x2C\n    configurable: false\x2C\n  }\x2C\n  asyncDispose: {\n    value: SymbolAsyncDispose\x2C\n    enumerable: false\x2C\n    writable: false\x2C\n    configurable: false\x2C\n  }\x2C\n  metadata: {\n    value: SymbolMetadata\x2C\n    enumerable: false\x2C\n    writable: false\x2C\n    configurable: false\x2C\n  }\x2C\n});\n\nlet windowIsClosing = false;\nlet globalThis_;\n\nlet verboseDeprecatedApiWarning = false;\nlet deprecatedApiWarningDisabled = false;\nconst ALREADY_WARNED_DEPRECATED = new SafeSet();\n\nfunction warnOnDeprecatedApi(apiName\x2C stack\x2C ...suggestions) {\n  if (deprecatedApiWarningDisabled) {\n    return;\n  }\n\n  if (!verboseDeprecatedApiWarning) {\n    if (ALREADY_WARNED_DEPRECATED.has(apiName)) {\n      return;\n    }\n    ALREADY_WARNED_DEPRECATED.add(apiName);\n    console.error(\n      `%cwarning: %cUse of deprecated "${apiName}" API. This API will be removed in Deno 2. Run again with DENO_VERBOSE_WARNINGS=1 to get more details.`\x2C\n      "color: yellow;"\x2C\n      "font-weight: bold;"\x2C\n    );\n    return;\n  }\n\n  if (ALREADY_WARNED_DEPRECATED.has(apiName + stack)) {\n    return;\n  }\n\n  // If we haven't warned yet\x2C let's do some processing of the stack trace\n  // to make it more useful.\n  const stackLines = StringPrototypeSplit(stack\x2C "\\n");\n  ArrayPrototypeShift(stackLines);\n  while (stackLines.length > 0) {\n    // Filter out internal frames at the top of the stack - they are not useful\n    // to the user.\n    if (\n      StringPrototypeIncludes(stackLines[0]\x2C "(ext:") ||\n      StringPrototypeIncludes(stackLines[0]\x2C "(node:") ||\n      StringPrototypeIncludes(stackLines[0]\x2C "<anonymous>")\n    ) {\n      ArrayPrototypeShift(stackLines);\n    } else {\n      break;\n    }\n  }\n  // Now remove the last frame if it's coming from "ext:core" - this is most likely\n  // event loop tick or promise handler calling a user function - again not\n  // useful to the user.\n  if (\n    stackLines.length > 0 &&\n    StringPrototypeIncludes(stackLines[stackLines.length - 1]\x2C "(ext:core/")\n  ) {\n    ArrayPrototypePop(stackLines);\n  }\n\n  let isFromRemoteDependency = false;\n  const firstStackLine = stackLines[0];\n  if (firstStackLine && !StringPrototypeIncludes(firstStackLine\x2C "file:")) {\n    isFromRemoteDependency = true;\n  }\n\n  ALREADY_WARNED_DEPRECATED.add(apiName + stack);\n  console.error(\n    `%cwarning: %cUse of deprecated "${apiName}" API. This API will be removed in Deno 2.`\x2C\n    "color: yellow;"\x2C\n    "font-weight: bold;"\x2C\n  );\n\n  console.error();\n  console.error(\n    "See the Deno 1 to 2 Migration Guide for more information at https://docs.deno.com/runtime/manual/advanced/migrate_deprecations"\x2C\n  );\n  console.error();\n  if (stackLines.length > 0) {\n    console.error("Stack trace:");\n    for (let i = 0; i < stackLines.length; i++) {\n      console.error(`  ${StringPrototypeTrim(stackLines[i])}`);\n    }\n    console.error();\n  }\n\n  for (let i = 0; i < suggestions.length; i++) {\n    const suggestion = suggestions[i];\n    console.error(\n      `%chint: ${suggestion}`\x2C\n      "font-weight: bold;"\x2C\n    );\n  }\n\n  if (isFromRemoteDependency) {\n    console.error(\n      `%chint: It appears this API is used by a remote dependency. Try upgrading to the latest version of that dependency.`\x2C\n      "font-weight: bold;"\x2C\n    );\n  }\n  console.error();\n}\n\nfunction windowClose() {\n  if (!windowIsClosing) {\n    windowIsClosing = true;\n    // Push a macrotask to exit after a promise resolve.\n    // This is not perfect\x2C but should be fine for first pass.\n    PromisePrototypeThen(\n      PromiseResolve()\x2C\n      () =>\n        FunctionPrototypeCall(timers.setTimeout\x2C null\x2C () => {\n          // This should be fine\x2C since only Window/MainWorker has .close()\n          os.exit(0);\n        }\x2C 0)\x2C\n    );\n  }\n}\n\nfunction workerClose() {\n  if (isClosing) {\n    return;\n  }\n\n  isClosing = true;\n  op_worker_close();\n}\n\nfunction postMessage(message\x2C transferOrOptions = {}) {\n  const prefix =\n    "Failed to execute 'postMessage' on 'DedicatedWorkerGlobalScope'";\n  webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n  message = webidl.converters.any(message);\n  let options;\n  if (\n    webidl.type(transferOrOptions) === "Object" &&\n    transferOrOptions !== undefined &&\n    transferOrOptions[SymbolIterator] !== undefined\n  ) {\n    const transfer = webidl.converters["sequence<object>"](\n      transferOrOptions\x2C\n      prefix\x2C\n      "Argument 2"\x2C\n    );\n    options = { transfer };\n  } else {\n    options = webidl.converters.StructuredSerializeOptions(\n      transferOrOptions\x2C\n      prefix\x2C\n      "Argument 2"\x2C\n    );\n  }\n  const { transfer } = options;\n  const data = messagePort.serializeJsMessageData(message\x2C transfer);\n  op_worker_post_message(data);\n}\n\nlet isClosing = false;\nlet globalDispatchEvent;\n\nasync function pollForMessages() {\n  if (!globalDispatchEvent) {\n    globalDispatchEvent = FunctionPrototypeBind(\n      globalThis.dispatchEvent\x2C\n      globalThis\x2C\n    );\n  }\n  while (!isClosing) {\n    const data = await op_worker_recv_message();\n    if (data === null) break;\n    const v = messagePort.deserializeJsMessageData(data);\n    const message = v[0];\n    const transferables = v[1];\n\n    const msgEvent = new event.MessageEvent("message"\x2C {\n      cancelable: false\x2C\n      data: message\x2C\n      ports: ArrayPrototypeFilter(\n        transferables\x2C\n        (t) =>\n          ObjectPrototypeIsPrototypeOf(messagePort.MessagePortPrototype\x2C t)\x2C\n      )\x2C\n    });\n    event.setIsTrusted(msgEvent\x2C true);\n\n    try {\n      globalDispatchEvent(msgEvent);\n    } catch (e) {\n      const errorEvent = new event.ErrorEvent("error"\x2C {\n        cancelable: true\x2C\n        message: e.message\x2C\n        lineno: e.lineNumber ? e.lineNumber + 1 : undefined\x2C\n        colno: e.columnNumber ? e.columnNumber + 1 : undefined\x2C\n        filename: e.fileName\x2C\n        error: e\x2C\n      });\n\n      event.setIsTrusted(errorEvent\x2C true);\n      globalDispatchEvent(errorEvent);\n      if (!errorEvent.defaultPrevented) {\n        throw e;\n      }\n    }\n  }\n}\n\nlet loadedMainWorkerScript = false;\n\nfunction importScripts(...urls) {\n  if (op_worker_get_type() === "module") {\n    throw new TypeError("Can't import scripts in a module worker.");\n  }\n\n  const baseUrl = location.getLocationHref();\n  const parsedUrls = ArrayPrototypeMap(urls\x2C (scriptUrl) => {\n    try {\n      return new url.URL(scriptUrl\x2C baseUrl ?? undefined).href;\n    } catch {\n      throw new DOMException(\n        "Failed to parse URL."\x2C\n        "SyntaxError"\x2C\n      );\n    }\n  });\n\n  // A classic worker's main script has looser MIME type checks than any\n  // imported scripts\x2C so we use `loadedMainWorkerScript` to distinguish them.\n  // TODO(andreubotella) Refactor worker creation so the main script isn't\n  // loaded with `importScripts()`.\n  const scripts = op_worker_sync_fetch(\n    parsedUrls\x2C\n    !loadedMainWorkerScript\x2C\n  );\n  loadedMainWorkerScript = true;\n\n  for (let i = 0; i < scripts.length; ++i) {\n    const { url\x2C script } = scripts[i];\n    const err = core.evalContext(script\x2C url)[1];\n    if (err !== null) {\n      throw err.thrown;\n    }\n  }\n}\n\nconst opArgs = memoizeLazy(() => op_bootstrap_args());\nconst opPid = memoizeLazy(() => op_bootstrap_pid());\nconst opPpid = memoizeLazy(() => op_ppid());\nsetNoColorFn(() => op_bootstrap_no_color() || !op_bootstrap_is_tty());\n\nfunction formatException(error) {\n  if (\n    isNativeError(error) ||\n    ObjectPrototypeIsPrototypeOf(ErrorPrototype\x2C error)\n  ) {\n    return null;\n  } else if (typeof error == "string") {\n    return `Uncaught ${\n      inspectArgs([quoteString(error\x2C getDefaultInspectOptions())]\x2C {\n        colors: !getNoColor()\x2C\n      })\n    }`;\n  } else {\n    return `Uncaught ${inspectArgs([error]\x2C { colors: !getNoColor() })}`;\n  }\n}\n\ncore.registerErrorClass("NotFound"\x2C errors.NotFound);\ncore.registerErrorClass("PermissionDenied"\x2C errors.PermissionDenied);\ncore.registerErrorClass("ConnectionRefused"\x2C errors.ConnectionRefused);\ncore.registerErrorClass("ConnectionReset"\x2C errors.ConnectionReset);\ncore.registerErrorClass("ConnectionAborted"\x2C errors.ConnectionAborted);\ncore.registerErrorClass("NotConnected"\x2C errors.NotConnected);\ncore.registerErrorClass("AddrInUse"\x2C errors.AddrInUse);\ncore.registerErrorClass("AddrNotAvailable"\x2C errors.AddrNotAvailable);\ncore.registerErrorClass("BrokenPipe"\x2C errors.BrokenPipe);\ncore.registerErrorClass("AlreadyExists"\x2C errors.AlreadyExists);\ncore.registerErrorClass("InvalidData"\x2C errors.InvalidData);\ncore.registerErrorClass("TimedOut"\x2C errors.TimedOut);\ncore.registerErrorClass("WouldBlock"\x2C errors.WouldBlock);\ncore.registerErrorClass("WriteZero"\x2C errors.WriteZero);\ncore.registerErrorClass("UnexpectedEof"\x2C errors.UnexpectedEof);\ncore.registerErrorClass("Http"\x2C errors.Http);\ncore.registerErrorClass("Busy"\x2C errors.Busy);\ncore.registerErrorClass("NotSupported"\x2C errors.NotSupported);\ncore.registerErrorClass("FilesystemLoop"\x2C errors.FilesystemLoop);\ncore.registerErrorClass("IsADirectory"\x2C errors.IsADirectory);\ncore.registerErrorClass("NetworkUnreachable"\x2C errors.NetworkUnreachable);\ncore.registerErrorClass("NotADirectory"\x2C errors.NotADirectory);\ncore.registerErrorBuilder(\n  "DOMExceptionOperationError"\x2C\n  function DOMExceptionOperationError(msg) {\n    return new DOMException(msg\x2C "OperationError");\n  }\x2C\n);\ncore.registerErrorBuilder(\n  "DOMExceptionQuotaExceededError"\x2C\n  function DOMExceptionQuotaExceededError(msg) {\n    return new DOMException(msg\x2C "QuotaExceededError");\n  }\x2C\n);\ncore.registerErrorBuilder(\n  "DOMExceptionNotSupportedError"\x2C\n  function DOMExceptionNotSupportedError(msg) {\n    return new DOMException(msg\x2C "NotSupported");\n  }\x2C\n);\ncore.registerErrorBuilder(\n  "DOMExceptionNetworkError"\x2C\n  function DOMExceptionNetworkError(msg) {\n    return new DOMException(msg\x2C "NetworkError");\n  }\x2C\n);\ncore.registerErrorBuilder(\n  "DOMExceptionAbortError"\x2C\n  function DOMExceptionAbortError(msg) {\n    return new DOMException(msg\x2C "AbortError");\n  }\x2C\n);\ncore.registerErrorBuilder(\n  "DOMExceptionInvalidCharacterError"\x2C\n  function DOMExceptionInvalidCharacterError(msg) {\n    return new DOMException(msg\x2C "InvalidCharacterError");\n  }\x2C\n);\ncore.registerErrorBuilder(\n  "DOMExceptionDataError"\x2C\n  function DOMExceptionDataError(msg) {\n    return new DOMException(msg\x2C "DataError");\n  }\x2C\n);\n\nfunction runtimeStart(\n  denoVersion\x2C\n  v8Version\x2C\n  tsVersion\x2C\n  target\x2C\n) {\n  core.setMacrotaskCallback(timers.handleTimerMacrotask);\n  core.setWasmStreamingCallback(fetch.handleWasmStreaming);\n  core.setReportExceptionCallback(event.reportException);\n  op_set_format_exception_callback(formatException);\n  version.setVersions(\n    denoVersion\x2C\n    v8Version\x2C\n    tsVersion\x2C\n  );\n  core.setBuildInfo(target);\n}\n\ncore.setUnhandledPromiseRejectionHandler(processUnhandledPromiseRejection);\ncore.setHandledPromiseRejectionHandler(processRejectionHandled);\n\n// Notification that the core received an unhandled promise rejection that is about to\n// terminate the runtime. If we can handle it\x2C attempt to do so.\nfunction processUnhandledPromiseRejection(promise\x2C reason) {\n  const rejectionEvent = new event.PromiseRejectionEvent(\n    "unhandledrejection"\x2C\n    {\n      cancelable: true\x2C\n      promise\x2C\n      reason\x2C\n    }\x2C\n  );\n\n  // Note that the handler may throw\x2C causing a recursive "error" event\n  globalThis_.dispatchEvent(rejectionEvent);\n\n  // If event was not yet prevented\x2C try handing it off to Node compat layer\n  // (if it was initialized)\n  if (\n    !rejectionEvent.defaultPrevented &&\n    typeof internals.nodeProcessUnhandledRejectionCallback !== "undefined"\n  ) {\n    internals.nodeProcessUnhandledRejectionCallback(rejectionEvent);\n  }\n\n  // If event was not prevented (or "unhandledrejection" listeners didn't\n  // throw) we will let Rust side handle it.\n  if (rejectionEvent.defaultPrevented) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction processRejectionHandled(promise\x2C reason) {\n  const rejectionHandledEvent = new event.PromiseRejectionEvent(\n    "rejectionhandled"\x2C\n    { promise\x2C reason }\x2C\n  );\n\n  // Note that the handler may throw\x2C causing a recursive "error" event\n  globalThis_.dispatchEvent(rejectionHandledEvent);\n\n  if (typeof internals.nodeProcessRejectionHandledCallback !== "undefined") {\n    internals.nodeProcessRejectionHandledCallback(rejectionHandledEvent);\n  }\n}\n\nlet hasBootstrapped = false;\n// Delete the `console` object that V8 automaticaly adds onto the global wrapper\n// object on context creation. We don't want this console object to shadow the\n// `console` object exposed by the ext/node globalThis proxy.\ndelete globalThis.console;\n// Set up global properties shared by main and worker runtime.\nObjectDefineProperties(globalThis\x2C windowOrWorkerGlobalScope);\n\n// Set up global properties shared by main and worker runtime that are exposed\n// by unstable features if those are enabled.\nfunction exposeUnstableFeaturesForWindowOrWorkerGlobalScope(options) {\n  const { unstableFlag\x2C unstableFeatures } = options;\n  if (unstableFlag) {\n    const all = ObjectValues(unstableForWindowOrWorkerGlobalScope);\n    for (let i = 0; i <= all.length; i++) {\n      const props = all[i];\n      ObjectDefineProperties(globalThis\x2C { ...props });\n    }\n  } else {\n    const featureIds = ArrayPrototypeMap(\n      ObjectKeys(\n        unstableForWindowOrWorkerGlobalScope\x2C\n      )\x2C\n      (k) => k | 0\x2C\n    );\n\n    for (let i = 0; i <= featureIds.length; i++) {\n      const featureId = featureIds[i];\n      if (ArrayPrototypeIncludes(unstableFeatures\x2C featureId)) {\n        const props = unstableForWindowOrWorkerGlobalScope[featureId];\n        ObjectDefineProperties(globalThis\x2C { ...props });\n      }\n    }\n  }\n}\n\n// NOTE(bartlomieju): remove all the ops that have already been imported using\n// "virtual op module" (`ext:core/ops`).\nconst NOT_IMPORTED_OPS = [\n  // Related to `Deno.bench()` API\n  "op_bench_now"\x2C\n  "op_dispatch_bench_event"\x2C\n  "op_register_bench"\x2C\n\n  // Related to `Deno.jupyter` API\n  "op_jupyter_broadcast"\x2C\n\n  // Related to `Deno.test()` API\n  "op_test_event_step_result_failed"\x2C\n  "op_test_event_step_result_ignored"\x2C\n  "op_test_event_step_result_ok"\x2C\n  "op_test_event_step_wait"\x2C\n  "op_test_op_sanitizer_collect"\x2C\n  "op_test_op_sanitizer_finish"\x2C\n  "op_test_op_sanitizer_get_async_message"\x2C\n  "op_test_op_sanitizer_report"\x2C\n  "op_restore_test_permissions"\x2C\n  "op_register_test_step"\x2C\n  "op_register_test"\x2C\n  "op_pledge_test_permissions"\x2C\n\n  // TODO(bartlomieju): used in various integration tests - figure out a way\n  // to not depend on them.\n  "op_set_exit_code"\x2C\n  "op_napi_open"\x2C\n  "op_npm_process_state"\x2C\n];\n\nfunction removeImportedOps() {\n  const allOpNames = ObjectKeys(ops);\n  for (let i = 0; i < allOpNames.length; i++) {\n    const opName = allOpNames[i];\n    if (!ArrayPrototypeIncludes(NOT_IMPORTED_OPS\x2C opName)) {\n      delete ops[opName];\n    }\n  }\n}\n\n// FIXME(bartlomieju): temporarily add whole `Deno.core` to\n// `Deno[Deno.internal]` namespace. It should be removed and only necessary\n// methods should be left there.\nObjectAssign(internals\x2C { core\x2C warnOnDeprecatedApi });\nconst internalSymbol = Symbol("Deno.internal");\nconst finalDenoNs = {\n  internal: internalSymbol\x2C\n  [internalSymbol]: internals\x2C\n  resources() {\n    internals.warnOnDeprecatedApi("Deno.resources()"\x2C new Error().stack);\n    return core.resources();\n  }\x2C\n  close(rid) {\n    internals.warnOnDeprecatedApi(\n      "Deno.close()"\x2C\n      new Error().stack\x2C\n      "Use `closer.close()` instead."\x2C\n    );\n    core.close(rid);\n  }\x2C\n  ...denoNs\x2C\n  // Deno.test and Deno.bench are noops here\x2C but kept for compatibility; so\n  // that they don't cause errors when used outside of `deno test`/`deno bench`\n  // contexts.\n  test: () => {}\x2C\n  bench: () => {}\x2C\n};\n\nconst {\n  denoVersion\x2C\n  tsVersion\x2C\n  v8Version\x2C\n  target\x2C\n} = op_snapshot_options();\n\nfunction bootstrapMainRuntime(runtimeOptions) {\n  if (hasBootstrapped) {\n    throw new Error("Worker runtime already bootstrapped");\n  }\n  const nodeBootstrap = globalThis.nodeBootstrap;\n\n  const {\n    0: location_\x2C\n    1: unstableFlag\x2C\n    2: unstableFeatures\x2C\n    3: inspectFlag\x2C\n    5: hasNodeModulesDir\x2C\n    6: maybeBinaryNpmCommandName\x2C\n    7: shouldDisableDeprecatedApiWarning\x2C\n    8: shouldUseVerboseDeprecatedApiWarning\x2C\n    9: future\x2C\n  } = runtimeOptions;\n\n  removeImportedOps();\n\n  deprecatedApiWarningDisabled = shouldDisableDeprecatedApiWarning;\n  verboseDeprecatedApiWarning = shouldUseVerboseDeprecatedApiWarning;\n  performance.setTimeOrigin(DateNow());\n  globalThis_ = globalThis;\n\n  // Remove bootstrapping data from the global scope\n  delete globalThis.__bootstrap;\n  delete globalThis.bootstrap;\n  delete globalThis.nodeBootstrap;\n  hasBootstrapped = true;\n\n  // If the `--location` flag isn't set\x2C make `globalThis.location` `undefined` and\n  // writable\x2C so that they can mock it themselves if they like. If the flag was\n  // set\x2C define `globalThis.location`\x2C using the provided value.\n  if (location_ == null) {\n    mainRuntimeGlobalProperties.location = {\n      writable: true\x2C\n    };\n  } else {\n    location.setLocationHref(location_);\n  }\n\n  exposeUnstableFeaturesForWindowOrWorkerGlobalScope({\n    unstableFlag\x2C\n    unstableFeatures\x2C\n  });\n  ObjectDefineProperties(globalThis\x2C mainRuntimeGlobalProperties);\n  ObjectDefineProperties(globalThis\x2C {\n    // TODO(bartlomieju): in the future we might want to change the\n    // behavior of setting `name` to actually update the process name.\n    // Empty string matches what browsers do.\n    name: core.propWritable("")\x2C\n    close: core.propWritable(windowClose)\x2C\n    closed: core.propGetterOnly(() => windowIsClosing)\x2C\n  });\n  ObjectSetPrototypeOf(globalThis\x2C Window.prototype);\n\n  if (inspectFlag) {\n    const consoleFromDeno = globalThis.console;\n    core.wrapConsole(consoleFromDeno\x2C core.v8Console);\n  }\n\n  event.setEventTargetData(globalThis);\n  event.saveGlobalThisReference(globalThis);\n\n  event.defineEventHandler(globalThis\x2C "error");\n  event.defineEventHandler(globalThis\x2C "load");\n  event.defineEventHandler(globalThis\x2C "beforeunload");\n  event.defineEventHandler(globalThis\x2C "unload");\n  event.defineEventHandler(globalThis\x2C "unhandledrejection");\n\n  runtimeStart(\n    denoVersion\x2C\n    v8Version\x2C\n    tsVersion\x2C\n    target\x2C\n  );\n\n  ObjectDefineProperties(finalDenoNs\x2C {\n    pid: core.propGetterOnly(opPid)\x2C\n    ppid: core.propGetterOnly(opPpid)\x2C\n    noColor: core.propGetterOnly(() => op_bootstrap_no_color())\x2C\n    args: core.propGetterOnly(opArgs)\x2C\n    mainModule: core.propGetterOnly(() => op_main_module())\x2C\n    // TODO(kt3k): Remove this export at v2\n    // See https://github.com/denoland/deno/issues/9294\n    customInspect: {\n      get() {\n        warnOnDeprecatedApi(\n          "Deno.customInspect"\x2C\n          new Error().stack\x2C\n          'Use `Symbol.for("Deno.customInspect")` instead.'\x2C\n        );\n        return customInspect;\n      }\x2C\n    }\x2C\n  });\n\n  // TODO(bartlomieju): deprecate --unstable\n  if (unstableFlag) {\n    ObjectAssign(finalDenoNs\x2C denoNsUnstable);\n    // TODO(bartlomieju): this is not ideal\x2C but because we use `ObjectAssign`\n    // above any properties that are defined elsewhere using `Object.defineProperty`\n    // are lost.\n    let jupyterNs = undefined;\n    ObjectDefineProperty(finalDenoNs\x2C "jupyter"\x2C {\n      get() {\n        if (jupyterNs) {\n          return jupyterNs;\n        }\n        throw new Error(\n          "Deno.jupyter is only available in `deno jupyter` subcommand."\x2C\n        );\n      }\x2C\n      set(val) {\n        jupyterNs = val;\n      }\x2C\n    });\n  } else {\n    for (let i = 0; i <= unstableFeatures.length; i++) {\n      const id = unstableFeatures[i];\n      ObjectAssign(finalDenoNs\x2C denoNsUnstableById[id]);\n    }\n  }\n\n  if (!ArrayPrototypeIncludes(unstableFeatures\x2C unstableIds.unsafeProto)) {\n    // Removes the `__proto__` for security reasons.\n    // https://tc39.es/ecma262/#sec-get-object.prototype.__proto__\n    delete Object.prototype.__proto__;\n  }\n\n  // Setup `Deno` global - we're actually overriding already existing global\n  // `Deno` with `Deno` namespace from "./deno.ts".\n  ObjectDefineProperty(globalThis\x2C "Deno"\x2C core.propReadOnly(finalDenoNs));\n\n  if (nodeBootstrap) {\n    nodeBootstrap(hasNodeModulesDir\x2C maybeBinaryNpmCommandName);\n  }\n\n  if (future) {\n    delete globalThis.window;\n  }\n}\n\nfunction bootstrapWorkerRuntime(\n  runtimeOptions\x2C\n  name\x2C\n  internalName\x2C\n) {\n  if (hasBootstrapped) {\n    throw new Error("Worker runtime already bootstrapped");\n  }\n\n  const nodeBootstrap = globalThis.nodeBootstrap;\n\n  const {\n    0: location_\x2C\n    1: unstableFlag\x2C\n    2: unstableFeatures\x2C\n    4: enableTestingFeaturesFlag\x2C\n    5: hasNodeModulesDir\x2C\n    6: maybeBinaryNpmCommandName\x2C\n    7: shouldDisableDeprecatedApiWarning\x2C\n    8: shouldUseVerboseDeprecatedApiWarning\x2C\n  } = runtimeOptions;\n\n  deprecatedApiWarningDisabled = shouldDisableDeprecatedApiWarning;\n  verboseDeprecatedApiWarning = shouldUseVerboseDeprecatedApiWarning;\n  performance.setTimeOrigin(DateNow());\n  globalThis_ = globalThis;\n\n  removeImportedOps();\n\n  // Remove bootstrapping data from the global scope\n  delete globalThis.__bootstrap;\n  delete globalThis.bootstrap;\n  delete globalThis.nodeBootstrap;\n  hasBootstrapped = true;\n\n  exposeUnstableFeaturesForWindowOrWorkerGlobalScope({\n    unstableFlag\x2C\n    unstableFeatures\x2C\n  });\n  ObjectDefineProperties(globalThis\x2C workerRuntimeGlobalProperties);\n  ObjectDefineProperties(globalThis\x2C {\n    name: core.propWritable(name)\x2C\n    // TODO(bartlomieju): should be readonly?\n    close: core.propNonEnumerable(workerClose)\x2C\n    postMessage: core.propWritable(postMessage)\x2C\n  });\n  if (enableTestingFeaturesFlag) {\n    ObjectDefineProperty(\n      globalThis\x2C\n      "importScripts"\x2C\n      core.propWritable(importScripts)\x2C\n    );\n  }\n  ObjectSetPrototypeOf(globalThis\x2C DedicatedWorkerGlobalScope.prototype);\n\n  const consoleFromDeno = globalThis.console;\n  core.wrapConsole(consoleFromDeno\x2C core.v8Console);\n\n  event.setEventTargetData(globalThis);\n  event.saveGlobalThisReference(globalThis);\n\n  event.defineEventHandler(self\x2C "message");\n  event.defineEventHandler(self\x2C "error"\x2C undefined\x2C true);\n  event.defineEventHandler(self\x2C "unhandledrejection");\n\n  // `Deno.exit()` is an alias to `self.close()`. Setting and exit\n  // code using an op in worker context is a no-op.\n  os.setExitHandler((_exitCode) => {\n    workerClose();\n  });\n\n  runtimeStart(\n    denoVersion\x2C\n    v8Version\x2C\n    tsVersion\x2C\n    target\x2C\n    internalName ?? name\x2C\n  );\n\n  location.setLocationHref(location_);\n\n  globalThis.pollForMessages = pollForMessages;\n\n  // TODO(bartlomieju): deprecate --unstable\n  if (unstableFlag) {\n    ObjectAssign(finalDenoNs\x2C denoNsUnstable);\n  } else {\n    for (let i = 0; i <= unstableFeatures.length; i++) {\n      const id = unstableFeatures[i];\n      ObjectAssign(finalDenoNs\x2C denoNsUnstableById[id]);\n    }\n  }\n\n  if (!ArrayPrototypeIncludes(unstableFeatures\x2C unstableIds.unsafeProto)) {\n    // Removes the `__proto__` for security reasons.\n    // https://tc39.es/ecma262/#sec-get-object.prototype.__proto__\n    delete Object.prototype.__proto__;\n  }\n\n  ObjectDefineProperties(finalDenoNs\x2C {\n    pid: core.propGetterOnly(opPid)\x2C\n    noColor: core.propGetterOnly(() => op_bootstrap_no_color())\x2C\n    args: core.propGetterOnly(opArgs)\x2C\n    // TODO(kt3k): Remove this export at v2\n    // See https://github.com/denoland/deno/issues/9294\n    customInspect: {\n      get() {\n        warnOnDeprecatedApi(\n          "Deno.customInspect"\x2C\n          new Error().stack\x2C\n          'Use `Symbol.for("Deno.customInspect")` instead.'\x2C\n        );\n        return customInspect;\n      }\x2C\n    }\x2C\n  });\n  // Setup `Deno` global - we're actually overriding already\n  // existing global `Deno` with `Deno` namespace from "./deno.ts".\n  ObjectDefineProperty(globalThis\x2C "Deno"\x2C core.propReadOnly(finalDenoNs));\n\n  if (nodeBootstrap) {\n    nodeBootstrap(hasNodeModulesDir\x2C maybeBinaryNpmCommandName);\n  }\n}\n\nglobalThis.bootstrap = {\n  mainRuntime: bootstrapMainRuntime\x2C\n  workerRuntime: bootstrapWorkerRuntime\x2C\n};\n
code-source-info,0x1123fa
tick,0x185256254,56917,0,0x0,3
tick,0x1066c9184,58042,0,0x0,0,0x1123fa481189
code-creation,JS,10,58250,0x1123fa481588,67,removeImportedOps ext:runtime_main/js/99_main.js:590:27,0xb845273268,~
code-source-info,0x1123fa481588,300,17431,17654,C0O17457C7O17468C10O17457C15O17489C17O17507C21O17494C26O17541C28O17551C32O17560C39O17588C42O17565C49O17623C54O17634C56O17516C61O17476C66O17653,,
tick,0x105c44978,59292,0,0x0,0,0x1123fa4815c5,0x1123fa4811c8
code-creation,JS,10,59708,0x1123fa481610,10,setTimeOrigin ext:deno_web/15_performance.js:96:23,0x3fd3d01c5bf8,~
script-source,28,ext:deno_web/15_performance.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\nimport { primordials } from "ext:core/mod.js";\nconst {\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeFind\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReverse\x2C\n  ArrayPrototypeSlice\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeIsPrototypeOf\x2C\n  ReflectHas\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  TypeError\x2C\n} = primordials;\n\nimport * as webidl from "ext:deno_webidl/00_webidl.js";\nimport { structuredClone } from "ext:deno_web/02_structured_clone.js";\nimport { createFilteredInspectProxy } from "ext:deno_console/01_console.js";\nimport { EventTarget } from "ext:deno_web/02_event.js";\nimport { opNow } from "ext:deno_web/02_timers.js";\nimport { DOMException } from "ext:deno_web/01_dom_exception.js";\n\nconst illegalConstructorKey = Symbol("illegalConstructorKey");\nlet performanceEntries = [];\nlet timeOrigin;\n\nwebidl.converters["PerformanceMarkOptions"] = webidl\n  .createDictionaryConverter(\n    "PerformanceMarkOptions"\x2C\n    [\n      {\n        key: "detail"\x2C\n        converter: webidl.converters.any\x2C\n      }\x2C\n      {\n        key: "startTime"\x2C\n        converter: webidl.converters.DOMHighResTimeStamp\x2C\n      }\x2C\n    ]\x2C\n  );\n\nwebidl.converters["DOMString or DOMHighResTimeStamp"] = (\n  V\x2C\n  prefix\x2C\n  context\x2C\n  opts\x2C\n) => {\n  if (webidl.type(V) === "Number" && V !== null) {\n    return webidl.converters.DOMHighResTimeStamp(V\x2C prefix\x2C context\x2C opts);\n  }\n  return webidl.converters.DOMString(V\x2C prefix\x2C context\x2C opts);\n};\n\nwebidl.converters["PerformanceMeasureOptions"] = webidl\n  .createDictionaryConverter(\n    "PerformanceMeasureOptions"\x2C\n    [\n      {\n        key: "detail"\x2C\n        converter: webidl.converters.any\x2C\n      }\x2C\n      {\n        key: "start"\x2C\n        converter: webidl.converters["DOMString or DOMHighResTimeStamp"]\x2C\n      }\x2C\n      {\n        key: "duration"\x2C\n        converter: webidl.converters.DOMHighResTimeStamp\x2C\n      }\x2C\n      {\n        key: "end"\x2C\n        converter: webidl.converters["DOMString or DOMHighResTimeStamp"]\x2C\n      }\x2C\n    ]\x2C\n  );\n\nwebidl.converters["DOMString or PerformanceMeasureOptions"] = (\n  V\x2C\n  prefix\x2C\n  context\x2C\n  opts\x2C\n) => {\n  if (webidl.type(V) === "Object" && V !== null) {\n    return webidl.converters["PerformanceMeasureOptions"](\n      V\x2C\n      prefix\x2C\n      context\x2C\n      opts\x2C\n    );\n  }\n  return webidl.converters.DOMString(V\x2C prefix\x2C context\x2C opts);\n};\n\nfunction setTimeOrigin(origin) {\n  timeOrigin = origin;\n}\n\nfunction findMostRecent(\n  name\x2C\n  type\x2C\n) {\n  return ArrayPrototypeFind(\n    ArrayPrototypeReverse(ArrayPrototypeSlice(performanceEntries))\x2C\n    (entry) => entry.name === name && entry.entryType === type\x2C\n  );\n}\n\nfunction convertMarkToTimestamp(mark) {\n  if (typeof mark === "string") {\n    const entry = findMostRecent(mark\x2C "mark");\n    if (!entry) {\n      throw new DOMException(\n        `Cannot find mark: "${mark}".`\x2C\n        "SyntaxError"\x2C\n      );\n    }\n    return entry.startTime;\n  }\n  if (mark < 0) {\n    throw new TypeError("Mark cannot be negative.");\n  }\n  return mark;\n}\n\nfunction filterByNameType(\n  name\x2C\n  type\x2C\n) {\n  return ArrayPrototypeFilter(\n    performanceEntries\x2C\n    (entry) =>\n      (name ? entry.name === name : true) &&\n      (type ? entry.entryType === type : true)\x2C\n  );\n}\n\nconst now = opNow;\n\nconst _name = Symbol("[[name]]");\nconst _entryType = Symbol("[[entryType]]");\nconst _startTime = Symbol("[[startTime]]");\nconst _duration = Symbol("[[duration]]");\nclass PerformanceEntry {\n  [_name] = "";\n  [_entryType] = "";\n  [_startTime] = 0;\n  [_duration] = 0;\n\n  get name() {\n    webidl.assertBranded(this\x2C PerformanceEntryPrototype);\n    return this[_name];\n  }\n\n  get entryType() {\n    webidl.assertBranded(this\x2C PerformanceEntryPrototype);\n    return this[_entryType];\n  }\n\n  get startTime() {\n    webidl.assertBranded(this\x2C PerformanceEntryPrototype);\n    return this[_startTime];\n  }\n\n  get duration() {\n    webidl.assertBranded(this\x2C PerformanceEntryPrototype);\n    return this[_duration];\n  }\n\n  constructor(\n    name = null\x2C\n    entryType = null\x2C\n    startTime = null\x2C\n    duration = null\x2C\n    key = undefined\x2C\n  ) {\n    if (key !== illegalConstructorKey) {\n      webidl.illegalConstructor();\n    }\n    this[webidl.brand] = webidl.brand;\n\n    this[_name] = name;\n    this[_entryType] = entryType;\n    this[_startTime] = startTime;\n    this[_duration] = duration;\n  }\n\n  toJSON() {\n    webidl.assertBranded(this\x2C PerformanceEntryPrototype);\n    return {\n      name: this[_name]\x2C\n      entryType: this[_entryType]\x2C\n      startTime: this[_startTime]\x2C\n      duration: this[_duration]\x2C\n    };\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(\n          PerformanceEntryPrototype\x2C\n          this\x2C\n        )\x2C\n        keys: [\n          "name"\x2C\n          "entryType"\x2C\n          "startTime"\x2C\n          "duration"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\nwebidl.configureInterface(PerformanceEntry);\nconst PerformanceEntryPrototype = PerformanceEntry.prototype;\n\nconst _detail = Symbol("[[detail]]");\nclass PerformanceMark extends PerformanceEntry {\n  [_detail] = null;\n\n  get detail() {\n    webidl.assertBranded(this\x2C PerformanceMarkPrototype);\n    return this[_detail];\n  }\n\n  get entryType() {\n    webidl.assertBranded(this\x2C PerformanceMarkPrototype);\n    return "mark";\n  }\n\n  constructor(\n    name\x2C\n    options = {}\x2C\n  ) {\n    const prefix = "Failed to construct 'PerformanceMark'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n\n    name = webidl.converters.DOMString(name\x2C prefix\x2C "Argument 1");\n\n    options = webidl.converters.PerformanceMarkOptions(\n      options\x2C\n      prefix\x2C\n      "Argument 2"\x2C\n    );\n\n    const { detail = null\x2C startTime = now() } = options;\n\n    super(name\x2C "mark"\x2C startTime\x2C 0\x2C illegalConstructorKey);\n    this[webidl.brand] = webidl.brand;\n    if (startTime < 0) {\n      throw new TypeError("startTime cannot be negative");\n    }\n    this[_detail] = structuredClone(detail);\n  }\n\n  toJSON() {\n    webidl.assertBranded(this\x2C PerformanceMarkPrototype);\n    return {\n      name: this.name\x2C\n      entryType: this.entryType\x2C\n      startTime: this.startTime\x2C\n      duration: this.duration\x2C\n      detail: this.detail\x2C\n    };\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(PerformanceMarkPrototype\x2C this)\x2C\n        keys: [\n          "name"\x2C\n          "entryType"\x2C\n          "startTime"\x2C\n          "duration"\x2C\n          "detail"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\nwebidl.configureInterface(PerformanceMark);\nconst PerformanceMarkPrototype = PerformanceMark.prototype;\nclass PerformanceMeasure extends PerformanceEntry {\n  [_detail] = null;\n\n  get detail() {\n    webidl.assertBranded(this\x2C PerformanceMeasurePrototype);\n    return this[_detail];\n  }\n\n  get entryType() {\n    webidl.assertBranded(this\x2C PerformanceMeasurePrototype);\n    return "measure";\n  }\n\n  constructor(\n    name = null\x2C\n    startTime = null\x2C\n    duration = null\x2C\n    detail = null\x2C\n    key = undefined\x2C\n  ) {\n    if (key !== illegalConstructorKey) {\n      webidl.illegalConstructor();\n    }\n\n    super(name\x2C "measure"\x2C startTime\x2C duration\x2C key);\n    this[webidl.brand] = webidl.brand;\n    this[_detail] = structuredClone(detail);\n  }\n\n  toJSON() {\n    webidl.assertBranded(this\x2C PerformanceMeasurePrototype);\n    return {\n      name: this.name\x2C\n      entryType: this.entryType\x2C\n      startTime: this.startTime\x2C\n      duration: this.duration\x2C\n      detail: this.detail\x2C\n    };\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(\n          PerformanceMeasurePrototype\x2C\n          this\x2C\n        )\x2C\n        keys: [\n          "name"\x2C\n          "entryType"\x2C\n          "startTime"\x2C\n          "duration"\x2C\n          "detail"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\nwebidl.configureInterface(PerformanceMeasure);\nconst PerformanceMeasurePrototype = PerformanceMeasure.prototype;\nclass Performance extends EventTarget {\n  constructor(key = null) {\n    if (key != illegalConstructorKey) {\n      webidl.illegalConstructor();\n    }\n\n    super();\n    this[webidl.brand] = webidl.brand;\n  }\n\n  get timeOrigin() {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    return timeOrigin;\n  }\n\n  clearMarks(markName = undefined) {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    if (markName !== undefined) {\n      markName = webidl.converters.DOMString(\n        markName\x2C\n        "Failed to execute 'clearMarks' on 'Performance'"\x2C\n        "Argument 1"\x2C\n      );\n\n      performanceEntries = ArrayPrototypeFilter(\n        performanceEntries\x2C\n        (entry) => !(entry.name === markName && entry.entryType === "mark")\x2C\n      );\n    } else {\n      performanceEntries = ArrayPrototypeFilter(\n        performanceEntries\x2C\n        (entry) => entry.entryType !== "mark"\x2C\n      );\n    }\n  }\n\n  clearMeasures(measureName = undefined) {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    if (measureName !== undefined) {\n      measureName = webidl.converters.DOMString(\n        measureName\x2C\n        "Failed to execute 'clearMeasures' on 'Performance'"\x2C\n        "Argument 1"\x2C\n      );\n\n      performanceEntries = ArrayPrototypeFilter(\n        performanceEntries\x2C\n        (entry) =>\n          !(entry.name === measureName && entry.entryType === "measure")\x2C\n      );\n    } else {\n      performanceEntries = ArrayPrototypeFilter(\n        performanceEntries\x2C\n        (entry) => entry.entryType !== "measure"\x2C\n      );\n    }\n  }\n\n  getEntries() {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    return filterByNameType();\n  }\n\n  getEntriesByName(\n    name\x2C\n    type = undefined\x2C\n  ) {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    const prefix = "Failed to execute 'getEntriesByName' on 'Performance'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n\n    name = webidl.converters.DOMString(name\x2C prefix\x2C "Argument 1");\n\n    if (type !== undefined) {\n      type = webidl.converters.DOMString(type\x2C prefix\x2C "Argument 2");\n    }\n\n    return filterByNameType(name\x2C type);\n  }\n\n  getEntriesByType(type) {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    const prefix = "Failed to execute 'getEntriesByName' on 'Performance'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n\n    type = webidl.converters.DOMString(type\x2C prefix\x2C "Argument 1");\n\n    return filterByNameType(undefined\x2C type);\n  }\n\n  mark(\n    markName\x2C\n    markOptions = {}\x2C\n  ) {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    const prefix = "Failed to execute 'mark' on 'Performance'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n\n    markName = webidl.converters.DOMString(markName\x2C prefix\x2C "Argument 1");\n\n    markOptions = webidl.converters.PerformanceMarkOptions(\n      markOptions\x2C\n      prefix\x2C\n      "Argument 2"\x2C\n    );\n\n    // 3.1.1.1 If the global object is a Window object and markName uses the\n    // same name as a read only attribute in the PerformanceTiming interface\x2C\n    // throw a SyntaxError. - not implemented\n    const entry = new PerformanceMark(markName\x2C markOptions);\n    // 3.1.1.7 Queue entry - not implemented\n    ArrayPrototypePush(performanceEntries\x2C entry);\n    return entry;\n  }\n\n  measure(\n    measureName\x2C\n    startOrMeasureOptions = {}\x2C\n    endMark = undefined\x2C\n  ) {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    const prefix = "Failed to execute 'measure' on 'Performance'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n\n    measureName = webidl.converters.DOMString(\n      measureName\x2C\n      prefix\x2C\n      "Argument 1"\x2C\n    );\n\n    startOrMeasureOptions = webidl.converters\n      ["DOMString or PerformanceMeasureOptions"](\n        startOrMeasureOptions\x2C\n        prefix\x2C\n        "Argument 2"\x2C\n      );\n\n    if (endMark !== undefined) {\n      endMark = webidl.converters.DOMString(endMark\x2C prefix\x2C "Argument 3");\n    }\n\n    if (\n      startOrMeasureOptions && typeof startOrMeasureOptions === "object" &&\n      ObjectKeys(startOrMeasureOptions).length > 0\n    ) {\n      if (endMark) {\n        throw new TypeError("Options cannot be passed with endMark.");\n      }\n      if (\n        !ReflectHas(startOrMeasureOptions\x2C "start") &&\n        !ReflectHas(startOrMeasureOptions\x2C "end")\n      ) {\n        throw new TypeError(\n          "A start or end mark must be supplied in options."\x2C\n        );\n      }\n      if (\n        ReflectHas(startOrMeasureOptions\x2C "start") &&\n        ReflectHas(startOrMeasureOptions\x2C "duration") &&\n        ReflectHas(startOrMeasureOptions\x2C "end")\n      ) {\n        throw new TypeError(\n          "Cannot specify start\x2C end\x2C and duration together in options."\x2C\n        );\n      }\n    }\n    let endTime;\n    if (endMark) {\n      endTime = convertMarkToTimestamp(endMark);\n    } else if (\n      typeof startOrMeasureOptions === "object" &&\n      ReflectHas(startOrMeasureOptions\x2C "end")\n    ) {\n      endTime = convertMarkToTimestamp(startOrMeasureOptions.end);\n    } else if (\n      typeof startOrMeasureOptions === "object" &&\n      ReflectHas(startOrMeasureOptions\x2C "start") &&\n      ReflectHas(startOrMeasureOptions\x2C "duration")\n    ) {\n      const start = convertMarkToTimestamp(startOrMeasureOptions.start);\n      const duration = convertMarkToTimestamp(startOrMeasureOptions.duration);\n      endTime = start + duration;\n    } else {\n      endTime = now();\n    }\n    let startTime;\n    if (\n      typeof startOrMeasureOptions === "object" &&\n      ReflectHas(startOrMeasureOptions\x2C "start")\n    ) {\n      startTime = convertMarkToTimestamp(startOrMeasureOptions.start);\n    } else if (\n      typeof startOrMeasureOptions === "object" &&\n      ReflectHas(startOrMeasureOptions\x2C "end") &&\n      ReflectHas(startOrMeasureOptions\x2C "duration")\n    ) {\n      const end = convertMarkToTimestamp(startOrMeasureOptions.end);\n      const duration = convertMarkToTimestamp(startOrMeasureOptions.duration);\n      startTime = end - duration;\n    } else if (typeof startOrMeasureOptions === "string") {\n      startTime = convertMarkToTimestamp(startOrMeasureOptions);\n    } else {\n      startTime = 0;\n    }\n    const entry = new PerformanceMeasure(\n      measureName\x2C\n      startTime\x2C\n      endTime - startTime\x2C\n      typeof startOrMeasureOptions === "object"\n        ? startOrMeasureOptions.detail ?? null\n        : null\x2C\n      illegalConstructorKey\x2C\n    );\n    ArrayPrototypePush(performanceEntries\x2C entry);\n    return entry;\n  }\n\n  now() {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    return now();\n  }\n\n  toJSON() {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    return {\n      timeOrigin: this.timeOrigin\x2C\n    };\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(PerformancePrototype\x2C this)\x2C\n        keys: ["timeOrigin"]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\nwebidl.configureInterface(Performance);\nconst PerformancePrototype = Performance.prototype;\n\nwebidl.converters["Performance"] = webidl.createInterfaceConverter(\n  "Performance"\x2C\n  PerformancePrototype\x2C\n);\n\nconst performance = new Performance(illegalConstructorKey);\n\nexport {\n  Performance\x2C\n  performance\x2C\n  PerformanceEntry\x2C\n  PerformanceMark\x2C\n  PerformanceMeasure\x2C\n  setTimeOrigin\x2C\n};\n
code-source-info,0x1123fa481610,28,2370,2405,C0O2383C2O2394C9O2404,,
code-creation,JS,10,60458,0x1123fa481660,178,exposeUnstableFeaturesForWindowOrWorkerGlobalScope ext:runtime_main/js/99_main.js:532:60,0xb845273210,~
code-source-info,0x1123fa481660,300,15733,16480,C0O15755C5O15769C10O15801C14O15837C19O15850C25O15837C30O15906C32O15918C36O15911C41O15953C43O15956C47O15967C52O15990C56O16007C61O15967C66O15927C71O15893C77O16057C84O16082C87O16102C93O16082C103O16057C109O16194C111O16213C115O16199C120O16252C122O16262C126O16273C131O16277C138O16354C144O16390C148O16411C153O16434C157O16451C162O16411C167O16222C172O16181C177O16479,,
tick,0x106740540,60542,0,0x0,0,0x1123fa48124e
code-creation,JS,10,60667,0x1123fa481758,6, ext:runtime_main/js/99_main.js:545:7,0x5e7d30b8298,~
code-source-info,0x1123fa481758,300,16155,16167,C0O16164C2O16164C5O16167,,
code-creation,JS,10,61417,0x1123fa4817a0,17,setEventTargetData ext:deno_web/02_event.js:847:28,0x38e60b579e08,~
script-source,15,ext:deno_web/02_event.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\n// This module follows most of the WHATWG Living Standard for the DOM logic.\n// Many parts of the DOM are not implemented in Deno\x2C but the logic for those\n// parts still exists.  This means you will observe a lot of strange structures\n// and impossible logic branches based on what Deno currently supports.\n\nimport { core\x2C primordials } from "ext:core/mod.js";\nconst {\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  Boolean\x2C\n  Error\x2C\n  FunctionPrototypeCall\x2C\n  MapPrototypeGet\x2C\n  MapPrototypeSet\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectPrototypeIsPrototypeOf\x2C\n  ReflectDefineProperty\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolToStringTag\x2C\n  TypeError\x2C\n} = primordials;\n\nimport * as webidl from "ext:deno_webidl/00_webidl.js";\nimport { DOMException } from "ext:deno_web/01_dom_exception.js";\nimport { createFilteredInspectProxy } from "ext:deno_console/01_console.js";\n\n// This should be set via setGlobalThis this is required so that if even\n// user deletes globalThis it is still usable\nlet globalThis_;\n\nfunction saveGlobalThisReference(val) {\n  globalThis_ = val;\n}\n\n// accessors for non runtime visible data\n\nfunction getDispatched(event) {\n  return Boolean(event[_dispatched]);\n}\n\nfunction getPath(event) {\n  return event[_path] ?? [];\n}\n\nfunction getStopImmediatePropagation(event) {\n  return Boolean(event[_stopImmediatePropagationFlag]);\n}\n\nfunction setCurrentTarget(\n  event\x2C\n  value\x2C\n) {\n  event[_attributes].currentTarget = value;\n}\n\nfunction setIsTrusted(event\x2C value) {\n  event[_isTrusted] = value;\n}\n\nfunction setDispatched(event\x2C value) {\n  event[_dispatched] = value;\n}\n\nfunction setEventPhase(event\x2C value) {\n  event[_attributes].eventPhase = value;\n}\n\nfunction setInPassiveListener(event\x2C value) {\n  event[_inPassiveListener] = value;\n}\n\nfunction setPath(event\x2C value) {\n  event[_path] = value;\n}\n\nfunction setRelatedTarget(\n  event\x2C\n  value\x2C\n) {\n  event[_attributes].relatedTarget = value;\n}\n\nfunction setTarget(event\x2C value) {\n  event[_attributes].target = value;\n}\n\nfunction setStopImmediatePropagation(\n  event\x2C\n  value\x2C\n) {\n  event[_stopImmediatePropagationFlag] = value;\n}\n\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\n  get isTrusted() {\n    return this[_isTrusted];\n  }\x2C\n}\x2C "isTrusted").get;\n\nconst _attributes = Symbol("[[attributes]]");\nconst _canceledFlag = Symbol("[[canceledFlag]]");\nconst _stopPropagationFlag = Symbol("[[stopPropagationFlag]]");\nconst _stopImmediatePropagationFlag = Symbol(\n  "[[stopImmediatePropagationFlag]]"\x2C\n);\nconst _inPassiveListener = Symbol("[[inPassiveListener]]");\nconst _dispatched = Symbol("[[dispatched]]");\nconst _isTrusted = Symbol("[[isTrusted]]");\nconst _path = Symbol("[[path]]");\n\nclass Event {\n  constructor(type\x2C eventInitDict = {}) {\n    // TODO(lucacasonato): remove when this interface is spec aligned\n    this[SymbolToStringTag] = "Event";\n    this[_canceledFlag] = false;\n    this[_stopPropagationFlag] = false;\n    this[_stopImmediatePropagationFlag] = false;\n    this[_inPassiveListener] = false;\n    this[_dispatched] = false;\n    this[_isTrusted] = false;\n    this[_path] = [];\n\n    webidl.requiredArguments(\n      arguments.length\x2C\n      1\x2C\n      "Failed to construct 'Event'"\x2C\n    );\n    type = webidl.converters.DOMString(\n      type\x2C\n      "Failed to construct 'Event'"\x2C\n      "Argument 1"\x2C\n    );\n\n    this[_attributes] = {\n      type\x2C\n      bubbles: !!eventInitDict.bubbles\x2C\n      cancelable: !!eventInitDict.cancelable\x2C\n      composed: !!eventInitDict.composed\x2C\n      currentTarget: null\x2C\n      eventPhase: Event.NONE\x2C\n      target: null\x2C\n      timeStamp: 0\x2C\n    };\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(EventPrototype\x2C this)\x2C\n        keys: EVENT_PROPS\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n\n  get type() {\n    return this[_attributes].type;\n  }\n\n  get target() {\n    return this[_attributes].target;\n  }\n\n  get srcElement() {\n    return null;\n  }\n\n  set srcElement(_) {\n    // this member is deprecated\n  }\n\n  get currentTarget() {\n    return this[_attributes].currentTarget;\n  }\n\n  composedPath() {\n    const path = this[_path];\n    if (path.length === 0) {\n      return [];\n    }\n\n    if (!this.currentTarget) {\n      throw new Error("assertion error");\n    }\n    const composedPath = [\n      {\n        item: this.currentTarget\x2C\n        itemInShadowTree: false\x2C\n        relatedTarget: null\x2C\n        rootOfClosedTree: false\x2C\n        slotInClosedTree: false\x2C\n        target: null\x2C\n        touchTargetList: []\x2C\n      }\x2C\n    ];\n\n    let currentTargetIndex = 0;\n    let currentTargetHiddenSubtreeLevel = 0;\n\n    for (let index = path.length - 1; index >= 0; index--) {\n      const { item\x2C rootOfClosedTree\x2C slotInClosedTree } = path[index];\n\n      if (rootOfClosedTree) {\n        currentTargetHiddenSubtreeLevel++;\n      }\n\n      if (item === this.currentTarget) {\n        currentTargetIndex = index;\n        break;\n      }\n\n      if (slotInClosedTree) {\n        currentTargetHiddenSubtreeLevel--;\n      }\n    }\n\n    let currentHiddenLevel = currentTargetHiddenSubtreeLevel;\n    let maxHiddenLevel = currentTargetHiddenSubtreeLevel;\n\n    for (let i = currentTargetIndex - 1; i >= 0; i--) {\n      const { item\x2C rootOfClosedTree\x2C slotInClosedTree } = path[i];\n\n      if (rootOfClosedTree) {\n        currentHiddenLevel++;\n      }\n\n      if (currentHiddenLevel <= maxHiddenLevel) {\n        ArrayPrototypeUnshift(composedPath\x2C {\n          item\x2C\n          itemInShadowTree: false\x2C\n          relatedTarget: null\x2C\n          rootOfClosedTree: false\x2C\n          slotInClosedTree: false\x2C\n          target: null\x2C\n          touchTargetList: []\x2C\n        });\n      }\n\n      if (slotInClosedTree) {\n        currentHiddenLevel--;\n\n        if (currentHiddenLevel < maxHiddenLevel) {\n          maxHiddenLevel = currentHiddenLevel;\n        }\n      }\n    }\n\n    currentHiddenLevel = currentTargetHiddenSubtreeLevel;\n    maxHiddenLevel = currentTargetHiddenSubtreeLevel;\n\n    for (let index = currentTargetIndex + 1; index < path.length; index++) {\n      const { item\x2C rootOfClosedTree\x2C slotInClosedTree } = path[index];\n\n      if (slotInClosedTree) {\n        currentHiddenLevel++;\n      }\n\n      if (currentHiddenLevel <= maxHiddenLevel) {\n        ArrayPrototypePush(composedPath\x2C {\n          item\x2C\n          itemInShadowTree: false\x2C\n          relatedTarget: null\x2C\n          rootOfClosedTree: false\x2C\n          slotInClosedTree: false\x2C\n          target: null\x2C\n          touchTargetList: []\x2C\n        });\n      }\n\n      if (rootOfClosedTree) {\n        currentHiddenLevel--;\n\n        if (currentHiddenLevel < maxHiddenLevel) {\n          maxHiddenLevel = currentHiddenLevel;\n        }\n      }\n    }\n    return ArrayPrototypeMap(composedPath\x2C (p) => p.item);\n  }\n\n  get NONE() {\n    return Event.NONE;\n  }\n\n  get CAPTURING_PHASE() {\n    return Event.CAPTURING_PHASE;\n  }\n\n  get AT_TARGET() {\n    return Event.AT_TARGET;\n  }\n\n  get BUBBLING_PHASE() {\n    return Event.BUBBLING_PHASE;\n  }\n\n  static get NONE() {\n    return 0;\n  }\n\n  static get CAPTURING_PHASE() {\n    return 1;\n  }\n\n  static get AT_TARGET() {\n    return 2;\n  }\n\n  static get BUBBLING_PHASE() {\n    return 3;\n  }\n\n  get eventPhase() {\n    return this[_attributes].eventPhase;\n  }\n\n  stopPropagation() {\n    this[_stopPropagationFlag] = true;\n  }\n\n  get cancelBubble() {\n    return this[_stopPropagationFlag];\n  }\n\n  set cancelBubble(value) {\n    this[_stopPropagationFlag] = webidl.converters.boolean(value);\n  }\n\n  stopImmediatePropagation() {\n    this[_stopPropagationFlag] = true;\n    this[_stopImmediatePropagationFlag] = true;\n  }\n\n  get bubbles() {\n    return this[_attributes].bubbles;\n  }\n\n  get cancelable() {\n    return this[_attributes].cancelable;\n  }\n\n  get returnValue() {\n    return !this[_canceledFlag];\n  }\n\n  set returnValue(value) {\n    if (!webidl.converters.boolean(value)) {\n      this[_canceledFlag] = true;\n    }\n  }\n\n  preventDefault() {\n    if (this[_attributes].cancelable && !this[_inPassiveListener]) {\n      this[_canceledFlag] = true;\n    }\n  }\n\n  get defaultPrevented() {\n    return this[_canceledFlag];\n  }\n\n  get composed() {\n    return this[_attributes].composed;\n  }\n\n  get initialized() {\n    return true;\n  }\n\n  get timeStamp() {\n    return this[_attributes].timeStamp;\n  }\n}\n\nconst EventPrototype = Event.prototype;\n\n// Not spec compliant. The spec defines it as [LegacyUnforgeable]\n// but doing so has a big performance hit\nReflectDefineProperty(Event.prototype\x2C "isTrusted"\x2C {\n  enumerable: true\x2C\n  get: isTrusted\x2C\n});\n\nfunction defineEnumerableProps(\n  Ctor\x2C\n  props\x2C\n) {\n  for (let i = 0; i < props.length; ++i) {\n    const prop = props[i];\n    ReflectDefineProperty(Ctor.prototype\x2C prop\x2C { enumerable: true });\n  }\n}\n\nconst EVENT_PROPS = [\n  "bubbles"\x2C\n  "cancelable"\x2C\n  "composed"\x2C\n  "currentTarget"\x2C\n  "defaultPrevented"\x2C\n  "eventPhase"\x2C\n  "srcElement"\x2C\n  "target"\x2C\n  "returnValue"\x2C\n  "timeStamp"\x2C\n  "type"\x2C\n];\n\ndefineEnumerableProps(Event\x2C EVENT_PROPS);\n\n// This is currently the only node type we are using\x2C so instead of implementing\n// the whole of the Node interface at the moment\x2C this just gives us the one\n// value to power the standards based logic\nconst DOCUMENT_FRAGMENT_NODE = 11;\n\n// DOM Logic Helper functions and type guards\n\n/** Get the parent node\x2C for event targets that have a parent.\n *\n * Ref: https://dom.spec.whatwg.org/#get-the-parent */\nfunction getParent(eventTarget) {\n  return isNode(eventTarget) ? eventTarget.parentNode : null;\n}\n\nfunction getRoot(eventTarget) {\n  return isNode(eventTarget)\n    ? eventTarget.getRootNode({ composed: true })\n    : null;\n}\n\nfunction isNode(\n  eventTarget\x2C\n) {\n  return eventTarget?.nodeType !== undefined;\n}\n\n// https://dom.spec.whatwg.org/#concept-shadow-including-inclusive-ancestor\nfunction isShadowInclusiveAncestor(\n  ancestor\x2C\n  node\x2C\n) {\n  while (isNode(node)) {\n    if (node === ancestor) {\n      return true;\n    }\n\n    if (isShadowRoot(node)) {\n      node = node && getHost(node);\n    } else {\n      node = getParent(node);\n    }\n  }\n\n  return false;\n}\n\nfunction isShadowRoot(nodeImpl) {\n  return Boolean(\n    nodeImpl &&\n      isNode(nodeImpl) &&\n      nodeImpl.nodeType === DOCUMENT_FRAGMENT_NODE &&\n      getHost(nodeImpl) != null\x2C\n  );\n}\n\nfunction isSlottable(\n  /* nodeImpl\x2C */\n) {\n  // TODO(marcosc90) currently there aren't any slottables nodes\n  // https://dom.spec.whatwg.org/#concept-slotable\n  // return isNode(nodeImpl) && ReflectHas(nodeImpl\x2C "assignedSlot");\n  return false;\n}\n\n// DOM Logic functions\n\n/** Append a path item to an event's path.\n *\n * Ref: https://dom.spec.whatwg.org/#concept-event-path-append\n */\nfunction appendToEventPath(\n  eventImpl\x2C\n  target\x2C\n  targetOverride\x2C\n  relatedTarget\x2C\n  touchTargets\x2C\n  slotInClosedTree\x2C\n) {\n  const itemInShadowTree = isNode(target) && isShadowRoot(getRoot(target));\n  const rootOfClosedTree = isShadowRoot(target) &&\n    getMode(target) === "closed";\n\n  ArrayPrototypePush(getPath(eventImpl)\x2C {\n    item: target\x2C\n    itemInShadowTree\x2C\n    target: targetOverride\x2C\n    relatedTarget\x2C\n    touchTargetList: touchTargets\x2C\n    rootOfClosedTree\x2C\n    slotInClosedTree\x2C\n  });\n}\n\nfunction dispatch(\n  targetImpl\x2C\n  eventImpl\x2C\n  targetOverride\x2C\n) {\n  let clearTargets = false;\n  let activationTarget = null;\n\n  setDispatched(eventImpl\x2C true);\n\n  targetOverride = targetOverride ?? targetImpl;\n  const eventRelatedTarget = eventImpl.relatedTarget;\n  let relatedTarget = retarget(eventRelatedTarget\x2C targetImpl);\n\n  if (targetImpl !== relatedTarget || targetImpl === eventRelatedTarget) {\n    const touchTargets = [];\n\n    appendToEventPath(\n      eventImpl\x2C\n      targetImpl\x2C\n      targetOverride\x2C\n      relatedTarget\x2C\n      touchTargets\x2C\n      false\x2C\n    );\n\n    const isActivationEvent = eventImpl.type === "click";\n\n    if (isActivationEvent && getHasActivationBehavior(targetImpl)) {\n      activationTarget = targetImpl;\n    }\n\n    let slotInClosedTree = false;\n    let slottable = isSlottable(targetImpl) && getAssignedSlot(targetImpl)\n      ? targetImpl\n      : null;\n    let parent = getParent(targetImpl);\n\n    // Populate event path\n    // https://dom.spec.whatwg.org/#event-path\n    while (parent !== null) {\n      if (slottable !== null) {\n        slottable = null;\n\n        const parentRoot = getRoot(parent);\n        if (\n          isShadowRoot(parentRoot) &&\n          parentRoot &&\n          getMode(parentRoot) === "closed"\n        ) {\n          slotInClosedTree = true;\n        }\n      }\n\n      relatedTarget = retarget(eventRelatedTarget\x2C parent);\n\n      if (\n        isNode(parent) &&\n        isShadowInclusiveAncestor(getRoot(targetImpl)\x2C parent)\n      ) {\n        appendToEventPath(\n          eventImpl\x2C\n          parent\x2C\n          null\x2C\n          relatedTarget\x2C\n          touchTargets\x2C\n          slotInClosedTree\x2C\n        );\n      } else if (parent === relatedTarget) {\n        parent = null;\n      } else {\n        targetImpl = parent;\n\n        if (\n          isActivationEvent &&\n          activationTarget === null &&\n          getHasActivationBehavior(targetImpl)\n        ) {\n          activationTarget = targetImpl;\n        }\n\n        appendToEventPath(\n          eventImpl\x2C\n          parent\x2C\n          targetImpl\x2C\n          relatedTarget\x2C\n          touchTargets\x2C\n          slotInClosedTree\x2C\n        );\n      }\n\n      if (parent !== null) {\n        parent = getParent(parent);\n      }\n\n      slotInClosedTree = false;\n    }\n\n    let clearTargetsTupleIndex = -1;\n    const path = getPath(eventImpl);\n    for (\n      let i = path.length - 1;\n      i >= 0 && clearTargetsTupleIndex === -1;\n      i--\n    ) {\n      if (path[i].target !== null) {\n        clearTargetsTupleIndex = i;\n      }\n    }\n    const clearTargetsTuple = path[clearTargetsTupleIndex];\n\n    clearTargets = (isNode(clearTargetsTuple.target) &&\n      isShadowRoot(getRoot(clearTargetsTuple.target))) ||\n      (isNode(clearTargetsTuple.relatedTarget) &&\n        isShadowRoot(getRoot(clearTargetsTuple.relatedTarget)));\n\n    setEventPhase(eventImpl\x2C Event.CAPTURING_PHASE);\n\n    for (let i = path.length - 1; i >= 0; --i) {\n      const tuple = path[i];\n\n      if (tuple.target === null) {\n        invokeEventListeners(tuple\x2C eventImpl);\n      }\n    }\n\n    for (let i = 0; i < path.length; i++) {\n      const tuple = path[i];\n\n      if (tuple.target !== null) {\n        setEventPhase(eventImpl\x2C Event.AT_TARGET);\n      } else {\n        setEventPhase(eventImpl\x2C Event.BUBBLING_PHASE);\n      }\n\n      if (\n        (eventImpl.eventPhase === Event.BUBBLING_PHASE &&\n          eventImpl.bubbles) ||\n        eventImpl.eventPhase === Event.AT_TARGET\n      ) {\n        invokeEventListeners(tuple\x2C eventImpl);\n      }\n    }\n  }\n\n  setEventPhase(eventImpl\x2C Event.NONE);\n  setCurrentTarget(eventImpl\x2C null);\n  setPath(eventImpl\x2C []);\n  setDispatched(eventImpl\x2C false);\n  eventImpl.cancelBubble = false;\n  setStopImmediatePropagation(eventImpl\x2C false);\n\n  if (clearTargets) {\n    setTarget(eventImpl\x2C null);\n    setRelatedTarget(eventImpl\x2C null);\n  }\n\n  // TODO(bartlomieju): invoke activation targets if HTML nodes will be implemented\n  // if (activationTarget !== null) {\n  //   if (!eventImpl.defaultPrevented) {\n  //     activationTarget._activationBehavior();\n  //   }\n  // }\n\n  return !eventImpl.defaultPrevented;\n}\n\n/** Inner invoking of the event listeners where the resolved listeners are\n * called.\n *\n * Ref: https://dom.spec.whatwg.org/#concept-event-listener-inner-invoke */\nfunction innerInvokeEventListeners(\n  eventImpl\x2C\n  targetListeners\x2C\n) {\n  let found = false;\n\n  const { type } = eventImpl;\n\n  if (!targetListeners || !targetListeners[type]) {\n    return found;\n  }\n\n  let handlers = targetListeners[type];\n  const handlersLength = handlers.length;\n\n  // Copy event listeners before iterating since the list can be modified during the iteration.\n  if (handlersLength > 1) {\n    handlers = ArrayPrototypeSlice(targetListeners[type]);\n  }\n\n  for (let i = 0; i < handlersLength; i++) {\n    const listener = handlers[i];\n\n    let capture\x2C once\x2C passive;\n    if (typeof listener.options === "boolean") {\n      capture = listener.options;\n      once = false;\n      passive = false;\n    } else {\n      capture = listener.options.capture;\n      once = listener.options.once;\n      passive = listener.options.passive;\n    }\n\n    // Check if the event listener has been removed since the listeners has been cloned.\n    if (!ArrayPrototypeIncludes(targetListeners[type]\x2C listener)) {\n      continue;\n    }\n\n    found = true;\n\n    if (\n      (eventImpl.eventPhase === Event.CAPTURING_PHASE && !capture) ||\n      (eventImpl.eventPhase === Event.BUBBLING_PHASE && capture)\n    ) {\n      continue;\n    }\n\n    if (once) {\n      ArrayPrototypeSplice(\n        targetListeners[type]\x2C\n        ArrayPrototypeIndexOf(targetListeners[type]\x2C listener)\x2C\n        1\x2C\n      );\n    }\n\n    if (passive) {\n      setInPassiveListener(eventImpl\x2C true);\n    }\n\n    if (typeof listener.callback === "object") {\n      if (typeof listener.callback.handleEvent === "function") {\n        listener.callback.handleEvent(eventImpl);\n      }\n    } else {\n      FunctionPrototypeCall(\n        listener.callback\x2C\n        eventImpl.currentTarget\x2C\n        eventImpl\x2C\n      );\n    }\n\n    setInPassiveListener(eventImpl\x2C false);\n\n    if (getStopImmediatePropagation(eventImpl)) {\n      return found;\n    }\n  }\n\n  return found;\n}\n\n/** Invokes the listeners on a given event path with the supplied event.\n *\n * Ref: https://dom.spec.whatwg.org/#concept-event-listener-invoke */\nfunction invokeEventListeners(tuple\x2C eventImpl) {\n  const path = getPath(eventImpl);\n  if (path.length === 1) {\n    const t = path[0];\n    if (t.target) {\n      setTarget(eventImpl\x2C t.target);\n    }\n  } else {\n    const tupleIndex = ArrayPrototypeIndexOf(path\x2C tuple);\n    for (let i = tupleIndex; i >= 0; i--) {\n      const t = path[i];\n      if (t.target) {\n        setTarget(eventImpl\x2C t.target);\n        break;\n      }\n    }\n  }\n\n  setRelatedTarget(eventImpl\x2C tuple.relatedTarget);\n\n  if (eventImpl.cancelBubble) {\n    return;\n  }\n\n  setCurrentTarget(eventImpl\x2C tuple.item);\n\n  try {\n    innerInvokeEventListeners(eventImpl\x2C getListeners(tuple.item));\n  } catch (error) {\n    reportException(error);\n  }\n}\n\nfunction normalizeEventHandlerOptions(\n  options\x2C\n) {\n  if (typeof options === "boolean" || typeof options === "undefined") {\n    return {\n      capture: Boolean(options)\x2C\n    };\n  } else {\n    return options;\n  }\n}\n\n/** Retarget the target following the spec logic.\n *\n * Ref: https://dom.spec.whatwg.org/#retarget */\nfunction retarget(a\x2C b) {\n  while (true) {\n    if (!isNode(a)) {\n      return a;\n    }\n\n    const aRoot = a.getRootNode();\n\n    if (aRoot) {\n      if (\n        !isShadowRoot(aRoot) ||\n        (isNode(b) && isShadowInclusiveAncestor(aRoot\x2C b))\n      ) {\n        return a;\n      }\n\n      a = getHost(aRoot);\n    }\n  }\n}\n\n// Accessors for non-public data\n\nconst eventTargetData = Symbol();\n\nfunction setEventTargetData(target) {\n  target[eventTargetData] = getDefaultTargetData();\n}\n\nfunction getAssignedSlot(target) {\n  return Boolean(target?.[eventTargetData]?.assignedSlot);\n}\n\nfunction getHasActivationBehavior(target) {\n  return Boolean(target?.[eventTargetData]?.hasActivationBehavior);\n}\n\nfunction getHost(target) {\n  return target?.[eventTargetData]?.host ?? null;\n}\n\nfunction getListeners(target) {\n  return target?.[eventTargetData]?.listeners ?? {};\n}\n\nfunction getMode(target) {\n  return target?.[eventTargetData]?.mode ?? null;\n}\n\nfunction listenerCount(target\x2C type) {\n  return getListeners(target)?.[type]?.length ?? 0;\n}\n\nfunction getDefaultTargetData() {\n  return {\n    assignedSlot: false\x2C\n    hasActivationBehavior: false\x2C\n    host: null\x2C\n    listeners: ObjectCreate(null)\x2C\n    mode: ""\x2C\n  };\n}\n\nfunction addEventListenerOptionsConverter(V\x2C prefix) {\n  if (webidl.type(V) !== "Object") {\n    return { capture: !!V\x2C once: false\x2C passive: false };\n  }\n\n  const options = {\n    capture: !!V.capture\x2C\n    once: !!V.once\x2C\n    passive: !!V.passive\x2C\n  };\n\n  const signal = V.signal;\n  if (signal !== undefined) {\n    options.signal = webidl.converters.AbortSignal(\n      signal\x2C\n      prefix\x2C\n      "'signal' of 'AddEventListenerOptions' (Argument 3)"\x2C\n    );\n  }\n\n  return options;\n}\n\nclass EventTarget {\n  constructor() {\n    this[eventTargetData] = getDefaultTargetData();\n    this[webidl.brand] = webidl.brand;\n  }\n\n  addEventListener(\n    type\x2C\n    callback\x2C\n    options\x2C\n  ) {\n    const self = this ?? globalThis_;\n    webidl.assertBranded(self\x2C EventTargetPrototype);\n    const prefix = "Failed to execute 'addEventListener' on 'EventTarget'";\n\n    webidl.requiredArguments(arguments.length\x2C 2\x2C prefix);\n\n    options = addEventListenerOptionsConverter(options\x2C prefix);\n\n    if (callback === null) {\n      return;\n    }\n\n    const { listeners } = self[eventTargetData];\n\n    if (!listeners[type]) {\n      listeners[type] = [];\n    }\n\n    const listenerList = listeners[type];\n    for (let i = 0; i < listenerList.length; ++i) {\n      const listener = listenerList[i];\n      if (\n        ((typeof listener.options === "boolean" &&\n          listener.options === options.capture) ||\n          (typeof listener.options === "object" &&\n            listener.options.capture === options.capture)) &&\n        listener.callback === callback\n      ) {\n        return;\n      }\n    }\n    if (options?.signal) {\n      const signal = options?.signal;\n      if (signal.aborted) {\n        // If signal is not null and its aborted flag is set\x2C then return.\n        return;\n      } else {\n        // If listener's signal is not null\x2C then add the following abort\n        // abort steps to it: Remove an event listener.\n        signal.addEventListener("abort"\x2C () => {\n          self.removeEventListener(type\x2C callback\x2C options);\n        });\n      }\n    }\n\n    ArrayPrototypePush(listeners[type]\x2C { callback\x2C options });\n  }\n\n  removeEventListener(\n    type\x2C\n    callback\x2C\n    options\x2C\n  ) {\n    const self = this ?? globalThis_;\n    webidl.assertBranded(self\x2C EventTargetPrototype);\n    webidl.requiredArguments(\n      arguments.length\x2C\n      2\x2C\n      "Failed to execute 'removeEventListener' on 'EventTarget'"\x2C\n    );\n\n    const { listeners } = self[eventTargetData];\n    if (callback !== null && listeners[type]) {\n      listeners[type] = ArrayPrototypeFilter(\n        listeners[type]\x2C\n        (listener) => listener.callback !== callback\x2C\n      );\n    } else if (callback === null || !listeners[type]) {\n      return;\n    }\n\n    options = normalizeEventHandlerOptions(options);\n\n    for (let i = 0; i < listeners[type].length; ++i) {\n      const listener = listeners[type][i];\n      if (\n        ((typeof listener.options === "boolean" &&\n          listener.options === options.capture) ||\n          (typeof listener.options === "object" &&\n            listener.options.capture === options.capture)) &&\n        listener.callback === callback\n      ) {\n        ArrayPrototypeSplice(listeners[type]\x2C i\x2C 1);\n        break;\n      }\n    }\n  }\n\n  dispatchEvent(event) {\n    // If `this` is not present\x2C then fallback to global scope. We don't use\n    // `globalThis` directly here\x2C because it could be deleted by user.\n    // Instead use saved reference to global scope when the script was\n    // executed.\n    const self = this ?? globalThis_;\n    webidl.assertBranded(self\x2C EventTargetPrototype);\n    webidl.requiredArguments(\n      arguments.length\x2C\n      1\x2C\n      "Failed to execute 'dispatchEvent' on 'EventTarget'"\x2C\n    );\n\n    // This is an optimization to avoid creating an event listener\n    // on each startup.\n    // Stores the flag for checking whether unload is dispatched or not.\n    // This prevents the recursive dispatches of unload events.\n    // See https://github.com/denoland/deno/issues/9201.\n    if (event.type === "unload" && self === globalThis_) {\n      globalThis_[SymbolFor("Deno.isUnloadDispatched")] = true;\n    }\n\n    const { listeners } = self[eventTargetData];\n    if (!listeners[event.type]) {\n      setTarget(event\x2C this);\n      return true;\n    }\n\n    if (getDispatched(event)) {\n      throw new DOMException("Invalid event state."\x2C "InvalidStateError");\n    }\n\n    if (event.eventPhase !== Event.NONE) {\n      throw new DOMException("Invalid event state."\x2C "InvalidStateError");\n    }\n\n    return dispatch(self\x2C event);\n  }\n\n  getParent(_event) {\n    return null;\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return `${this.constructor.name} ${inspect({}\x2C inspectOptions)}`;\n  }\n}\n\nwebidl.configureInterface(EventTarget);\nconst EventTargetPrototype = EventTarget.prototype;\n\ndefineEnumerableProps(EventTarget\x2C [\n  "addEventListener"\x2C\n  "removeEventListener"\x2C\n  "dispatchEvent"\x2C\n]);\n\nclass ErrorEvent extends Event {\n  #message = "";\n  #filename = "";\n  #lineno = "";\n  #colno = "";\n  #error = "";\n\n  get message() {\n    return this.#message;\n  }\n  get filename() {\n    return this.#filename;\n  }\n  get lineno() {\n    return this.#lineno;\n  }\n  get colno() {\n    return this.#colno;\n  }\n  get error() {\n    return this.#error;\n  }\n\n  constructor(\n    type\x2C\n    {\n      bubbles\x2C\n      cancelable\x2C\n      composed\x2C\n      message = ""\x2C\n      filename = ""\x2C\n      lineno = 0\x2C\n      colno = 0\x2C\n      error\x2C\n    } = {}\x2C\n  ) {\n    super(type\x2C {\n      bubbles: bubbles\x2C\n      cancelable: cancelable\x2C\n      composed: composed\x2C\n    });\n\n    this.#message = message;\n    this.#filename = filename;\n    this.#lineno = lineno;\n    this.#colno = colno;\n    this.#error = error;\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(ErrorEventPrototype\x2C this)\x2C\n        keys: [\n          ...new SafeArrayIterator(EVENT_PROPS)\x2C\n          "message"\x2C\n          "filename"\x2C\n          "lineno"\x2C\n          "colno"\x2C\n          "error"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n\n  // TODO(lucacasonato): remove when this interface is spec aligned\n  [SymbolToStringTag] = "ErrorEvent";\n}\n\nconst ErrorEventPrototype = ErrorEvent.prototype;\n\ndefineEnumerableProps(ErrorEvent\x2C [\n  "message"\x2C\n  "filename"\x2C\n  "lineno"\x2C\n  "colno"\x2C\n  "error"\x2C\n]);\n\nclass CloseEvent extends Event {\n  #wasClean = "";\n  #code = "";\n  #reason = "";\n\n  get wasClean() {\n    return this.#wasClean;\n  }\n  get code() {\n    return this.#code;\n  }\n  get reason() {\n    return this.#reason;\n  }\n\n  constructor(type\x2C {\n    bubbles\x2C\n    cancelable\x2C\n    composed\x2C\n    wasClean = false\x2C\n    code = 0\x2C\n    reason = ""\x2C\n  } = {}) {\n    super(type\x2C {\n      bubbles: bubbles\x2C\n      cancelable: cancelable\x2C\n      composed: composed\x2C\n    });\n\n    this.#wasClean = wasClean;\n    this.#code = code;\n    this.#reason = reason;\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(CloseEventPrototype\x2C this)\x2C\n        keys: [\n          ...new SafeArrayIterator(EVENT_PROPS)\x2C\n          "wasClean"\x2C\n          "code"\x2C\n          "reason"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\n\nconst CloseEventPrototype = CloseEvent.prototype;\n\nclass MessageEvent extends Event {\n  get source() {\n    return null;\n  }\n\n  constructor(type\x2C eventInitDict) {\n    super(type\x2C {\n      bubbles: eventInitDict?.bubbles ?? false\x2C\n      cancelable: eventInitDict?.cancelable ?? false\x2C\n      composed: eventInitDict?.composed ?? false\x2C\n    });\n\n    this.data = eventInitDict?.data ?? null;\n    this.ports = eventInitDict?.ports ?? [];\n    this.origin = eventInitDict?.origin ?? "";\n    this.lastEventId = eventInitDict?.lastEventId ?? "";\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(MessageEventPrototype\x2C this)\x2C\n        keys: [\n          ...new SafeArrayIterator(EVENT_PROPS)\x2C\n          "data"\x2C\n          "origin"\x2C\n          "lastEventId"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n\n  // TODO(lucacasonato): remove when this interface is spec aligned\n  [SymbolToStringTag] = "CloseEvent";\n}\n\nconst MessageEventPrototype = MessageEvent.prototype;\n\nclass CustomEvent extends Event {\n  #detail = null;\n\n  constructor(type\x2C eventInitDict = {}) {\n    super(type\x2C eventInitDict);\n    webidl.requiredArguments(\n      arguments.length\x2C\n      1\x2C\n      "Failed to construct 'CustomEvent'"\x2C\n    );\n    const { detail } = eventInitDict;\n    this.#detail = detail;\n  }\n\n  get detail() {\n    return this.#detail;\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(CustomEventPrototype\x2C this)\x2C\n        keys: [\n          ...new SafeArrayIterator(EVENT_PROPS)\x2C\n          "detail"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n\n  // TODO(lucacasonato): remove when this interface is spec aligned\n  [SymbolToStringTag] = "CustomEvent";\n}\n\nconst CustomEventPrototype = CustomEvent.prototype;\n\nReflectDefineProperty(CustomEvent.prototype\x2C "detail"\x2C {\n  enumerable: true\x2C\n});\n\n// ProgressEvent could also be used in other DOM progress event emits.\n// Current use is for FileReader.\nclass ProgressEvent extends Event {\n  constructor(type\x2C eventInitDict = {}) {\n    super(type\x2C eventInitDict);\n\n    this.lengthComputable = eventInitDict?.lengthComputable ?? false;\n    this.loaded = eventInitDict?.loaded ?? 0;\n    this.total = eventInitDict?.total ?? 0;\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(ProgressEventPrototype\x2C this)\x2C\n        keys: [\n          ...new SafeArrayIterator(EVENT_PROPS)\x2C\n          "lengthComputable"\x2C\n          "loaded"\x2C\n          "total"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n\n  // TODO(lucacasonato): remove when this interface is spec aligned\n  [SymbolToStringTag] = "ProgressEvent";\n}\n\nconst ProgressEventPrototype = ProgressEvent.prototype;\n\nclass PromiseRejectionEvent extends Event {\n  #promise = null;\n  #reason = null;\n\n  get promise() {\n    return this.#promise;\n  }\n  get reason() {\n    return this.#reason;\n  }\n\n  constructor(\n    type\x2C\n    {\n      bubbles\x2C\n      cancelable\x2C\n      composed\x2C\n      promise\x2C\n      reason\x2C\n    } = {}\x2C\n  ) {\n    super(type\x2C {\n      bubbles: bubbles\x2C\n      cancelable: cancelable\x2C\n      composed: composed\x2C\n    });\n\n    this.#promise = promise;\n    this.#reason = reason;\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(\n          PromiseRejectionEventPrototype\x2C\n          this\x2C\n        )\x2C\n        keys: [\n          ...new SafeArrayIterator(EVENT_PROPS)\x2C\n          "promise"\x2C\n          "reason"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n\n  // TODO(lucacasonato): remove when this interface is spec aligned\n  [SymbolToStringTag] = "PromiseRejectionEvent";\n}\n\nconst PromiseRejectionEventPrototype = PromiseRejectionEvent.prototype;\n\ndefineEnumerableProps(PromiseRejectionEvent\x2C [\n  "promise"\x2C\n  "reason"\x2C\n]);\n\nconst _eventHandlers = Symbol("eventHandlers");\n\nfunction makeWrappedHandler(handler\x2C isSpecialErrorEventHandler) {\n  function wrappedHandler(evt) {\n    if (typeof wrappedHandler.handler !== "function") {\n      return;\n    }\n\n    if (\n      isSpecialErrorEventHandler &&\n      ObjectPrototypeIsPrototypeOf(ErrorEventPrototype\x2C evt) &&\n      evt.type === "error"\n    ) {\n      const ret = FunctionPrototypeCall(\n        wrappedHandler.handler\x2C\n        this\x2C\n        evt.message\x2C\n        evt.filename\x2C\n        evt.lineno\x2C\n        evt.colno\x2C\n        evt.error\x2C\n      );\n      if (ret === true) {\n        evt.preventDefault();\n      }\n      return;\n    }\n\n    return FunctionPrototypeCall(wrappedHandler.handler\x2C this\x2C evt);\n  }\n  wrappedHandler.handler = handler;\n  return wrappedHandler;\n}\n\n// `init` is an optional function that will be called the first time that the\n// event handler property is set. It will be called with the object on which\n// the property is set as its argument.\n// `isSpecialErrorEventHandler` can be set to true to opt into the special\n// behavior of event handlers for the "error" event in a global scope.\nfunction defineEventHandler(\n  emitter\x2C\n  name\x2C\n  init = undefined\x2C\n  isSpecialErrorEventHandler = false\x2C\n) {\n  // HTML specification section 8.1.7.1\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\n    get() {\n      if (!this[_eventHandlers]) {\n        return null;\n      }\n\n      return MapPrototypeGet(this[_eventHandlers]\x2C name)?.handler ?? null;\n    }\x2C\n    set(value) {\n      // All three Web IDL event handler types are nullable callback functions\n      // with the [LegacyTreatNonObjectAsNull] extended attribute\x2C meaning\n      // anything other than an object is treated as null.\n      if (typeof value !== "object" && typeof value !== "function") {\n        value = null;\n      }\n\n      if (!this[_eventHandlers]) {\n        this[_eventHandlers] = new SafeMap();\n      }\n      let handlerWrapper = MapPrototypeGet(this[_eventHandlers]\x2C name);\n      if (handlerWrapper) {\n        handlerWrapper.handler = value;\n      } else if (value !== null) {\n        handlerWrapper = makeWrappedHandler(\n          value\x2C\n          isSpecialErrorEventHandler\x2C\n        );\n        this.addEventListener(name\x2C handlerWrapper);\n        init?.(this);\n      }\n      MapPrototypeSet(this[_eventHandlers]\x2C name\x2C handlerWrapper);\n    }\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n  });\n}\n\nlet reportExceptionStackedCalls = 0;\n\n// https://html.spec.whatwg.org/#report-the-exception\nfunction reportException(error) {\n  reportExceptionStackedCalls++;\n  const jsError = core.destructureError(error);\n  const message = jsError.exceptionMessage;\n  let filename = "";\n  let lineno = 0;\n  let colno = 0;\n  if (jsError.frames.length > 0) {\n    filename = jsError.frames[0].fileName;\n    lineno = jsError.frames[0].lineNumber;\n    colno = jsError.frames[0].columnNumber;\n  } else {\n    const jsError = core.destructureError(new Error());\n    const frames = jsError.frames;\n    for (let i = 0; i < frames.length; ++i) {\n      const frame = frames[i];\n      if (\n        typeof frame.fileName == "string" &&\n        !StringPrototypeStartsWith(frame.fileName\x2C "ext:")\n      ) {\n        filename = frame.fileName;\n        lineno = frame.lineNumber;\n        colno = frame.columnNumber;\n        break;\n      }\n    }\n  }\n  const event = new ErrorEvent("error"\x2C {\n    cancelable: true\x2C\n    message\x2C\n    filename\x2C\n    lineno\x2C\n    colno\x2C\n    error\x2C\n  });\n  // Avoid recursing `reportException()` via error handlers more than once.\n  if (reportExceptionStackedCalls > 1 || globalThis_.dispatchEvent(event)) {\n    core.reportUnhandledException(error);\n  }\n  reportExceptionStackedCalls--;\n}\n\nfunction checkThis(thisArg) {\n  if (thisArg !== null && thisArg !== undefined && thisArg !== globalThis_) {\n    throw new TypeError("Illegal invocation");\n  }\n}\n\n// https://html.spec.whatwg.org/#dom-reporterror\nfunction reportError(error) {\n  checkThis(this);\n  const prefix = "Failed to call 'reportError'";\n  webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n  reportException(error);\n}\n\nexport {\n  CloseEvent\x2C\n  CustomEvent\x2C\n  defineEventHandler\x2C\n  dispatch\x2C\n  ErrorEvent\x2C\n  Event\x2C\n  EventTarget\x2C\n  listenerCount\x2C\n  MessageEvent\x2C\n  ProgressEvent\x2C\n  PromiseRejectionEvent\x2C\n  reportError\x2C\n  reportException\x2C\n  saveGlobalThisReference\x2C\n  setEventTargetData\x2C\n  setIsTrusted\x2C\n  setTarget\x2C\n};\n
code-source-info,0x1123fa4817a0,15,19251,19315,C0O19264C2O19271C8O19290C11O19288C16O19314,,
tick,0x185256254,62625,0,0x0,3,0x1123fa48130d
code-creation,JS,10,62833,0x1123fa4817f8,10,saveGlobalThisReference ext:deno_web/02_event.js:45:33,0x38e60b579ca8,~
code-source-info,0x1123fa4817f8,15,1353,1383,C0O1363C2O1375C9O1382,,
code-creation,JS,10,62917,0x1123fa481848,119,runtimeStart ext:runtime_main/js/99_main.js:454:22,0xb845273108,~
code-source-info,0x1123fa481848,300,13157,13548,C0O13216C6O13221C14O13249C19O13221C24O13274C28O13279C36O13310C41O13279C46O13334C50O13339C58O13372C63O13339C68O13392C77O13392C81O13445C84O13453C98O13453C103O13520C107O13525C112O13525C118O13547,,
code-creation,JS,10,62958,0x1123fa481900,17,setMacrotaskCallback ext:core/01_core.js:128:32,0x38e60b55c0c8,~
script-source,5,ext:core/01_core.js,// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.\n"use strict";\n\n((window) => {\n  const {\n    ArrayPrototypeMap\x2C\n    ArrayPrototypePush\x2C\n    Error\x2C\n    ErrorCaptureStackTrace\x2C\n    FunctionPrototypeBind\x2C\n    ObjectAssign\x2C\n    ObjectFreeze\x2C\n    ObjectFromEntries\x2C\n    ObjectKeys\x2C\n    ObjectHasOwn\x2C\n    Proxy\x2C\n    setQueueMicrotask\x2C\n    SafeMap\x2C\n    StringPrototypeSlice\x2C\n    Symbol\x2C\n    SymbolFor\x2C\n    TypedArrayPrototypeGetLength\x2C\n    TypedArrayPrototypeJoin\x2C\n    TypedArrayPrototypeSlice\x2C\n    TypedArrayPrototypeGetSymbolToStringTag\x2C\n    TypeError\x2C\n  } = window.__bootstrap.primordials;\n  const {\n    ops\x2C\n    hasPromise\x2C\n    promiseIdSymbol\x2C\n    registerErrorClass\x2C\n    __setOpCallTracingEnabled\x2C\n    __initializeCoreMethods\x2C\n    __resolvePromise\x2C\n  } = window.Deno.core;\n  const {\n    op_abort_wasm_streaming\x2C\n    op_current_user_call_site\x2C\n    op_decode\x2C\n    op_deserialize\x2C\n    op_destructure_error\x2C\n    op_dispatch_exception\x2C\n    op_encode\x2C\n    op_encode_binary_string\x2C\n    op_eval_context\x2C\n    op_event_loop_has_more_work\x2C\n    op_get_promise_details\x2C\n    op_get_proxy_details\x2C\n    op_has_tick_scheduled\x2C\n    op_lazy_load_esm\x2C\n    op_memory_usage\x2C\n    op_op_names\x2C\n    op_panic\x2C\n    op_print\x2C\n    op_queue_microtask\x2C\n    op_ref_op\x2C\n    op_resources\x2C\n    op_run_microtasks\x2C\n    op_serialize\x2C\n    op_set_handled_promise_rejection_handler\x2C\n    op_set_has_tick_scheduled\x2C\n    op_set_promise_hooks\x2C\n    op_set_wasm_streaming_callback\x2C\n    op_str_byte_length\x2C\n    op_timer_cancel\x2C\n    op_timer_queue\x2C\n    op_timer_ref\x2C\n    op_timer_unref\x2C\n    op_unref_op\x2C\n    op_cancel_handle\x2C\n    op_opcall_tracing_enable\x2C\n    op_opcall_tracing_submit\x2C\n    op_opcall_tracing_get_all\x2C\n    op_opcall_tracing_get\x2C\n\n    op_is_any_array_buffer\x2C\n    op_is_arguments_object\x2C\n    op_is_array_buffer\x2C\n    op_is_array_buffer_view\x2C\n    op_is_async_function\x2C\n    op_is_big_int_object\x2C\n    op_is_boolean_object\x2C\n    op_is_boxed_primitive\x2C\n    op_is_data_view\x2C\n    op_is_date\x2C\n    op_is_generator_function\x2C\n    op_is_generator_object\x2C\n    op_is_map\x2C\n    op_is_map_iterator\x2C\n    op_is_module_namespace_object\x2C\n    op_is_native_error\x2C\n    op_is_number_object\x2C\n    op_is_promise\x2C\n    op_is_proxy\x2C\n    op_is_reg_exp\x2C\n    op_is_set\x2C\n    op_is_set_iterator\x2C\n    op_is_shared_array_buffer\x2C\n    op_is_string_object\x2C\n    op_is_symbol_object\x2C\n    op_is_typed_array\x2C\n    op_is_weak_map\x2C\n    op_is_weak_set\x2C\n  } = ensureFastOps();\n\n  // core/infra collaborative code\n  delete window.Deno.core.__setOpCallTracingEnabled;\n  delete window.Deno.core.__initializeCoreMethods;\n  delete window.Deno.core.__resolvePromise;\n  __initializeCoreMethods(\n    eventLoopTick\x2C\n    submitOpCallTrace\x2C\n  );\n\n  function submitOpCallTrace(id) {\n    const error = new Error();\n    ErrorCaptureStackTrace(error\x2C submitOpCallTrace);\n    op_opcall_tracing_submit(id\x2C StringPrototypeSlice(error.stack\x2C 6));\n  }\n\n  let unhandledPromiseRejectionHandler = () => false;\n  let timerDepth = 0;\n\n  const macrotaskCallbacks = [];\n  const nextTickCallbacks = [];\n\n  function setMacrotaskCallback(cb) {\n    ArrayPrototypePush(macrotaskCallbacks\x2C cb);\n  }\n\n  function setNextTickCallback(cb) {\n    ArrayPrototypePush(nextTickCallbacks\x2C cb);\n  }\n\n  // This function has variable number of arguments. The last argument describes\n  // if there's a "next tick" scheduled by the Node.js compat layer. Arguments\n  // before last are alternating integers and any values that describe the\n  // responses of async ops.\n  function eventLoopTick() {\n    // First respond to all pending ops.\n    for (let i = 0; i < arguments.length - 3; i += 2) {\n      const promiseId = arguments[i];\n      const res = arguments[i + 1];\n      __resolvePromise(promiseId\x2C res);\n    }\n    // Drain nextTick queue if there's a tick scheduled.\n    if (arguments[arguments.length - 1]) {\n      for (let i = 0; i < nextTickCallbacks.length; i++) {\n        nextTickCallbacks[i]();\n      }\n    } else {\n      op_run_microtasks();\n    }\n\n    // Finally drain macrotask queue.\n    for (let i = 0; i < macrotaskCallbacks.length; i++) {\n      const cb = macrotaskCallbacks[i];\n      while (true) {\n        const res = cb();\n\n        // If callback returned `undefined` then it has no work to do\x2C we don't\n        // need to perform microtask checkpoint.\n        if (res === undefined) {\n          break;\n        }\n\n        op_run_microtasks();\n        // If callback returned `true` then it has no more work to do\x2C stop\n        // calling it then.\n        if (res === true) {\n          break;\n        }\n      }\n    }\n\n    const timers = arguments[arguments.length - 2];\n    if (timers) {\n      for (let i = 0; i < timers.length; i += 2) {\n        timerDepth = timers[i];\n        timers[i + 1]();\n      }\n      timerDepth = 0;\n    }\n\n    // If we have any rejections for this tick\x2C attempt to process them\n    const rejections = arguments[arguments.length - 3];\n    if (rejections) {\n      for (let i = 0; i < rejections.length; i += 2) {\n        const handled = unhandledPromiseRejectionHandler(\n          rejections[i]\x2C\n          rejections[i + 1]\x2C\n        );\n        if (!handled) {\n          const err = rejections[i + 1];\n          op_dispatch_exception(err\x2C true);\n        }\n      }\n    }\n  }\n\n  function refOp(promiseId) {\n    if (!hasPromise(promiseId)) {\n      return;\n    }\n    op_ref_op(promiseId);\n  }\n\n  function unrefOp(promiseId) {\n    if (!hasPromise(promiseId)) {\n      return;\n    }\n    op_unref_op(promiseId);\n  }\n\n  function refOpPromise(promise) {\n    refOp(promise[promiseIdSymbol]);\n  }\n\n  function unrefOpPromise(promise) {\n    unrefOp(promise[promiseIdSymbol]);\n  }\n\n  function resources() {\n    return ObjectFromEntries(op_resources());\n  }\n\n  function metrics() {\n    // TODO(mmastrac): we should replace this with a newer API\n    return {\n      opsDispatched: 0\x2C\n      opsDispatchedSync: 0\x2C\n      opsDispatchedAsync: 0\x2C\n      opsDispatchedAsyncUnref: 0\x2C\n      opsCompleted: 0\x2C\n      opsCompletedSync: 0\x2C\n      opsCompletedAsync: 0\x2C\n      opsCompletedAsyncUnref: 0\x2C\n      bytesSentControl: 0\x2C\n      bytesSentData: 0\x2C\n      bytesReceived: 0\x2C\n      ops: {}\x2C\n    };\n  }\n\n  let reportExceptionCallback = undefined;\n\n  // Used to report errors thrown from functions passed to `queueMicrotask()`.\n  // The callback will be passed the thrown error. For example\x2C you can use this\n  // to dispatch an error event to the global scope.\n  // In other words\x2C set the implementation for\n  // https://html.spec.whatwg.org/multipage/webappapis.html#report-the-exception\n  function setReportExceptionCallback(cb) {\n    if (typeof cb != "function") {\n      throw new TypeError("expected a function");\n    }\n    reportExceptionCallback = cb;\n  }\n\n  function queueMicrotask(cb) {\n    if (typeof cb != "function") {\n      throw new TypeError("expected a function");\n    }\n    return op_queue_microtask(() => {\n      try {\n        cb();\n      } catch (error) {\n        if (reportExceptionCallback) {\n          reportExceptionCallback(error);\n        } else {\n          throw error;\n        }\n      }\n    });\n  }\n\n  // Some "extensions" rely on "BadResource" and "Interrupted" errors in the\n  // JS code (eg. "deno_net") so they are provided in "Deno.core" but later\n  // reexported on "Deno.errors"\n  class BadResource extends Error {\n    constructor(msg) {\n      super(msg);\n      this.name = "BadResource";\n    }\n  }\n  const BadResourcePrototype = BadResource.prototype;\n\n  class Interrupted extends Error {\n    constructor(msg) {\n      super(msg);\n      this.name = "Interrupted";\n    }\n  }\n  const InterruptedPrototype = Interrupted.prototype;\n\n  registerErrorClass("BadResource"\x2C BadResource);\n  registerErrorClass("Interrupted"\x2C Interrupted);\n\n  const promiseHooks = [\n    []\x2C // init\n    []\x2C // before\n    []\x2C // after\n    []\x2C // resolve\n  ];\n\n  function setPromiseHooks(init\x2C before\x2C after\x2C resolve) {\n    const hooks = [init\x2C before\x2C after\x2C resolve];\n    for (let i = 0; i < hooks.length; i++) {\n      const hook = hooks[i];\n      // Skip if no callback was provided for this hook type.\n      if (hook == null) {\n        continue;\n      }\n      // Verify that the type of `hook` is a function.\n      if (typeof hook !== "function") {\n        throw new TypeError(`Expected function at position ${i}`);\n      }\n      // Add the hook to the list.\n      ArrayPrototypePush(promiseHooks[i]\x2C hook);\n    }\n\n    const wrappedHooks = ArrayPrototypeMap(promiseHooks\x2C (hooks) => {\n      switch (hooks.length) {\n        case 0:\n          return undefined;\n        case 1:\n          return hooks[0];\n        case 2:\n          return create2xHookWrapper(hooks[0]\x2C hooks[1]);\n        case 3:\n          return create3xHookWrapper(hooks[0]\x2C hooks[1]\x2C hooks[2]);\n        default:\n          return createHookListWrapper(hooks);\n      }\n\n      // The following functions are used to create wrapper functions that call\n      // all the hooks in a list of a certain length. The reason to use a\n      // function that creates a wrapper is to minimize the number of objects\n      // captured in the closure.\n      function create2xHookWrapper(hook1\x2C hook2) {\n        return function (promise\x2C parent) {\n          hook1(promise\x2C parent);\n          hook2(promise\x2C parent);\n        };\n      }\n      function create3xHookWrapper(hook1\x2C hook2\x2C hook3) {\n        return function (promise\x2C parent) {\n          hook1(promise\x2C parent);\n          hook2(promise\x2C parent);\n          hook3(promise\x2C parent);\n        };\n      }\n      function createHookListWrapper(hooks) {\n        return function (promise\x2C parent) {\n          for (let i = 0; i < hooks.length; i++) {\n            const hook = hooks[i];\n            hook(promise\x2C parent);\n          }\n        };\n      }\n    });\n\n    op_set_promise_hooks(\n      wrappedHooks[0]\x2C\n      wrappedHooks[1]\x2C\n      wrappedHooks[2]\x2C\n      wrappedHooks[3]\x2C\n    );\n  }\n\n  function ensureFastOps(keep) {\n    return new Proxy({}\x2C {\n      get(_target\x2C opName) {\n        const op = ops[opName];\n        if (ops[opName] === undefined) {\n          op_panic(`Unknown or disabled op '${opName}'`);\n        }\n        if (keep !== true) {\n          delete ops[opName];\n        }\n        return op;\n      }\x2C\n    });\n  }\n\n  const {\n    op_close: close\x2C\n    op_try_close: tryClose\x2C\n    op_read: read\x2C\n    op_read_all: readAll\x2C\n    op_write: write\x2C\n    op_write_all: writeAll\x2C\n    op_write_type_error: writeTypeError\x2C\n    op_read_sync: readSync\x2C\n    op_write_sync: writeSync\x2C\n    op_shutdown: shutdown\x2C\n  } = ensureFastOps(true);\n\n  const callSiteRetBuf = new Uint32Array(2);\n  const callSiteRetBufU8 = new Uint8Array(callSiteRetBuf.buffer);\n\n  function currentUserCallSite() {\n    const fileName = op_current_user_call_site(callSiteRetBufU8);\n    const lineNumber = callSiteRetBuf[0];\n    const columnNumber = callSiteRetBuf[1];\n    return { fileName\x2C lineNumber\x2C columnNumber };\n  }\n\n  const hostObjectBrand = SymbolFor("Deno.core.hostObject");\n\n  // A helper function that will bind our own console implementation\n  // with default implementation of Console from V8. This will cause\n  // console messages to be piped to inspector console.\n  //\n  // We are using `Deno.core.callConsole` binding to preserve proper stack\n  // frames in inspector console. This has to be done because V8 considers\n  // the last JS stack frame as gospel for the inspector. In our case we\n  // specifically want the latest user stack frame to be the one that matters\n  // though.\n  //\n  // Inspired by:\n  // https://github.com/nodejs/node/blob/1317252dfe8824fd9cfee125d2aaa94004db2f3b/lib/internal/util/inspector.js#L39-L61\n  function wrapConsole(customConsole\x2C consoleFromV8) {\n    const callConsole = window.Deno.core.callConsole;\n\n    const keys = ObjectKeys(consoleFromV8);\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      if (ObjectHasOwn(customConsole\x2C key)) {\n        customConsole[key] = FunctionPrototypeBind(\n          callConsole\x2C\n          customConsole\x2C\n          consoleFromV8[key]\x2C\n          customConsole[key]\x2C\n        );\n      } else {\n        // Add additional console APIs from the inspector\n        customConsole[key] = consoleFromV8[key];\n      }\n    }\n  }\n\n  // Minimal console implementation\x2C that uses `Deno.core.print` under the hood.\n  // It's not fully fledged and is meant to make debugging slightly easier when working with\n  // only `deno_core` crate.\n  class CoreConsole {\n    log = (...args) => {\n      op_print(`${consoleStringify(...args)}\\n`\x2C false);\n    };\n\n    debug = (...args) => {\n      op_print(`${consoleStringify(...args)}\\n`\x2C false);\n    };\n\n    warn = (...args) => {\n      op_print(`${consoleStringify(...args)}\\n`\x2C false);\n    };\n\n    error = (...args) => {\n      op_print(`${consoleStringify(...args)}\\n`\x2C false);\n    };\n  }\n\n  const consoleStringify = (...args) => args.map(consoleStringifyArg).join(" ");\n\n  const consoleStringifyArg = (arg) => {\n    if (\n      typeof arg === "string" || typeof arg === "boolean" ||\n      typeof arg === "number" || arg === null || arg === undefined\n    ) {\n      return arg;\n    }\n    const tag = TypedArrayPrototypeGetSymbolToStringTag(arg);\n    if (op_is_typed_array(arg)) {\n      return `${tag}(${TypedArrayPrototypeGetLength(arg)}) [${\n        TypedArrayPrototypeJoin(TypedArrayPrototypeSlice(arg\x2C 0\x2C 10)\x2C "\x2C ")\n      }]`;\n    }\n    if (tag !== undefined) {\n      tag + " " + JSON.stringify(arg\x2C undefined\x2C 2);\n    } else {\n      return JSON.stringify(arg\x2C undefined\x2C 2);\n    }\n  };\n\n  const v8Console = globalThis.console;\n  const coreConsole = new CoreConsole();\n  globalThis.console = coreConsole;\n  wrapConsole(coreConsole\x2C v8Console);\n\n  function propWritable(value) {\n    return {\n      value\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n    };\n  }\n\n  function propNonEnumerable(value) {\n    return {\n      value\x2C\n      writable: true\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n    };\n  }\n\n  function propReadOnly(value) {\n    return {\n      value\x2C\n      enumerable: true\x2C\n      writable: false\x2C\n      configurable: true\x2C\n    };\n  }\n\n  function propGetterOnly(getter) {\n    return {\n      get: getter\x2C\n      set() {}\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n    };\n  }\n\n  function propWritableLazyLoaded(getter\x2C loadFn) {\n    let valueIsSet = false;\n    let value;\n\n    return {\n      get() {\n        const loadedValue = loadFn();\n        if (valueIsSet) {\n          return value;\n        } else {\n          return getter(loadedValue);\n        }\n      }\x2C\n      set(v) {\n        loadFn();\n        valueIsSet = true;\n        value = v;\n      }\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n    };\n  }\n\n  function propNonEnumerableLazyLoaded(getter\x2C loadFn) {\n    let valueIsSet = false;\n    let value;\n\n    return {\n      get() {\n        const loadedValue = loadFn();\n        if (valueIsSet) {\n          return value;\n        } else {\n          return getter(loadedValue);\n        }\n      }\x2C\n      set(v) {\n        loadFn();\n        valueIsSet = true;\n        value = v;\n      }\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n    };\n  }\n\n  function createLazyLoader(specifier) {\n    let value;\n\n    return function lazyLoad() {\n      if (!value) {\n        value = op_lazy_load_esm(specifier);\n      }\n      return value;\n    };\n  }\n\n  // Extra Deno.core.* exports\n  const core = ObjectAssign(globalThis.Deno.core\x2C {\n    internalRidSymbol: Symbol("Deno.internal.rid")\x2C\n    ensureFastOps\x2C\n    resources\x2C\n    metrics\x2C\n    eventLoopTick\x2C\n    BadResource\x2C\n    BadResourcePrototype\x2C\n    Interrupted\x2C\n    InterruptedPrototype\x2C\n    refOpPromise\x2C\n    unrefOpPromise\x2C\n    setReportExceptionCallback\x2C\n    setPromiseHooks\x2C\n    consoleStringify\x2C\n    close\x2C\n    tryClose\x2C\n    read\x2C\n    readAll\x2C\n    write\x2C\n    writeAll\x2C\n    writeTypeError\x2C\n    readSync\x2C\n    writeSync\x2C\n    shutdown\x2C\n    print: (msg\x2C isErr) => op_print(msg\x2C isErr)\x2C\n    setOpCallTracingEnabled: (enabled) => {\n      __setOpCallTracingEnabled(enabled);\n      op_opcall_tracing_enable(enabled);\n    }\x2C\n    isOpCallTracingEnabled: () => false\x2C\n    getAllOpCallTraces: () => {\n      const traces = op_opcall_tracing_get_all();\n      return new SafeMap(traces);\n    }\x2C\n    getOpCallTraceForPromise: (promise) =>\n      op_opcall_tracing_get(promise[promiseIdSymbol])\x2C\n    setMacrotaskCallback\x2C\n    setNextTickCallback\x2C\n    runMicrotasks: () => op_run_microtasks()\x2C\n    hasTickScheduled: () => op_has_tick_scheduled()\x2C\n    setHasTickScheduled: (bool) => op_set_has_tick_scheduled(bool)\x2C\n    evalContext: (\n      source\x2C\n      specifier\x2C\n    ) => op_eval_context(source\x2C specifier)\x2C\n    hostObjectBrand\x2C\n    encode: (text) => op_encode(text)\x2C\n    encodeBinaryString: (buffer) => op_encode_binary_string(buffer)\x2C\n    decode: (buffer) => op_decode(buffer)\x2C\n    serialize: (\n      value\x2C\n      options\x2C\n      errorCallback\x2C\n    ) => op_serialize(value\x2C options\x2C errorCallback)\x2C\n    deserialize: (buffer\x2C options) => op_deserialize(buffer\x2C options)\x2C\n    getPromiseDetails: (promise) => op_get_promise_details(promise)\x2C\n    getProxyDetails: (proxy) => op_get_proxy_details(proxy)\x2C\n    isAnyArrayBuffer: (value) => op_is_any_array_buffer(value)\x2C\n    isArgumentsObject: (value) => op_is_arguments_object(value)\x2C\n    isArrayBuffer: (value) => op_is_array_buffer(value)\x2C\n    isArrayBufferView: (value) => op_is_array_buffer_view(value)\x2C\n    isAsyncFunction: (value) => op_is_async_function(value)\x2C\n    isBigIntObject: (value) => op_is_big_int_object(value)\x2C\n    isBooleanObject: (value) => op_is_boolean_object(value)\x2C\n    isBoxedPrimitive: (value) => op_is_boxed_primitive(value)\x2C\n    isDataView: (value) => op_is_data_view(value)\x2C\n    isDate: (value) => op_is_date(value)\x2C\n    isGeneratorFunction: (value) => op_is_generator_function(value)\x2C\n    isGeneratorObject: (value) => op_is_generator_object(value)\x2C\n    isMap: (value) => op_is_map(value)\x2C\n    isMapIterator: (value) => op_is_map_iterator(value)\x2C\n    isModuleNamespaceObject: (value) => op_is_module_namespace_object(value)\x2C\n    isNativeError: (value) => op_is_native_error(value)\x2C\n    isNumberObject: (value) => op_is_number_object(value)\x2C\n    isPromise: (value) => op_is_promise(value)\x2C\n    isProxy: (value) => op_is_proxy(value)\x2C\n    isRegExp: (value) => op_is_reg_exp(value)\x2C\n    isSet: (value) => op_is_set(value)\x2C\n    isSetIterator: (value) => op_is_set_iterator(value)\x2C\n    isSharedArrayBuffer: (value) => op_is_shared_array_buffer(value)\x2C\n    isStringObject: (value) => op_is_string_object(value)\x2C\n    isSymbolObject: (value) => op_is_symbol_object(value)\x2C\n    isTypedArray: (value) => op_is_typed_array(value)\x2C\n    isWeakMap: (value) => op_is_weak_map(value)\x2C\n    isWeakSet: (value) => op_is_weak_set(value)\x2C\n    memoryUsage: () => op_memory_usage()\x2C\n    setWasmStreamingCallback: (fn) => op_set_wasm_streaming_callback(fn)\x2C\n    abortWasmStreaming: (\n      rid\x2C\n      error\x2C\n    ) => op_abort_wasm_streaming(rid\x2C error)\x2C\n    destructureError: (error) => op_destructure_error(error)\x2C\n    opNames: () => op_op_names()\x2C\n    eventLoopHasMoreWork: () => op_event_loop_has_more_work()\x2C\n    byteLength: (str) => op_str_byte_length(str)\x2C\n    setHandledPromiseRejectionHandler: (handler) =>\n      op_set_handled_promise_rejection_handler(handler)\x2C\n    setUnhandledPromiseRejectionHandler: (handler) =>\n      unhandledPromiseRejectionHandler = handler\x2C\n    reportUnhandledException: (e) => op_dispatch_exception(e\x2C false)\x2C\n    reportUnhandledPromiseRejection: (e) => op_dispatch_exception(e\x2C true)\x2C\n    queueTimer: (depth\x2C repeat\x2C timeout\x2C task) =>\n      op_timer_queue(depth\x2C repeat\x2C timeout\x2C task)\x2C\n    cancelTimer: (id) => op_timer_cancel(id)\x2C\n    refTimer: (id) => op_timer_ref(id)\x2C\n    unrefTimer: (id) => op_timer_unref(id)\x2C\n    getTimerDepth: () => timerDepth\x2C\n    currentUserCallSite\x2C\n    wrapConsole\x2C\n    v8Console\x2C\n    propReadOnly\x2C\n    propWritable\x2C\n    propNonEnumerable\x2C\n    propGetterOnly\x2C\n    propWritableLazyLoaded\x2C\n    propNonEnumerableLazyLoaded\x2C\n    createLazyLoader\x2C\n    createCancelHandle: () => op_cancel_handle()\x2C\n  });\n\n  const internals = {};\n  ObjectAssign(globalThis.__bootstrap\x2C { core\x2C internals });\n  ObjectAssign(globalThis.Deno\x2C { core });\n  ObjectFreeze(globalThis.__bootstrap.core);\n\n  // Direct bindings on `globalThis`\n  ObjectAssign(globalThis\x2C { queueMicrotask });\n  setQueueMicrotask(queueMicrotask);\n})(globalThis);\n
code-source-info,0x1123fa481900,5,3044,3102,C0O3055C7O3074C10O3055C16O3101,,
tick,0x10584b374,63667,0,0x0,3,0x1123fa48185b,0x1123fa4813aa
code-creation,JS,10,63792,0x1123fa481958,10,setWasmStreamingCallback ext:core/01_core.js:672:31,0x38e60b55f3d8,~
code-source-info,0x1123fa481958,5,18649,18691,C0O18657C5O18657C9O18691,,
code-creation,JS,10,63958,0x1123fa4819a8,32,setReportExceptionCallback ext:core/01_core.js:253:38,0x38e60b55c3e0,~
code-source-info,0x1123fa4819a8,5,6525,6660,C0O6536C6O6573C16O6579C21O6573C22O6627C24O6651C31O6659,,
tick,0x1046c4000,64208,0,0x0,0,0x1123fa481895,0x1123fa4813aa
code-creation,JS,10,64375,0x1123fa481a08,47,setVersions ext:runtime/01_version.ts:9:21,0xb84525cef0,~
script-source,289,ext:runtime/01_version.ts,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\nimport { primordials } from "ext:core/mod.js";\nconst { ObjectFreeze } = primordials;\nconst version = {\n  deno: ""\x2C\n  v8: ""\x2C\n  typescript: ""\n};\nfunction setVersions(denoVersion\x2C v8Version\x2C tsVersion) {\n  version.deno = denoVersion;\n  version.v8 = v8Version;\n  version.typescript = tsVersion;\n  ObjectFreeze(version);\n}\nexport { setVersions\x2C version };\n
code-source-info,0x1123fa481a08,289,240,394,C0O280C8O293C12O310C18O321C22O336C28O355C32O370C37O383C41O370C46O393,,
code-creation,JS,10,64417,0x1123fa481a78,108,setBuildInfo ext:core/00_infra.js:61:24,0x38e60b5550b0,~
script-source,4,ext:core/00_infra.js,// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.\n"use strict";\n\n((window) => {\n  const {\n    Array\x2C\n    ArrayPrototypeFill\x2C\n    Error\x2C\n    ErrorCaptureStackTrace\x2C\n    MapPrototypeDelete\x2C\n    MapPrototypeGet\x2C\n    MapPrototypeHas\x2C\n    MapPrototypeSet\x2C\n    ObjectAssign\x2C\n    ObjectDefineProperty\x2C\n    ObjectFreeze\x2C\n    Promise\x2C\n    PromiseReject\x2C\n    PromiseResolve\x2C\n    PromisePrototypeThen\x2C\n    RangeError\x2C\n    ReferenceError\x2C\n    SafeMap\x2C\n    StringPrototypeSplit\x2C\n    SymbolFor\x2C\n    SyntaxError\x2C\n    TypeError\x2C\n    URIError\x2C\n  } = window.__bootstrap.primordials;\n\n  let nextPromiseId = 0;\n  const promiseMap = new SafeMap();\n  const RING_SIZE = 4 * 1024;\n  const NO_PROMISE = null; // Alias to null is faster than plain nulls\n  const promiseRing = ArrayPrototypeFill(new Array(RING_SIZE)\x2C NO_PROMISE);\n  // TODO(bartlomieju): it future use `v8::Private` so it's not visible\n  // to users. Currently missing bindings.\n  const promiseIdSymbol = SymbolFor("Deno.core.internalPromiseId");\n\n  let isOpCallTracingEnabled = false;\n  let submitOpCallTrace;\n  let eventLoopTick;\n\n  function __setOpCallTracingEnabled(enabled) {\n    isOpCallTracingEnabled = enabled;\n  }\n\n  function __initializeCoreMethods(eventLoopTick_\x2C submitOpCallTrace_) {\n    eventLoopTick = eventLoopTick_;\n    submitOpCallTrace = submitOpCallTrace_;\n  }\n\n  const build = {\n    target: "unknown"\x2C\n    arch: "unknown"\x2C\n    os: "unknown"\x2C\n    vendor: "unknown"\x2C\n    env: undefined\x2C\n  };\n\n  function setBuildInfo(target) {\n    const { 0: arch\x2C 1: vendor\x2C 2: os\x2C 3: env } = StringPrototypeSplit(\n      target\x2C\n      "-"\x2C\n      4\x2C\n    );\n    build.target = target;\n    build.arch = arch;\n    build.vendor = vendor;\n    build.os = os;\n    build.env = env;\n    ObjectFreeze(build);\n  }\n\n  const errorMap = {};\n  // Builtin v8 / JS errors\n  registerErrorClass("Error"\x2C Error);\n  registerErrorClass("RangeError"\x2C RangeError);\n  registerErrorClass("ReferenceError"\x2C ReferenceError);\n  registerErrorClass("SyntaxError"\x2C SyntaxError);\n  registerErrorClass("TypeError"\x2C TypeError);\n  registerErrorClass("URIError"\x2C URIError);\n\n  function buildCustomError(className\x2C message\x2C code) {\n    let error;\n    try {\n      error = errorMap[className]?.(message);\n    } catch (e) {\n      throw new Error(\n        `Unable to build custom error for "${className}"\\n  ${e.message}`\x2C\n      );\n    }\n    // Strip buildCustomError() calls from stack trace\n    if (typeof error == "object") {\n      ErrorCaptureStackTrace(error\x2C buildCustomError);\n      if (code) {\n        error.code = code;\n      }\n    }\n    return error;\n  }\n\n  function registerErrorClass(className\x2C errorClass) {\n    registerErrorBuilder(className\x2C (msg) => new errorClass(msg));\n  }\n\n  function registerErrorBuilder(className\x2C errorBuilder) {\n    if (typeof errorMap[className] !== "undefined") {\n      throw new TypeError(`Error class for "${className}" already registered`);\n    }\n    errorMap[className] = errorBuilder;\n  }\n\n  function setPromise(promiseId) {\n    const idx = promiseId % RING_SIZE;\n    // Move old promise from ring to map\n    const oldPromise = promiseRing[idx];\n    if (oldPromise !== NO_PROMISE) {\n      const oldPromiseId = promiseId - RING_SIZE;\n      MapPrototypeSet(promiseMap\x2C oldPromiseId\x2C oldPromise);\n    }\n\n    const promise = new Promise((resolve) => {\n      promiseRing[idx] = resolve;\n    });\n    const wrappedPromise = PromisePrototypeThen(\n      promise\x2C\n      unwrapOpError()\x2C\n    );\n    wrappedPromise[promiseIdSymbol] = promiseId;\n    return wrappedPromise;\n  }\n\n  function __resolvePromise(promiseId\x2C res) {\n    // Check if out of ring bounds\x2C fallback to map\n    const outOfBounds = promiseId < nextPromiseId - RING_SIZE;\n    if (outOfBounds) {\n      const promise = MapPrototypeGet(promiseMap\x2C promiseId);\n      if (!promise) {\n        throw "Missing promise in map @ " + promiseId;\n      }\n      MapPrototypeDelete(promiseMap\x2C promiseId);\n      promise(res);\n    } else {\n      // Otherwise take from ring\n      const idx = promiseId % RING_SIZE;\n      const promise = promiseRing[idx];\n      if (!promise) {\n        throw "Missing promise in ring @ " + promiseId;\n      }\n      promiseRing[idx] = NO_PROMISE;\n      promise(res);\n    }\n  }\n\n  function hasPromise(promiseId) {\n    // Check if out of ring bounds\x2C fallback to map\n    const outOfBounds = promiseId < nextPromiseId - RING_SIZE;\n    if (outOfBounds) {\n      return MapPrototypeHas(promiseMap\x2C promiseId);\n    }\n    // Otherwise check it in ring\n    const idx = promiseId % RING_SIZE;\n    return promiseRing[idx] != NO_PROMISE;\n  }\n\n  function unwrapOpError() {\n    return (res) => {\n      // .$err_class_name is a special key that should only exist on errors\n      const className = res?.$err_class_name;\n      if (!className) {\n        return res;\n      }\n\n      const errorBuilder = errorMap[className];\n      const err = errorBuilder ? errorBuilder(res.message) : new Error(\n        `Unregistered error class: "${className}"\\n  ${res.message}\\n  Classes of errors returned from ops should be registered via Deno.core.registerErrorClass().`\x2C\n      );\n      // Set .code if error was a known OS error\x2C see error_codes.rs\n      if (res.code) {\n        err.code = res.code;\n      }\n      // Strip eventLoopTick() calls from stack trace\n      ErrorCaptureStackTrace(err\x2C eventLoopTick);\n      throw err;\n    };\n  }\n\n  function setUpAsyncStub(opName\x2C originalOp) {\n    let fn;\n    // The body of this switch statement can be generated using the script above.\n    switch (originalOp.length - 1) {\n      /* BEGIN TEMPLATE setUpAsyncStub */\n      /* DO NOT MODIFY: use rebuild_async_stubs.js to regenerate */\n      case 0:\n        fn = function async_op_0() {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_0);\n            return PromiseReject(err);\n          }\n          if (isOpCallTracingEnabled) {\n            submitOpCallTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      case 1:\n        fn = function async_op_1(a) {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id\x2C a);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_1);\n            return PromiseReject(err);\n          }\n          if (isOpCallTracingEnabled) {\n            submitOpCallTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      case 2:\n        fn = function async_op_2(a\x2C b) {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id\x2C a\x2C b);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_2);\n            return PromiseReject(err);\n          }\n          if (isOpCallTracingEnabled) {\n            submitOpCallTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      case 3:\n        fn = function async_op_3(a\x2C b\x2C c) {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id\x2C a\x2C b\x2C c);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_3);\n            return PromiseReject(err);\n          }\n          if (isOpCallTracingEnabled) {\n            submitOpCallTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      case 4:\n        fn = function async_op_4(a\x2C b\x2C c\x2C d) {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id\x2C a\x2C b\x2C c\x2C d);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_4);\n            return PromiseReject(err);\n          }\n          if (isOpCallTracingEnabled) {\n            submitOpCallTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      case 5:\n        fn = function async_op_5(a\x2C b\x2C c\x2C d\x2C e) {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id\x2C a\x2C b\x2C c\x2C d\x2C e);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_5);\n            return PromiseReject(err);\n          }\n          if (isOpCallTracingEnabled) {\n            submitOpCallTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      case 6:\n        fn = function async_op_6(a\x2C b\x2C c\x2C d\x2C e\x2C f) {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id\x2C a\x2C b\x2C c\x2C d\x2C e\x2C f);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_6);\n            return PromiseReject(err);\n          }\n          if (isOpCallTracingEnabled) {\n            submitOpCallTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      case 7:\n        fn = function async_op_7(a\x2C b\x2C c\x2C d\x2C e\x2C f\x2C g) {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id\x2C a\x2C b\x2C c\x2C d\x2C e\x2C f\x2C g);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_7);\n            return PromiseReject(err);\n          }\n          if (isOpCallTracingEnabled) {\n            submitOpCallTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      case 8:\n        fn = function async_op_8(a\x2C b\x2C c\x2C d\x2C e\x2C f\x2C g\x2C h) {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id\x2C a\x2C b\x2C c\x2C d\x2C e\x2C f\x2C g\x2C h);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_8);\n            return PromiseReject(err);\n          }\n          if (isOpCallTracingEnabled) {\n            submitOpCallTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      case 9:\n        fn = function async_op_9(a\x2C b\x2C c\x2C d\x2C e\x2C f\x2C g\x2C h\x2C i) {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id\x2C a\x2C b\x2C c\x2C d\x2C e\x2C f\x2C g\x2C h\x2C i);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_9);\n            return PromiseReject(err);\n          }\n          if (isOpCallTracingEnabled) {\n            submitOpCallTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      /* END TEMPLATE */\n\n      default:\n        throw new Error(\n          `Too many arguments for async op codegen (length of ${opName} was ${\n            originalOp.length - 1\n          })`\x2C\n        );\n    }\n    ObjectDefineProperty(fn\x2C "name"\x2C {\n      value: opName\x2C\n      configurable: false\x2C\n      writable: false\x2C\n    });\n    return fn;\n  }\n\n  // Extra Deno.core.* exports\n  const core = ObjectAssign(globalThis.Deno.core\x2C {\n    build\x2C\n    setBuildInfo\x2C\n    registerErrorBuilder\x2C\n    buildCustomError\x2C\n    registerErrorClass\x2C\n    setUpAsyncStub\x2C\n    hasPromise\x2C\n    promiseIdSymbol\x2C\n    __resolvePromise\x2C\n    __setOpCallTracingEnabled\x2C\n    __initializeCoreMethods\x2C\n  });\n\n  ObjectAssign(globalThis.__bootstrap\x2C { core });\n  ObjectAssign(globalThis.Deno\x2C { core });\n})(globalThis);\n
code-source-info,0x1123fa481a78,4,1500,1769,C0O1561C14O1561C22O1526C29O1535C36O1546C43O1553C47O1628C54O1641C58O1655C63O1666C67O1678C72O1691C76O1705C81O1714C85O1724C90O1734C94O1745C102O1745C107O1768,,
code-creation,JS,10,65208,0x1123fa481b28,295,initialize ext:deno_node/02_init.js:13:20,0x9cf11a81a18,~
script-source,56,ext:deno_node/02_init.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\n// deno-lint-ignore-file\n\nimport { internals } from "ext:core/mod.js";\nconst requireImpl = internals.requireImpl;\n\nimport { nodeGlobals } from "ext:deno_node/00_globals.js";\nimport "node:module";\n\nlet initialized = false;\n\nfunction initialize(\n  usesLocalNodeModulesDir\x2C\n  argv0\x2C\n) {\n  if (initialized) {\n    throw Error("Node runtime already initialized");\n  }\n  initialized = true;\n  if (usesLocalNodeModulesDir) {\n    requireImpl.setUsesLocalNodeModulesDir();\n  }\n  const nativeModuleExports = requireImpl.nativeModuleExports;\n  nodeGlobals.Buffer = nativeModuleExports["buffer"].Buffer;\n  nodeGlobals.clearImmediate = nativeModuleExports["timers"].clearImmediate;\n  nodeGlobals.clearInterval = nativeModuleExports["timers"].clearInterval;\n  nodeGlobals.clearTimeout = nativeModuleExports["timers"].clearTimeout;\n  nodeGlobals.console = nativeModuleExports["console"];\n  nodeGlobals.global = globalThis;\n  nodeGlobals.process = nativeModuleExports["process"];\n  nodeGlobals.setImmediate = nativeModuleExports["timers"].setImmediate;\n  nodeGlobals.setInterval = nativeModuleExports["timers"].setInterval;\n  nodeGlobals.setTimeout = nativeModuleExports["timers"].setTimeout;\n  nodeGlobals.performance = nativeModuleExports["perf_hooks"].performance;\n\n  // FIXME(bartlomieju): not nice to depend on `Deno` namespace here\n  // but it's the only way to get `args` and `version` and this point.\n  internals.__bootstrapNodeProcess(argv0\x2C Deno.args\x2C Deno.version);\n  internals.__initWorkerThreads();\n  internals.__setupChildProcessIpcChannel();\n  // `Deno[Deno.internal].requireImpl` will be unreachable after this line.\n  delete internals.requireImpl;\n}\n\nfunction loadCjsModule(moduleName\x2C isMain\x2C inspectBrk) {\n  if (inspectBrk) {\n    requireImpl.setInspectBrk();\n  }\n  requireImpl.Module._load(moduleName\x2C null\x2C { main: isMain });\n}\n\nglobalThis.nodeBootstrap = initialize;\n\ninternals.node = {\n  initialize\x2C\n  loadCjsModule\x2C\n};\n
code-source-info,0x1123fa481b28,56,318,1725,C0O362C6O385C13O391C17O385C18O440C19O452C21O462C25O497C30O509C35O509C39O573C44O585C49O608C55O648C60O659C64O627C68O669C72O717C77O728C81O696C85O746C89O793C94O804C98O772C102O821C106O867C111O878C115O846C119O894C123O935C127O914C131O950C135O971C138O969C142O985C146O1026C150O1005C154O1041C158O1087C163O1098C167O1066C171O1114C175O1159C180O1170C184O1138C188O1185C192O1229C197O1240C201O1208C205O1254C209O1299C214O1314C218O1278C222O1470C228O1480C233O1510C237O1515C242O1521C246O1526C254O1480C259O1538C263O1548C268O1548C272O1573C276O1583C281O1583C285O1694C294O1724,,
new,MemoryChunk,0x91c84d40000,262144
code-creation,JS,10,65333,0x1123fa481c90,12,setUsesLocalNodeModulesDir node:module:879:30,0x9cf11a91270,~
script-source,57,node:module,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// deno-lint-ignore-file\nimport { core\x2C internals\x2C primordials } from "ext:core/mod.js";\nimport { op_napi_open\x2C op_require_as_file_path\x2C op_require_break_on_next_statement\x2C op_require_init_paths\x2C op_require_is_deno_dir_package\x2C op_require_is_request_relative\x2C op_require_node_module_paths\x2C op_require_package_imports_resolve\x2C op_require_path_basename\x2C op_require_path_dirname\x2C op_require_path_is_absolute\x2C op_require_path_resolve\x2C op_require_proxy_path\x2C op_require_read_closest_package_json\x2C op_require_read_file\x2C op_require_read_package_scope\x2C op_require_real_path\x2C op_require_resolve_deno_dir\x2C op_require_resolve_exports\x2C op_require_resolve_lookup_paths\x2C op_require_stat\x2C op_require_try_self\x2C op_require_try_self_parent_path } from "ext:core/ops";\nconst { ArrayIsArray\x2C ArrayPrototypeIncludes\x2C ArrayPrototypeIndexOf\x2C ArrayPrototypeJoin\x2C ArrayPrototypePush\x2C ArrayPrototypeSlice\x2C ArrayPrototypeSplice\x2C Error\x2C JSONParse\x2C ObjectCreate\x2C ObjectEntries\x2C ObjectGetOwnPropertyDescriptor\x2C ObjectGetPrototypeOf\x2C ObjectHasOwn\x2C ObjectKeys\x2C ObjectPrototype\x2C ObjectSetPrototypeOf\x2C Proxy\x2C RegExpPrototypeTest\x2C SafeArrayIterator\x2C SafeMap\x2C SafeWeakMap\x2C String\x2C StringPrototypeCharCodeAt\x2C StringPrototypeEndsWith\x2C StringPrototypeIncludes\x2C StringPrototypeIndexOf\x2C StringPrototypeMatch\x2C StringPrototypeSlice\x2C StringPrototypeSplit\x2C StringPrototypeStartsWith\x2C TypeError } = primordials;\nimport { nodeGlobals } from "ext:deno_node/00_globals.js";\nimport _httpAgent from "ext:deno_node/_http_agent.mjs";\nimport _httpOutgoing from "ext:deno_node/_http_outgoing.ts";\nimport _streamDuplex from "ext:deno_node/internal/streams/duplex.mjs";\nimport _streamPassthrough from "ext:deno_node/internal/streams/passthrough.mjs";\nimport _streamReadable from "ext:deno_node/internal/streams/readable.mjs";\nimport _streamTransform from "ext:deno_node/internal/streams/transform.mjs";\nimport _streamWritable from "ext:deno_node/internal/streams/writable.mjs";\nimport assert from "node:assert";\nimport assertStrict from "node:assert/strict";\nimport asyncHooks from "node:async_hooks";\nimport buffer from "node:buffer";\nimport childProcess from "node:child_process";\nimport cluster from "node:cluster";\nimport console from "node:console";\nimport constants from "node:constants";\nimport crypto from "node:crypto";\nimport dgram from "node:dgram";\nimport diagnosticsChannel from "node:diagnostics_channel";\nimport dns from "node:dns";\nimport dnsPromises from "node:dns/promises";\nimport domain from "node:domain";\nimport events from "node:events";\nimport fs from "node:fs";\nimport fsPromises from "node:fs/promises";\nimport http from "node:http";\nimport http2 from "node:http2";\nimport https from "node:https";\nimport inspector from "ext:deno_node/inspector.ts";\nimport internalCp from "ext:deno_node/internal/child_process.ts";\nimport internalCryptoCertificate from "ext:deno_node/internal/crypto/certificate.ts";\nimport internalCryptoCipher from "ext:deno_node/internal/crypto/cipher.ts";\nimport internalCryptoDiffiehellman from "ext:deno_node/internal/crypto/diffiehellman.ts";\nimport internalCryptoHash from "ext:deno_node/internal/crypto/hash.ts";\nimport internalCryptoHkdf from "ext:deno_node/internal/crypto/hkdf.ts";\nimport internalCryptoKeygen from "ext:deno_node/internal/crypto/keygen.ts";\nimport internalCryptoKeys from "ext:deno_node/internal/crypto/keys.ts";\nimport internalCryptoPbkdf2 from "ext:deno_node/internal/crypto/pbkdf2.ts";\nimport internalCryptoRandom from "ext:deno_node/internal/crypto/random.ts";\nimport internalCryptoScrypt from "ext:deno_node/internal/crypto/scrypt.ts";\nimport internalCryptoSig from "ext:deno_node/internal/crypto/sig.ts";\nimport internalCryptoUtil from "ext:deno_node/internal/crypto/util.ts";\nimport internalCryptoX509 from "ext:deno_node/internal/crypto/x509.ts";\nimport internalDgram from "ext:deno_node/internal/dgram.ts";\nimport internalDnsPromises from "ext:deno_node/internal/dns/promises.ts";\nimport internalErrors from "ext:deno_node/internal/errors.ts";\nimport internalEventTarget from "ext:deno_node/internal/event_target.mjs";\nimport internalFsUtils from "ext:deno_node/internal/fs/utils.mjs";\nimport internalHttp from "ext:deno_node/internal/http.ts";\nimport internalReadlineUtils from "ext:deno_node/internal/readline/utils.mjs";\nimport internalStreamsAddAbortSignal from "ext:deno_node/internal/streams/add-abort-signal.mjs";\nimport internalStreamsBufferList from "ext:deno_node/internal/streams/buffer_list.mjs";\nimport internalStreamsLazyTransform from "ext:deno_node/internal/streams/lazy_transform.mjs";\nimport internalStreamsState from "ext:deno_node/internal/streams/state.mjs";\nimport internalTestBinding from "ext:deno_node/internal/test/binding.ts";\nimport internalTimers from "ext:deno_node/internal/timers.mjs";\nimport internalUtil from "ext:deno_node/internal/util.mjs";\nimport internalUtilInspect from "ext:deno_node/internal/util/inspect.mjs";\nimport net from "node:net";\nimport os from "node:os";\nimport pathPosix from "node:path/posix";\nimport pathWin32 from "node:path/win32";\nimport path from "node:path";\nimport perfHooks from "node:perf_hooks";\nimport punycode from "node:punycode";\nimport process from "node:process";\nimport querystring from "node:querystring";\nimport readline from "node:readline";\nimport readlinePromises from "ext:deno_node/readline/promises.ts";\nimport repl from "node:repl";\nimport stream from "node:stream";\nimport streamConsumers from "node:stream/consumers";\nimport streamPromises from "node:stream/promises";\nimport streamWeb from "node:stream/web";\nimport stringDecoder from "node:string_decoder";\nimport sys from "node:sys";\nimport test from "node:test";\nimport timers from "node:timers";\nimport timersPromises from "node:timers/promises";\nimport tls from "node:tls";\nimport tty from "node:tty";\nimport url from "node:url";\nimport utilTypes from "node:util/types";\nimport util from "node:util";\nimport v8 from "node:v8";\nimport vm from "node:vm";\nimport workerThreads from "node:worker_threads";\nimport wasi from "ext:deno_node/wasi.ts";\nimport zlib from "node:zlib";\nconst nativeModuleExports = ObjectCreate(null);\nconst builtinModules = [];\n// NOTE(bartlomieju): keep this list in sync with `ext/node/polyfill.rs`\nfunction setupBuiltinModules() {\n  const nodeModules = {\n    "_http_agent": _httpAgent\x2C\n    "_http_outgoing": _httpOutgoing\x2C\n    "_stream_duplex": _streamDuplex\x2C\n    "_stream_passthrough": _streamPassthrough\x2C\n    "_stream_readable": _streamReadable\x2C\n    "_stream_transform": _streamTransform\x2C\n    "_stream_writable": _streamWritable\x2C\n    assert\x2C\n    "assert/strict": assertStrict\x2C\n    "async_hooks": asyncHooks\x2C\n    buffer\x2C\n    crypto\x2C\n    console\x2C\n    constants\x2C\n    child_process: childProcess\x2C\n    cluster\x2C\n    dgram\x2C\n    diagnostics_channel: diagnosticsChannel\x2C\n    dns\x2C\n    "dns/promises": dnsPromises\x2C\n    domain\x2C\n    events\x2C\n    fs\x2C\n    "fs/promises": fsPromises\x2C\n    http\x2C\n    http2\x2C\n    https\x2C\n    inspector\x2C\n    "internal/child_process": internalCp\x2C\n    "internal/crypto/certificate": internalCryptoCertificate\x2C\n    "internal/crypto/cipher": internalCryptoCipher\x2C\n    "internal/crypto/diffiehellman": internalCryptoDiffiehellman\x2C\n    "internal/crypto/hash": internalCryptoHash\x2C\n    "internal/crypto/hkdf": internalCryptoHkdf\x2C\n    "internal/crypto/keygen": internalCryptoKeygen\x2C\n    "internal/crypto/keys": internalCryptoKeys\x2C\n    "internal/crypto/pbkdf2": internalCryptoPbkdf2\x2C\n    "internal/crypto/random": internalCryptoRandom\x2C\n    "internal/crypto/scrypt": internalCryptoScrypt\x2C\n    "internal/crypto/sig": internalCryptoSig\x2C\n    "internal/crypto/util": internalCryptoUtil\x2C\n    "internal/crypto/x509": internalCryptoX509\x2C\n    "internal/dgram": internalDgram\x2C\n    "internal/dns/promises": internalDnsPromises\x2C\n    "internal/errors": internalErrors\x2C\n    "internal/event_target": internalEventTarget\x2C\n    "internal/fs/utils": internalFsUtils\x2C\n    "internal/http": internalHttp\x2C\n    "internal/readline/utils": internalReadlineUtils\x2C\n    "internal/streams/add-abort-signal": internalStreamsAddAbortSignal\x2C\n    "internal/streams/buffer_list": internalStreamsBufferList\x2C\n    "internal/streams/lazy_transform": internalStreamsLazyTransform\x2C\n    "internal/streams/state": internalStreamsState\x2C\n    "internal/test/binding": internalTestBinding\x2C\n    "internal/timers": internalTimers\x2C\n    "internal/util/inspect": internalUtilInspect\x2C\n    "internal/util": internalUtil\x2C\n    net\x2C\n    os\x2C\n    "path/posix": pathPosix\x2C\n    "path/win32": pathWin32\x2C\n    path\x2C\n    perf_hooks: perfHooks\x2C\n    process\x2C\n    get punycode () {\n      process.emitWarning("The `punycode` module is deprecated. Please use a userland " + "alternative instead."\x2C "DeprecationWarning"\x2C "DEP0040");\n      return punycode;\n    }\x2C\n    querystring\x2C\n    readline\x2C\n    "readline/promises": readlinePromises\x2C\n    repl\x2C\n    stream\x2C\n    "stream/consumers": streamConsumers\x2C\n    "stream/promises": streamPromises\x2C\n    "stream/web": streamWeb\x2C\n    string_decoder: stringDecoder\x2C\n    sys\x2C\n    test\x2C\n    timers\x2C\n    "timers/promises": timersPromises\x2C\n    tls\x2C\n    tty\x2C\n    url\x2C\n    util\x2C\n    "util/types": utilTypes\x2C\n    v8\x2C\n    vm\x2C\n    wasi\x2C\n    worker_threads: workerThreads\x2C\n    zlib\n  };\n  for (const [name\x2C moduleExports] of ObjectEntries(nodeModules)){\n    nativeModuleExports[name] = moduleExports;\n    ArrayPrototypePush(builtinModules\x2C name);\n  }\n}\nsetupBuiltinModules();\n// Map used to store CJS parsing data.\nconst cjsParseCache = new SafeWeakMap();\nfunction pathDirname(filepath) {\n  if (filepath == null) {\n    throw new Error("Empty filepath.");\n  } else if (filepath === "") {\n    return ".";\n  }\n  return op_require_path_dirname(filepath);\n}\nfunction pathResolve(...args) {\n  return op_require_path_resolve(args);\n}\nconst nativeModulePolyfill = new SafeMap();\nconst relativeResolveCache = ObjectCreate(null);\nlet requireDepth = 0;\nlet statCache = null;\nlet isPreloading = false;\nlet mainModule = null;\nlet hasBrokenOnInspectBrk = false;\nlet hasInspectBrk = false;\n// Are we running with --node-modules-dir flag?\nlet usesLocalNodeModulesDir = false;\nfunction stat(filename) {\n  // TODO: required only on windows\n  // filename = path.toNamespacedPath(filename);\n  if (statCache !== null) {\n    const result = statCache.get(filename);\n    if (result !== undefined) {\n      return result;\n    }\n  }\n  const result = op_require_stat(filename);\n  if (statCache !== null && result >= 0) {\n    statCache.set(filename\x2C result);\n  }\n  return result;\n}\nfunction updateChildren(parent\x2C child\x2C scan) {\n  if (!parent) {\n    return;\n  }\n  const children = parent.children;\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child))) {\n    ArrayPrototypePush(children\x2C child);\n  }\n}\nfunction tryFile(requestPath\x2C _isMain) {\n  const rc = stat(requestPath);\n  if (rc !== 0) return;\n  return toRealPath(requestPath);\n}\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\n  const packageJsonPath = pathResolve(requestPath\x2C "package.json");\n  const pkg = op_require_read_package_scope(packageJsonPath)?.main;\n  if (!pkg) {\n    return tryExtensions(pathResolve(requestPath\x2C "index")\x2C exts\x2C isMain);\n  }\n  const filename = pathResolve(requestPath\x2C pkg);\n  let actual = tryFile(filename\x2C isMain) || tryExtensions(filename\x2C exts\x2C isMain) || tryExtensions(pathResolve(filename\x2C "index")\x2C exts\x2C isMain);\n  if (actual === false) {\n    actual = tryExtensions(pathResolve(requestPath\x2C "index")\x2C exts\x2C isMain);\n    if (!actual) {\n      // eslint-disable-next-line no-restricted-syntax\n      const err = new Error(`Cannot find module '${filename}'. ` + 'Please verify that the package.json has a valid "main" entry');\n      err.code = "MODULE_NOT_FOUND";\n      err.path = pathResolve(requestPath\x2C "package.json");\n      err.requestPath = originalPath;\n      throw err;\n    } else {\n      process.emitWarning(`Invalid 'main' field in '${packageJsonPath}' of '${pkg}'. ` + "Please either fix that or report it to the module author"\x2C "DeprecationWarning"\x2C "DEP0128");\n    }\n  }\n  return actual;\n}\nconst realpathCache = new SafeMap();\nfunction toRealPath(requestPath) {\n  const maybeCached = realpathCache.get(requestPath);\n  if (maybeCached) {\n    return maybeCached;\n  }\n  const rp = op_require_real_path(requestPath);\n  realpathCache.set(requestPath\x2C rp);\n  return rp;\n}\nfunction tryExtensions(p\x2C exts\x2C isMain) {\n  for(let i = 0; i < exts.length; i++){\n    const filename = tryFile(p + exts[i]\x2C isMain);\n    if (filename) {\n      return filename;\n    }\n  }\n  return false;\n}\n// Find the longest (possibly multi-dot) extension registered in\n// Module._extensions\nfunction findLongestRegisteredExtension(filename) {\n  const name = op_require_path_basename(filename);\n  let currentExtension;\n  let index;\n  let startIndex = 0;\n  while((index = StringPrototypeIndexOf(name\x2C "."\x2C startIndex)) !== -1){\n    startIndex = index + 1;\n    if (index === 0) continue; // Skip dotfiles like .gitignore\n    currentExtension = StringPrototypeSlice(name\x2C index);\n    if (Module._extensions[currentExtension]) {\n      return currentExtension;\n    }\n  }\n  return ".js";\n}\nfunction getExportsForCircularRequire(module) {\n  if (module.exports && ObjectGetPrototypeOf(module.exports) === ObjectPrototype && // Exclude transpiled ES6 modules / TypeScript code because those may\n  // employ unusual patterns for accessing 'module.exports'. That should\n  // be okay because ES6 modules have a different approach to circular\n  // dependencies anyway.\n  !module.exports.__esModule) {\n    // This is later unset once the module is done loading.\n    ObjectSetPrototypeOf(module.exports\x2C CircularRequirePrototypeWarningProxy);\n  }\n  return module.exports;\n}\nfunction emitCircularRequireWarning(prop) {\n  process.emitWarning(`Accessing non-existent property '${String(prop)}' of module exports ` + "inside circular dependency");\n}\n// A Proxy that can be used as the prototype of a module.exports object and\n// warns when non-existent properties are accessed.\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\n  get (target\x2C prop) {\n    // Allow __esModule access in any case because it is used in the output\n    // of transpiled code to determine whether something comes from an\n    // ES module\x2C and is not used as a regular key of `module.exports`.\n    if (prop in target || prop === "__esModule") return target[prop];\n    emitCircularRequireWarning(prop);\n    return undefined;\n  }\x2C\n  getOwnPropertyDescriptor (target\x2C prop) {\n    if (ObjectHasOwn(target\x2C prop) || prop === "__esModule") {\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\n    }\n    emitCircularRequireWarning(prop);\n    return undefined;\n  }\n});\nconst moduleParentCache = new SafeWeakMap();\nfunction Module(id = ""\x2C parent) {\n  this.id = id;\n  this.path = pathDirname(id);\n  this.exports = {};\n  moduleParentCache.set(this\x2C parent);\n  updateChildren(parent\x2C this\x2C false);\n  this.filename = null;\n  this.loaded = false;\n  this.children = [];\n}\nModule.builtinModules = builtinModules;\nModule._extensions = ObjectCreate(null);\nModule._cache = ObjectCreate(null);\nModule._pathCache = ObjectCreate(null);\nlet modulePaths = [];\nModule.globalPaths = modulePaths;\nconst CHAR_FORWARD_SLASH = 47;\nconst TRAILING_SLASH_REGEX = /(?:^|\\/)\\.?\\.$/;\nconst encodedSepRegEx = /%2F|%2C/i;\nfunction finalizeEsmResolution(resolved\x2C parentPath\x2C pkgPath) {\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved)) {\n    throw new ERR_INVALID_MODULE_SPECIFIER(resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\n  }\n  // const filename = fileURLToPath(resolved);\n  const filename = resolved;\n  const actual = tryFile(filename\x2C false);\n  if (actual) {\n    return actual;\n  }\n  throw new ERR_MODULE_NOT_FOUND(filename\x2C path.resolve(pkgPath\x2C "package.json"));\n}\n// This only applies to requests of a specific form:\n// 1. name/.*\n// 2. @scope/name/.*\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\nfunction resolveExports(modulesPath\x2C request\x2C parentPath\x2C usesLocalNodeModulesDir) {\n  // The implementation's behavior is meant to mirror resolution in ESM.\n  const [\x2C name\x2C expansion = ""] = StringPrototypeMatch(request\x2C EXPORTS_PATTERN) || [];\n  if (!name) {\n    return;\n  }\n  if (!parentPath) {\n    return false;\n  }\n  return op_require_resolve_exports(usesLocalNodeModulesDir\x2C modulesPath\x2C request\x2C name\x2C expansion\x2C parentPath) ?? false;\n}\nModule._findPath = function(request\x2C paths\x2C isMain\x2C parentPath) {\n  const absoluteRequest = op_require_path_is_absolute(request);\n  if (absoluteRequest) {\n    paths = [\n      ""\n    ];\n  } else if (!paths || paths.length === 0) {\n    return false;\n  }\n  const cacheKey = request + "\\x00" + ArrayPrototypeJoin(paths\x2C "\\x00");\n  const entry = Module._pathCache[cacheKey];\n  if (entry) {\n    return entry;\n  }\n  let exts;\n  let trailingSlash = request.length > 0 && StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_FORWARD_SLASH;\n  if (!trailingSlash) {\n    trailingSlash = RegExpPrototypeTest(TRAILING_SLASH_REGEX\x2C request);\n  }\n  // For each path\n  for(let i = 0; i < paths.length; i++){\n    // Don't search further if path doesn't exist\n    const curPath = paths[i];\n    if (curPath && stat(curPath) < 1) continue;\n    if (!absoluteRequest) {\n      const exportsResolved = resolveExports(curPath\x2C request\x2C parentPath\x2C usesLocalNodeModulesDir);\n      if (exportsResolved) {\n        return exportsResolved;\n      }\n    }\n    let basePath;\n    if (usesLocalNodeModulesDir) {\n      basePath = pathResolve(curPath\x2C request);\n    } else {\n      const isDenoDirPackage = op_require_is_deno_dir_package(curPath);\n      const isRelative = op_require_is_request_relative(request);\n      basePath = isDenoDirPackage && !isRelative ? pathResolve(curPath\x2C packageSpecifierSubPath(request)) : pathResolve(curPath\x2C request);\n    }\n    let filename;\n    const rc = stat(basePath);\n    if (!trailingSlash) {\n      if (rc === 0) {\n        filename = toRealPath(basePath);\n      }\n      if (!filename) {\n        // Try it with each of the extensions\n        if (exts === undefined) {\n          exts = ObjectKeys(Module._extensions);\n        }\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\n      }\n    }\n    if (!filename && rc === 1) {\n      // try it with each of the extensions at "index"\n      if (exts === undefined) {\n        exts = ObjectKeys(Module._extensions);\n      }\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\n    }\n    if (filename) {\n      Module._pathCache[cacheKey] = filename;\n      return filename;\n    }\n  }\n  return false;\n};\n/**\n * Get a list of potential module directories\n * @param {string} fromPath The directory name of the module\n * @returns {string[]} List of module directories\n */ Module._nodeModulePaths = function(fromPath) {\n  return op_require_node_module_paths(fromPath);\n};\nModule._resolveLookupPaths = function(request\x2C parent) {\n  const paths = [];\n  if (op_require_is_request_relative(request)) {\n    ArrayPrototypePush(paths\x2C parent?.filename ? op_require_path_dirname(parent.filename) : ".");\n    return paths;\n  }\n  if (!usesLocalNodeModulesDir && parent?.filename && parent.filename.length > 0) {\n    const denoDirPath = op_require_resolve_deno_dir(request\x2C parent.filename);\n    if (denoDirPath) {\n      ArrayPrototypePush(paths\x2C denoDirPath);\n    }\n  }\n  const lookupPathsResult = op_require_resolve_lookup_paths(request\x2C parent?.paths\x2C parent?.filename ?? "");\n  if (lookupPathsResult) {\n    ArrayPrototypePush(paths\x2C ...new SafeArrayIterator(lookupPathsResult));\n  }\n  return paths;\n};\nModule._load = function(request\x2C parent\x2C isMain) {\n  let relResolveCacheIdentifier;\n  if (parent) {\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\n    // caching is required to allow cache invalidation without changing the old\n    // cache key names.\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\n    if (filename !== undefined) {\n      const cachedModule = Module._cache[filename];\n      if (cachedModule !== undefined) {\n        updateChildren(parent\x2C cachedModule\x2C true);\n        if (!cachedModule.loaded) {\n          return getExportsForCircularRequire(cachedModule);\n        }\n        return cachedModule.exports;\n      }\n      delete relativeResolveCache[relResolveCacheIdentifier];\n    }\n  }\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\n  if (StringPrototypeStartsWith(filename\x2C "node:")) {\n    // Slice 'node:' prefix\n    const id = StringPrototypeSlice(filename\x2C 5);\n    const module = loadNativeModule(id\x2C id);\n    if (!module) {\n      // TODO:\n      // throw new ERR_UNKNOWN_BUILTIN_MODULE(filename);\n      throw new Error("Unknown built-in module");\n    }\n    return module.exports;\n  }\n  const cachedModule = Module._cache[filename];\n  if (cachedModule !== undefined) {\n    updateChildren(parent\x2C cachedModule\x2C true);\n    if (!cachedModule.loaded) {\n      return getExportsForCircularRequire(cachedModule);\n    }\n    return cachedModule.exports;\n  }\n  const mod = loadNativeModule(filename\x2C request);\n  if (mod) {\n    return mod.exports;\n  }\n  // Don't call updateChildren()\x2C Module constructor already does.\n  const module = cachedModule || new Module(filename\x2C parent);\n  if (isMain) {\n    process.mainModule = module;\n    mainModule = module;\n    module.id = ".";\n  }\n  Module._cache[filename] = module;\n  if (parent !== undefined) {\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\n  }\n  let threw = true;\n  try {\n    module.load(filename);\n    threw = false;\n  } finally{\n    if (threw) {\n      delete Module._cache[filename];\n      if (parent !== undefined) {\n        delete relativeResolveCache[relResolveCacheIdentifier];\n        const children = parent?.children;\n        if (ArrayIsArray(children)) {\n          const index = ArrayPrototypeIndexOf(children\x2C module);\n          if (index !== -1) {\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\n          }\n        }\n      }\n    } else if (module.exports && ObjectGetPrototypeOf(module.exports) === CircularRequirePrototypeWarningProxy) {\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\n    }\n  }\n  return module.exports;\n};\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\n  if (StringPrototypeStartsWith(request\x2C "node:") || nativeModuleCanBeRequiredByUsers(request)) {\n    return request;\n  }\n  let paths;\n  if (typeof options === "object" && options !== null) {\n    if (ArrayIsArray(options.paths)) {\n      const isRelative = op_require_is_request_relative(request);\n      if (isRelative) {\n        paths = options.paths;\n      } else {\n        const fakeParent = new Module(""\x2C null);\n        paths = [];\n        for(let i = 0; i < options.paths.length; i++){\n          const path = options.paths[i];\n          fakeParent.paths = Module._nodeModulePaths(path);\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\n          for(let j = 0; j < lookupPaths.length; j++){\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j])) {\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\n            }\n          }\n        }\n      }\n    } else if (options.paths === undefined) {\n      paths = Module._resolveLookupPaths(request\x2C parent);\n    } else {\n      // TODO:\n      // throw new ERR_INVALID_ARG_VALUE("options.paths"\x2C options.paths);\n      throw new Error("Invalid arg value options.paths"\x2C options.path);\n    }\n  } else {\n    paths = Module._resolveLookupPaths(request\x2C parent);\n  }\n  if (parent?.filename) {\n    if (request[0] === "#") {\n      const maybeResolved = op_require_package_imports_resolve(parent.filename\x2C request);\n      if (maybeResolved) {\n        return maybeResolved;\n      }\n    }\n  }\n  // Try module self resolution first\n  const parentPath = op_require_try_self_parent_path(!!parent\x2C parent?.filename\x2C parent?.id);\n  const selfResolved = op_require_try_self(parentPath\x2C request);\n  if (selfResolved) {\n    const cacheKey = request + "\\x00" + (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C "\\x00"));\n    Module._pathCache[cacheKey] = selfResolved;\n    return selfResolved;\n  }\n  // Look up the filename first\x2C since that's the cache key.\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C parentPath);\n  if (filename) {\n    return op_require_real_path(filename);\n  }\n  const requireStack = [];\n  for(let cursor = parent; cursor; cursor = moduleParentCache.get(cursor)){\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\n  }\n  let message = `Cannot find module '${request}'`;\n  if (requireStack.length > 0) {\n    message = message + "\\nRequire stack:\\n- " + ArrayPrototypeJoin(requireStack\x2C "\\n- ");\n  }\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  err.code = "MODULE_NOT_FOUND";\n  err.requireStack = requireStack;\n  throw err;\n};\n/**\n * Internal CommonJS API to always require modules before requiring the actual\n * one when calling `require("my-module")`. This is used by require hooks such\n * as `ts-node/register`.\n * @param {string[]} requests List of modules to preload\n */ Module._preloadModules = function(requests) {\n  if (!ArrayIsArray(requests) || requests.length === 0) {\n    return;\n  }\n  const parent = new Module("internal/preload"\x2C null);\n  // All requested files must be resolved against cwd\n  parent.paths = Module._nodeModulePaths(process.cwd());\n  for(let i = 0; i < requests.length; i++){\n    parent.require(requests[i]);\n  }\n};\nModule.prototype.load = function(filename) {\n  if (this.loaded) {\n    throw Error("Module already loaded");\n  }\n  // Canonicalize the path so it's not pointing to the symlinked directory\n  // in `node_modules` directory of the referrer.\n  this.filename = op_require_real_path(filename);\n  this.paths = Module._nodeModulePaths(pathDirname(this.filename));\n  const extension = findLongestRegisteredExtension(filename);\n  // allow .mjs to be overridden\n  if (StringPrototypeEndsWith(filename\x2C ".mjs") && !Module._extensions[".mjs"]) {\n    throw createRequireEsmError(filename\x2C moduleParentCache.get(this)?.filename);\n  }\n  Module._extensions[extension](this\x2C this.filename);\n  this.loaded = true;\n// TODO: do caching\n};\n// Loads a module at the given file path. Returns that module's\n// `exports` property.\nModule.prototype.require = function(id) {\n  if (typeof id !== "string") {\n    // TODO(bartlomieju): it should use different error type\n    // ("ERR_INVALID_ARG_VALUE")\n    throw new TypeError("Invalid argument type");\n  }\n  if (id === "") {\n    // TODO(bartlomieju): it should use different error type\n    // ("ERR_INVALID_ARG_VALUE")\n    throw new TypeError("id must be non empty");\n  }\n  requireDepth++;\n  try {\n    return Module._load(id\x2C this\x2C /* isMain */ false);\n  } finally{\n    requireDepth--;\n  }\n};\n// The module wrapper looks slightly different to Node. Instead of using one\n// wrapper function\x2C we use two. The first one exists to performance optimize\n// access to magic node globals\x2C like `Buffer` or `process`. The second one\n// is the actual wrapper function we run the users code in.\n// The only observable difference is that in Deno `arguments.callee` is not\n// null.\nModule.wrapper = [\n  "(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname\x2C Buffer\x2C clearImmediate\x2C clearInterval\x2C clearTimeout\x2C console\x2C global\x2C process\x2C setImmediate\x2C setInterval\x2C setTimeout\x2C performance) { (function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) {"\x2C\n  "\\n}).call(this\x2C exports\x2C require\x2C module\x2C __filename\x2C __dirname); })"\n];\nModule.wrap = function(script) {\n  script = script.replace(/^#!.*?\\n/\x2C "");\n  return `${Module.wrapper[0]}${script}${Module.wrapper[1]}`;\n};\nfunction isEsmSyntaxError(error) {\n  return error instanceof SyntaxError && (StringPrototypeIncludes(error.message\x2C "Cannot use import statement outside a module") || StringPrototypeIncludes(error.message\x2C "Unexpected token 'export'"));\n}\nfunction enrichCJSError(error) {\n  if (isEsmSyntaxError(error)) {\n    console.error('To load an ES module\x2C set "type": "module" in the package.json or use ' + "the .mjs extension.");\n  }\n}\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\n  const wrapper = Module.wrap(content);\n  const [f\x2C err] = core.evalContext(wrapper\x2C `file://${filename}`);\n  if (err) {\n    if (process.mainModule === cjsModuleInstance) {\n      enrichCJSError(err.thrown);\n    }\n    if (isEsmSyntaxError(err.thrown)) {\n      throw createRequireEsmError(filename\x2C moduleParentCache.get(cjsModuleInstance)?.filename);\n    } else {\n      throw err.thrown;\n    }\n  }\n  return f;\n}\nModule.prototype._compile = function(content\x2C filename) {\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\n  const dirname = pathDirname(filename);\n  const require = makeRequireFunction(this);\n  const exports = this.exports;\n  const thisValue = exports;\n  if (requireDepth === 0) {\n    statCache = new SafeMap();\n  }\n  if (hasInspectBrk && !hasBrokenOnInspectBrk) {\n    hasBrokenOnInspectBrk = true;\n    op_require_break_on_next_statement();\n  }\n  const { Buffer\x2C clearImmediate\x2C clearInterval\x2C clearTimeout\x2C console\x2C global\x2C process\x2C setImmediate\x2C setInterval\x2C setTimeout\x2C performance } = nodeGlobals;\n  const result = compiledWrapper.call(thisValue\x2C exports\x2C require\x2C this\x2C filename\x2C dirname\x2C Buffer\x2C clearImmediate\x2C clearInterval\x2C clearTimeout\x2C console\x2C global\x2C process\x2C setImmediate\x2C setInterval\x2C setTimeout\x2C performance);\n  if (requireDepth === 0) {\n    statCache = null;\n  }\n  return result;\n};\nModule._extensions[".js"] = function(module\x2C filename) {\n  const content = op_require_read_file(filename);\n  if (StringPrototypeEndsWith(filename\x2C ".js")) {\n    const pkg = op_require_read_closest_package_json(filename);\n    if (pkg && pkg.exists && pkg.typ === "module") {\n      throw createRequireEsmError(filename\x2C moduleParentCache.get(module)?.filename);\n    }\n  }\n  module._compile(content\x2C filename);\n};\nfunction createRequireEsmError(filename\x2C parent) {\n  let message = `require() of ES Module ${filename}`;\n  if (parent) {\n    message += ` from ${parent}`;\n  }\n  message += ` not supported. Instead change the require to a dynamic import() which is available in all CommonJS modules.`;\n  const err = new Error(message);\n  err.code = "ERR_REQUIRE_ESM";\n  return err;\n}\nfunction stripBOM(content) {\n  if (StringPrototypeCharCodeAt(content\x2C 0) === 0xfeff) {\n    content = StringPrototypeSlice(content\x2C 1);\n  }\n  return content;\n}\n// Native extension for .json\nModule._extensions[".json"] = function(module\x2C filename) {\n  const content = op_require_read_file(filename);\n  try {\n    module.exports = JSONParse(stripBOM(content));\n  } catch (err) {\n    err.message = filename + ": " + err.message;\n    throw err;\n  }\n};\n// Native extension for .node\nModule._extensions[".node"] = function(module\x2C filename) {\n  if (filename.endsWith("fsevents.node")) {\n    throw new Error("Using fsevents module is currently not supported");\n  }\n  module.exports = op_napi_open(filename\x2C globalThis);\n};\nfunction createRequireFromPath(filename) {\n  const proxyPath = op_require_proxy_path(filename);\n  const mod = new Module(proxyPath);\n  mod.filename = proxyPath;\n  mod.paths = Module._nodeModulePaths(mod.path);\n  return makeRequireFunction(mod);\n}\nfunction makeRequireFunction(mod) {\n  const require = function require(path) {\n    return mod.require(path);\n  };\n  function resolve(request\x2C options) {\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\n  }\n  require.resolve = resolve;\n  function paths(request) {\n    return Module._resolveLookupPaths(request\x2C mod);\n  }\n  resolve.paths = paths;\n  require.main = mainModule;\n  // Enable support to add extra extension types.\n  require.extensions = Module._extensions;\n  require.cache = Module._cache;\n  return require;\n}\n// Matches to:\n// - /foo/...\n// - \\foo\\...\n// - C:/foo/...\n// - C:\\foo\\...\nconst RE_START_OF_ABS_PATH = /^([/\\\\]|[a-zA-Z]:[/\\\\])/;\nfunction isAbsolute(filenameOrUrl) {\n  return RE_START_OF_ABS_PATH.test(filenameOrUrl);\n}\nfunction createRequire(filenameOrUrl) {\n  let fileUrlStr;\n  if (filenameOrUrl instanceof URL) {\n    if (filenameOrUrl.protocol !== "file:") {\n      throw new Error(`The argument 'filename' must be a file URL object\x2C file URL string\x2C or absolute path string. Received ${filenameOrUrl}`);\n    }\n    fileUrlStr = filenameOrUrl.toString();\n  } else if (typeof filenameOrUrl === "string") {\n    if (!filenameOrUrl.startsWith("file:") && !isAbsolute(filenameOrUrl)) {\n      throw new Error(`The argument 'filename' must be a file URL object\x2C file URL string\x2C or absolute path string. Received ${filenameOrUrl}`);\n    }\n    fileUrlStr = filenameOrUrl;\n  } else {\n    throw new Error(`The argument 'filename' must be a file URL object\x2C file URL string\x2C or absolute path string. Received ${filenameOrUrl}`);\n  }\n  const filename = op_require_as_file_path(fileUrlStr);\n  return createRequireFromPath(filename);\n}\nModule.createRequire = createRequire;\nModule._initPaths = function() {\n  const paths = op_require_init_paths();\n  modulePaths = paths;\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\n};\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\n  throw new Error("not implemented");\n};\n// Mostly used by tools like ts-node.\nModule.runMain = function() {\n  Module._load(process.argv[1]\x2C null\x2C true);\n};\nModule.Module = Module;\nnativeModuleExports.module = Module;\nfunction loadNativeModule(_id\x2C request) {\n  if (nativeModulePolyfill.has(request)) {\n    return nativeModulePolyfill.get(request);\n  }\n  const modExports = nativeModuleExports[request];\n  if (modExports) {\n    const nodeMod = new Module(request);\n    nodeMod.exports = modExports;\n    nodeMod.loaded = true;\n    nativeModulePolyfill.set(request\x2C nodeMod);\n    return nodeMod;\n  }\n  return undefined;\n}\nfunction nativeModuleCanBeRequiredByUsers(request) {\n  return !!nativeModuleExports[request];\n}\nfunction readPackageScope() {\n  throw new Error("not implemented");\n}\n/** @param specifier {string} */ function packageSpecifierSubPath(specifier) {\n  let parts = StringPrototypeSplit(specifier\x2C "/");\n  if (StringPrototypeStartsWith(parts[0]\x2C "@")) {\n    parts = ArrayPrototypeSlice(parts\x2C 2);\n  } else {\n    parts = ArrayPrototypeSlice(parts\x2C 1);\n  }\n  return ArrayPrototypeJoin(parts\x2C "/");\n}\n// This is a temporary namespace\x2C that will be removed when initializing\n// in `02_init.js`.\ninternals.requireImpl = {\n  setUsesLocalNodeModulesDir () {\n    usesLocalNodeModulesDir = true;\n  }\x2C\n  setInspectBrk () {\n    hasInspectBrk = true;\n  }\x2C\n  Module\x2C\n  nativeModuleExports\n};\nexport { builtinModules\x2C createRequire\x2C Module };\nexport const _cache = Module._cache;\nexport const _extensions = Module._extensions;\nexport const _findPath = Module._findPath;\nexport const _initPaths = Module._initPaths;\nexport const _load = Module._load;\nexport const _nodeModulePaths = Module._nodeModulePaths;\nexport const _pathCache = Module._pathCache;\nexport const _preloadModules = Module._preloadModules;\nexport const _resolveFilename = Module._resolveFilename;\nexport const _resolveLookupPaths = Module._resolveLookupPaths;\nexport const globalPaths = Module.globalPaths;\nexport const wrap = Module.wrap;\nexport default Module;\n
code-source-info,0x1123fa481c90,57,34374,34418,C0O34383C4O34407C11O34417,,
tick,0x10682d3c0,66542,0,0x0,3,0x1123fa481b4b,0x1123fa481530
code-creation,JS,10,66583,0x1123fa481ce0,17, ext:runtime/98_global_scope_window.js:49:10,0xb845267c48,~
script-source,298,ext:runtime/98_global_scope_window.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\nimport { core\x2C primordials } from "ext:core/mod.js";\nimport {\n  op_bootstrap_language\x2C\n  op_bootstrap_numcpus\x2C\n  op_bootstrap_user_agent\x2C\n} from "ext:core/ops";\nconst {\n  ObjectDefineProperties\x2C\n  ObjectPrototypeIsPrototypeOf\x2C\n  SymbolFor\x2C\n} = primordials;\n\nimport * as location from "ext:deno_web/12_location.js";\nimport * as console from "ext:deno_console/01_console.js";\nimport * as webidl from "ext:deno_webidl/00_webidl.js";\nimport * as globalInterfaces from "ext:deno_web/04_global_interfaces.js";\nimport * as webStorage from "ext:deno_webstorage/01_webstorage.js";\nimport * as prompt from "ext:runtime/41_prompt.js";\nimport { loadWebGPU } from "ext:deno_webgpu/00_init.js";\n\nclass Navigator {\n  constructor() {\n    webidl.illegalConstructor();\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      console.createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(NavigatorPrototype\x2C this)\x2C\n        keys: [\n          "hardwareConcurrency"\x2C\n          "userAgent"\x2C\n          "language"\x2C\n          "languages"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\n\nconst navigator = webidl.createBranded(Navigator);\n\nfunction memoizeLazy(f) {\n  let v_ = null;\n  return () => {\n    if (v_ === null) {\n      v_ = f();\n    }\n    return v_;\n  };\n}\n\nconst numCpus = memoizeLazy(() => op_bootstrap_numcpus());\nconst userAgent = memoizeLazy(() => op_bootstrap_user_agent());\nconst language = memoizeLazy(() => op_bootstrap_language());\n\nObjectDefineProperties(Navigator.prototype\x2C {\n  gpu: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      webidl.assertBranded(this\x2C NavigatorPrototype);\n      const webgpu = loadWebGPU();\n      return webgpu.gpu;\n    }\x2C\n  }\x2C\n  hardwareConcurrency: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      webidl.assertBranded(this\x2C NavigatorPrototype);\n      return numCpus();\n    }\x2C\n  }\x2C\n  userAgent: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      webidl.assertBranded(this\x2C NavigatorPrototype);\n      return userAgent();\n    }\x2C\n  }\x2C\n  language: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      webidl.assertBranded(this\x2C NavigatorPrototype);\n      return language();\n    }\x2C\n  }\x2C\n  languages: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      webidl.assertBranded(this\x2C NavigatorPrototype);\n      return [language()];\n    }\x2C\n  }\x2C\n});\nconst NavigatorPrototype = Navigator.prototype;\n\nconst mainRuntimeGlobalProperties = {\n  Location: location.locationConstructorDescriptor\x2C\n  location: location.locationDescriptor\x2C\n  Window: globalInterfaces.windowConstructorDescriptor\x2C\n  window: core.propGetterOnly(() => globalThis)\x2C\n  self: core.propGetterOnly(() => globalThis)\x2C\n  Navigator: core.propNonEnumerable(Navigator)\x2C\n  navigator: core.propGetterOnly(() => navigator)\x2C\n  alert: core.propWritable(prompt.alert)\x2C\n  confirm: core.propWritable(prompt.confirm)\x2C\n  prompt: core.propWritable(prompt.prompt)\x2C\n  localStorage: core.propGetterOnly(webStorage.localStorage)\x2C\n  sessionStorage: core.propGetterOnly(webStorage.sessionStorage)\x2C\n  Storage: core.propNonEnumerable(webStorage.Storage)\x2C\n};\n\nexport { mainRuntimeGlobalProperties\x2C memoizeLazy };\n
code-source-info,0x1123fa481ce0,298,1339,1410,C0O1351C6O1376C9O1381C12O1379C14O1396C16O1406,,
code-creation,JS,10,66708,0x1123fa481d38,10, ext:runtime_main/js/99_main.js:367:28,0xb845273558,~
code-source-info,0x1123fa481d38,300,10004,10029,C0O10010C6O10010C9O10029,,
tick,0x185290a28,66750,0,0x0,3,0x1123fa481ce9,0x1123fa481c15,0x1123fa481530
code-creation,JS,10,66833,0x1123fa481d88,720,internals.__bootstrapNodeProcess node:process:638:44,0x2136e0d4b068,~
script-source,122,node:process,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// Copyright Joyent\x2C Inc. and Node.js contributors. All rights reserved. MIT license.\n// TODO(petamoriken): enable prefer-primordials for node polyfills\n// deno-lint-ignore-file prefer-primordials\nimport { core\x2C internals } from "ext:core/mod.js";\nimport { op_geteuid\x2C op_process_abort\x2C op_set_exit_code } from "ext:core/ops";\nimport { notImplemented\x2C warnNotImplemented } from "ext:deno_node/_utils.ts";\nimport { EventEmitter } from "node:events";\nimport Module from "node:module";\nimport { report } from "ext:deno_node/internal/process/report.ts";\nimport { validateString } from "ext:deno_node/internal/validators.mjs";\nimport { ERR_INVALID_ARG_TYPE\x2C ERR_UNKNOWN_SIGNAL\x2C errnoException } from "ext:deno_node/internal/errors.ts";\nimport { getOptionValue } from "ext:deno_node/internal/options.ts";\nimport { assert } from "ext:deno_node/_util/asserts.ts";\nimport { join } from "node:path";\nimport { pathFromURL } from "ext:deno_web/00_infra.js";\nimport { arch as arch_\x2C chdir\x2C cwd\x2C env\x2C nextTick as _nextTick\x2C version\x2C versions } from "ext:deno_node/_process/process.ts";\nimport { _exiting } from "ext:deno_node/_process/exiting.ts";\nexport { _nextTick as nextTick\x2C chdir\x2C cwd\x2C env\x2C version\x2C versions };\nimport { createWritableStdioStream\x2C initStdin } from "ext:deno_node/_process/streams.mjs";\nimport { enableNextTick\x2C processTicksAndRejections\x2C runNextTicks } from "ext:deno_node/_next_tick.ts";\nimport { isWindows } from "ext:deno_node/_util/os.ts";\nimport * as io from "ext:deno_io/12_io.js";\nimport { Command } from "ext:runtime/40_process.js";\nlet argv0Getter = ()=>"";\nexport let argv0 = "deno";\n// TODO(kt3k): This should be set at start up time\nexport let arch = "";\n// TODO(kt3k): This should be set at start up time\nexport let platform = "";\n// TODO(kt3k): This should be set at start up time\nexport let pid = 0;\nlet stdin\x2C stdout\x2C stderr;\nexport { stderr\x2C stdin\x2C stdout };\nimport { getBinding } from "ext:deno_node/internal_binding/mod.ts";\nimport * as constants from "ext:deno_node/internal_binding/constants.ts";\nimport * as uv from "ext:deno_node/internal_binding/uv.ts";\nimport { buildAllowedFlags } from "ext:deno_node/internal/process/per_thread.mjs";\nconst notImplementedEvents = [\n  "multipleResolves"\x2C\n  "worker"\n];\nexport const argv = [];\nlet globalProcessExitCode = undefined;\n/** https://nodejs.org/api/process.html#process_process_exit_code */ export const exit = (code)=>{\n  if (code || code === 0) {\n    if (typeof code === "string") {\n      const parsedCode = parseInt(code);\n      globalProcessExitCode = isNaN(parsedCode) ? undefined : parsedCode;\n    } else {\n      globalProcessExitCode = code;\n    }\n  }\n  if (!process._exiting) {\n    process._exiting = true;\n    // FIXME(bartlomieju): this is wrong\x2C we won't be using syscall to exit\n    // and thus the `unload` event will not be emitted to properly trigger "emit"\n    // event on `process`.\n    process.emit("exit"\x2C process.exitCode || 0);\n  }\n  process.reallyExit(process.exitCode || 0);\n};\n/** https://nodejs.org/api/process.html#processumaskmask */ export const umask = ()=>{\n  // Always return the system default umask value.\n  // We don't use Deno.umask here because it has a race\n  // condition bug.\n  // See https://github.com/denoland/deno_std/issues/1893#issuecomment-1032897779\n  return 0o22;\n};\nexport const abort = ()=>{\n  op_process_abort();\n};\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\n  const value = getOptionValue(option);\n  if (value) {\n    Object.defineProperty(process\x2C name\x2C {\n      writable: false\x2C\n      configurable: true\x2C\n      enumerable\x2C\n      value\n    });\n  }\n}\nfunction createWarningObject(warning\x2C type\x2C code\x2C // deno-lint-ignore ban-types\nctor\x2C detail) {\n  assert(typeof warning === "string");\n  // deno-lint-ignore no-explicit-any\n  const warningErr = new Error(warning);\n  warningErr.name = String(type || "Warning");\n  if (code !== undefined) {\n    warningErr.code = code;\n  }\n  if (detail !== undefined) {\n    warningErr.detail = detail;\n  }\n  // @ts-ignore this function is not available in lib.dom.d.ts\n  Error.captureStackTrace(warningErr\x2C ctor || process.emitWarning);\n  return warningErr;\n}\nfunction doEmitWarning(warning) {\n  process.emit("warning"\x2C warning);\n}\n/** https://nodejs.org/api/process.html#process_process_emitwarning_warning_options */ export function emitWarning(warning\x2C type\x2C code\x2C // deno-lint-ignore ban-types\nctor) {\n  let detail;\n  if (type !== null && typeof type === "object" && !Array.isArray(type)) {\n    ctor = type.ctor;\n    code = type.code;\n    if (typeof type.detail === "string") {\n      detail = type.detail;\n    }\n    type = type.type || "Warning";\n  } else if (typeof type === "function") {\n    ctor = type;\n    code = undefined;\n    type = "Warning";\n  }\n  if (type !== undefined) {\n    validateString(type\x2C "type");\n  }\n  if (typeof code === "function") {\n    ctor = code;\n    code = undefined;\n  } else if (code !== undefined) {\n    validateString(code\x2C "code");\n  }\n  if (typeof warning === "string") {\n    warning = createWarningObject(warning\x2C type\x2C code\x2C ctor\x2C detail);\n  } else if (!(warning instanceof Error)) {\n    throw new ERR_INVALID_ARG_TYPE("warning"\x2C [\n      "Error"\x2C\n      "string"\n    ]\x2C warning);\n  }\n  if (warning.name === "DeprecationWarning") {\n    // deno-lint-ignore no-explicit-any\n    if (process.noDeprecation) {\n      return;\n    }\n    // deno-lint-ignore no-explicit-any\n    if (process.throwDeprecation) {\n      // Delay throwing the error to guarantee that all former warnings were\n      // properly logged.\n      return process.nextTick(()=>{\n        throw warning;\n      });\n    }\n  }\n  process.nextTick(doEmitWarning\x2C warning);\n}\nexport function hrtime(time) {\n  const milli = performance.now();\n  const sec = Math.floor(milli / 1000);\n  const nano = Math.floor(milli * 1_000_000 - sec * 1_000_000_000);\n  if (!time) {\n    return [\n      sec\x2C\n      nano\n    ];\n  }\n  const [prevSec\x2C prevNano] = time;\n  return [\n    sec - prevSec\x2C\n    nano - prevNano\n  ];\n}\nhrtime.bigint = function() {\n  const [sec\x2C nano] = hrtime();\n  return BigInt(sec) * 1_000_000_000n + BigInt(nano);\n};\nexport function memoryUsage() {\n  return {\n    ...Deno.memoryUsage()\x2C\n    arrayBuffers: 0\n  };\n}\nmemoryUsage.rss = function() {\n  return memoryUsage().rss;\n};\n// Returns a negative error code than can be recognized by errnoException\nfunction _kill(pid\x2C sig) {\n  let errCode;\n  if (sig === 0) {\n    let status;\n    if (Deno.build.os === "windows") {\n      status = new Command("powershell.exe"\x2C {\n        args: [\n          "Get-Process"\x2C\n          "-pid"\x2C\n          pid\n        ]\n      }).outputSync();\n    } else {\n      status = new Command("kill"\x2C {\n        args: [\n          "-0"\x2C\n          pid\n        ]\n      }).outputSync();\n    }\n    if (!status.success) {\n      errCode = uv.codeMap.get("ESRCH");\n    }\n  } else {\n    // Reverse search the shortname based on the numeric code\n    const maybeSignal = Object.entries(constants.os.signals).find(([_\x2C numericCode])=>numericCode === sig);\n    if (!maybeSignal) {\n      errCode = uv.codeMap.get("EINVAL");\n    } else {\n      try {\n        Deno.kill(pid\x2C maybeSignal[0]);\n      } catch (e) {\n        if (e instanceof TypeError) {\n          throw notImplemented(maybeSignal[0]);\n        }\n        throw e;\n      }\n    }\n  }\n  if (!errCode) {\n    return 0;\n  } else {\n    return errCode;\n  }\n}\nexport function dlopen(module\x2C filename\x2C _flags) {\n  // NOTE(bartlomieju): _flags is currently ignored\x2C but we don't warn for it\n  // as it makes DX bad\x2C even though it might not be needed:\n  // https://github.com/denoland/deno/issues/20075\n  Module._extensions[".node"](module\x2C filename);\n  return module;\n}\nexport function kill(pid\x2C sig = "SIGTERM") {\n  if (pid != (pid | 0)) {\n    throw new ERR_INVALID_ARG_TYPE("pid"\x2C "number"\x2C pid);\n  }\n  let err;\n  if (typeof sig === "number") {\n    err = process._kill(pid\x2C sig);\n  } else {\n    if (sig in constants.os.signals) {\n      // @ts-ignore Index previously checked\n      err = process._kill(pid\x2C constants.os.signals[sig]);\n    } else {\n      throw new ERR_UNKNOWN_SIGNAL(sig);\n    }\n  }\n  if (err) {\n    throw errnoException(err\x2C "kill");\n  }\n  return true;\n}\n// deno-lint-ignore no-explicit-any\nfunction uncaughtExceptionHandler(err\x2C origin) {\n  // The origin parameter can be 'unhandledRejection' or 'uncaughtException'\n  // depending on how the uncaught exception was created. In Node.js\x2C\n  // exceptions thrown from the top level of a CommonJS module are reported as\n  // 'uncaughtException'\x2C while exceptions thrown from the top level of an ESM\n  // module are reported as 'unhandledRejection'. Deno does not have a true\n  // CommonJS implementation\x2C so all exceptions thrown from the top level are\n  // reported as 'uncaughtException'.\n  process.emit("uncaughtExceptionMonitor"\x2C err\x2C origin);\n  process.emit("uncaughtException"\x2C err\x2C origin);\n}\nlet execPath = null;\nclass Process extends EventEmitter {\n  constructor(){\n    super();\n  }\n  /** https://nodejs.org/api/process.html#processrelease */ get release() {\n    return {\n      name: "node"\x2C\n      sourceUrl: `https://nodejs.org/download/release/${version}/node-${version}.tar.gz`\x2C\n      headersUrl: `https://nodejs.org/download/release/${version}/node-${version}-headers.tar.gz`\n    };\n  }\n  /** https://nodejs.org/api/process.html#process_process_arch */ get arch() {\n    if (!arch) {\n      arch = arch_();\n    }\n    return arch;\n  }\n  get report() {\n    return report;\n  }\n  get title() {\n    return "deno";\n  }\n  set title(_value) {\n  // NOTE(bartlomieju): this is a noop. Node.js doesn't guarantee that the\n  // process name will be properly set and visible from other tools anyway.\n  // Might revisit in the future.\n  }\n  /**\n   * https://nodejs.org/api/process.html#process_process_argv\n   * Read permissions are required in order to get the executable route\n   */ argv = argv;\n  get argv0() {\n    if (!argv0) {\n      argv0 = argv0Getter();\n    }\n    return argv0;\n  }\n  set argv0(_val) {}\n  /** https://nodejs.org/api/process.html#process_process_chdir_directory */ chdir = chdir;\n  /** https://nodejs.org/api/process.html#processconfig */ config = {\n    target_defaults: {}\x2C\n    variables: {}\n  };\n  /** https://nodejs.org/api/process.html#process_process_cwd */ cwd = cwd;\n  /**\n   * https://nodejs.org/api/process.html#process_process_env\n   * Requires env permissions\n   */ env = env;\n  /** https://nodejs.org/api/process.html#process_process_execargv */ execArgv = [];\n  /** https://nodejs.org/api/process.html#process_process_exit_code */ exit = exit;\n  /** https://nodejs.org/api/process.html#processabort */ abort = abort;\n  // Undocumented Node API that is used by `signal-exit` which in turn\n  // is used by `node-tap`. It was marked for removal a couple of years\n  // ago. See https://github.com/nodejs/node/blob/6a6b3c54022104cc110ab09044a2a0cecb8988e7/lib/internal/bootstrap/node.js#L172\n  reallyExit = (code)=>{\n    return Deno.exit(code || 0);\n  };\n  _exiting = _exiting;\n  /** https://nodejs.org/api/process.html#processexitcode_1 */ get exitCode() {\n    return globalProcessExitCode;\n  }\n  set exitCode(code) {\n    globalProcessExitCode = code;\n    code = parseInt(code) || 0;\n    if (!isNaN(code)) {\n      op_set_exit_code(code);\n    }\n  }\n  // Typed as any to avoid importing "module" module for types\n  // deno-lint-ignore no-explicit-any\n  mainModule = undefined;\n  /** https://nodejs.org/api/process.html#process_process_nexttick_callback_args */ nextTick = _nextTick;\n  dlopen = dlopen;\n  // deno-lint-ignore no-explicit-any\n  on(event\x2C listener) {\n    if (notImplementedEvents.includes(event)) {\n      warnNotImplemented(`process.on("${event}")`);\n      super.on(event\x2C listener);\n    } else if (event.startsWith("SIG")) {\n      if (event === "SIGBREAK" && Deno.build.os !== "windows") {\n      // Ignores SIGBREAK if the platform is not windows.\n      } else if (event === "SIGTERM" && Deno.build.os === "windows") {\n      // Ignores SIGTERM on windows.\n      } else {\n        Deno.addSignalListener(event\x2C listener);\n      }\n    } else {\n      super.on(event\x2C listener);\n    }\n    return this;\n  }\n  // deno-lint-ignore no-explicit-any\n  off(event\x2C listener) {\n    if (notImplementedEvents.includes(event)) {\n      warnNotImplemented(`process.off("${event}")`);\n      super.off(event\x2C listener);\n    } else if (event.startsWith("SIG")) {\n      if (event === "SIGBREAK" && Deno.build.os !== "windows") {\n      // Ignores SIGBREAK if the platform is not windows.\n      } else if (event === "SIGTERM" && Deno.build.os === "windows") {\n      // Ignores SIGTERM on windows.\n      } else {\n        Deno.removeSignalListener(event\x2C listener);\n      }\n    } else {\n      super.off(event\x2C listener);\n    }\n    return this;\n  }\n  // deno-lint-ignore no-explicit-any\n  emit(event\x2C ...args) {\n    if (event.startsWith("SIG")) {\n      if (event === "SIGBREAK" && Deno.build.os !== "windows") {\n      // Ignores SIGBREAK if the platform is not windows.\n      } else {\n        Deno.kill(Deno.pid\x2C event);\n      }\n    } else {\n      return super.emit(event\x2C ...args);\n    }\n    return true;\n  }\n  prependListener(event\x2C // deno-lint-ignore no-explicit-any\n  listener) {\n    if (notImplementedEvents.includes(event)) {\n      warnNotImplemented(`process.prependListener("${event}")`);\n      super.prependListener(event\x2C listener);\n    } else if (event.startsWith("SIG")) {\n      if (event === "SIGBREAK" && Deno.build.os !== "windows") {\n      // Ignores SIGBREAK if the platform is not windows.\n      } else {\n        Deno.addSignalListener(event\x2C listener);\n      }\n    } else {\n      super.prependListener(event\x2C listener);\n    }\n    return this;\n  }\n  /** https://nodejs.org/api/process.html#process_process_pid */ get pid() {\n    if (!pid) {\n      pid = Deno.pid;\n    }\n    return pid;\n  }\n  /** https://nodejs.org/api/process.html#processppid */ get ppid() {\n    return Deno.ppid;\n  }\n  /** https://nodejs.org/api/process.html#process_process_platform */ get platform() {\n    if (!platform) {\n      platform = isWindows ? "win32" : Deno.build.os;\n    }\n    return platform;\n  }\n  addListener(event\x2C // deno-lint-ignore no-explicit-any\n  listener) {\n    if (notImplementedEvents.includes(event)) {\n      warnNotImplemented(`process.addListener("${event}")`);\n    }\n    return this.on(event\x2C listener);\n  }\n  removeListener(event\x2C // deno-lint-ignore no-explicit-any\n  listener) {\n    if (notImplementedEvents.includes(event)) {\n      warnNotImplemented(`process.removeListener("${event}")`);\n    }\n    return this.off(event\x2C listener);\n  }\n  /**\n   * Returns the current high-resolution real time in a [seconds\x2C nanoseconds]\n   * tuple.\n   *\n   * Note: You need to give --allow-hrtime permission to Deno to actually get\n   * nanoseconds precision values. If you don't give 'hrtime' permission\x2C the returned\n   * values only have milliseconds precision.\n   *\n   * `time` is an optional parameter that must be the result of a previous process.hrtime() call to diff with the current time.\n   *\n   * These times are relative to an arbitrary time in the past\x2C and not related to the time of day and therefore not subject to clock drift. The primary use is for measuring performance between intervals.\n   * https://nodejs.org/api/process.html#process_process_hrtime_time\n   */ hrtime = hrtime;\n  /**\n   * @private\n   *\n   * NodeJS internal\x2C use process.kill instead\n   */ _kill = _kill;\n  /** https://nodejs.org/api/process.html#processkillpid-signal */ kill = kill;\n  memoryUsage = memoryUsage;\n  /** https://nodejs.org/api/process.html#process_process_stderr */ stderr = stderr;\n  /** https://nodejs.org/api/process.html#process_process_stdin */ stdin = stdin;\n  /** https://nodejs.org/api/process.html#process_process_stdout */ stdout = stdout;\n  /** https://nodejs.org/api/process.html#process_process_version */ version = version;\n  /** https://nodejs.org/api/process.html#process_process_versions */ versions = versions;\n  /** https://nodejs.org/api/process.html#process_process_emitwarning_warning_options */ emitWarning = emitWarning;\n  binding(name) {\n    return getBinding(name);\n  }\n  /** https://nodejs.org/api/process.html#processumaskmask */ umask() {\n    // Always return the system default umask value.\n    // We don't use Deno.umask here because it has a race\n    // condition bug.\n    // See https://github.com/denoland/deno_std/issues/1893#issuecomment-1032897779\n    return 0o22;\n  }\n  /** This method is removed on Windows */ getgid() {\n    return Deno.gid();\n  }\n  /** This method is removed on Windows */ getuid() {\n    return Deno.uid();\n  }\n  /** This method is removed on Windows */ geteuid() {\n    return op_geteuid();\n  }\n  // TODO(kt3k): Implement this when we added -e option to node compat mode\n  _eval = undefined;\n  /** https://nodejs.org/api/process.html#processexecpath */ get execPath() {\n    if (execPath) {\n      return execPath;\n    }\n    execPath = Deno.execPath();\n    return execPath;\n  }\n  set execPath(path) {\n    execPath = path;\n  }\n  setStartTime(t) {\n    this.#startTime = t;\n  }\n  #startTime = 0;\n  /** https://nodejs.org/api/process.html#processuptime */ uptime() {\n    return (Date.now() - this.#startTime) / 1000;\n  }\n  #allowedFlags = buildAllowedFlags();\n  /** https://nodejs.org/api/process.html#processallowednodeenvironmentflags */ get allowedNodeEnvironmentFlags() {\n    return this.#allowedFlags;\n  }\n  features = {\n    inspector: false\n  };\n  // TODO(kt3k): Get the value from --no-deprecation flag.\n  noDeprecation = false;\n}\nif (isWindows) {\n  delete Process.prototype.getgid;\n  delete Process.prototype.getuid;\n  delete Process.prototype.geteuid;\n}\n/** https://nodejs.org/api/process.html#process_process */ const process = new Process();\nObject.defineProperty(process\x2C Symbol.toStringTag\x2C {\n  enumerable: false\x2C\n  writable: true\x2C\n  configurable: false\x2C\n  value: "process"\n});\naddReadOnlyProcessAlias("noDeprecation"\x2C "--no-deprecation");\naddReadOnlyProcessAlias("throwDeprecation"\x2C "--throw-deprecation");\nexport const removeListener = process.removeListener;\nexport const removeAllListeners = process.removeAllListeners;\nlet unhandledRejectionListenerCount = 0;\nlet rejectionHandledListenerCount = 0;\nlet uncaughtExceptionListenerCount = 0;\nlet beforeExitListenerCount = 0;\nlet exitListenerCount = 0;\nprocess.on("newListener"\x2C (event)=>{\n  switch(event){\n    case "unhandledRejection":\n      unhandledRejectionListenerCount++;\n      break;\n    case "rejectionHandled":\n      rejectionHandledListenerCount++;\n      break;\n    case "uncaughtException":\n      uncaughtExceptionListenerCount++;\n      break;\n    case "beforeExit":\n      beforeExitListenerCount++;\n      break;\n    case "exit":\n      exitListenerCount++;\n      break;\n    default:\n      return;\n  }\n  synchronizeListeners();\n});\nprocess.on("removeListener"\x2C (event)=>{\n  switch(event){\n    case "unhandledRejection":\n      unhandledRejectionListenerCount--;\n      break;\n    case "rejectionHandled":\n      rejectionHandledListenerCount--;\n      break;\n    case "uncaughtException":\n      uncaughtExceptionListenerCount--;\n      break;\n    case "beforeExit":\n      beforeExitListenerCount--;\n      break;\n    case "exit":\n      exitListenerCount--;\n      break;\n    default:\n      return;\n  }\n  synchronizeListeners();\n});\nfunction processOnError(event) {\n  if (process.listenerCount("uncaughtException") > 0) {\n    event.preventDefault();\n  }\n  uncaughtExceptionHandler(event.error\x2C "uncaughtException");\n}\nfunction processOnBeforeUnload(event) {\n  process.emit("beforeExit"\x2C process.exitCode || 0);\n  processTicksAndRejections();\n  if (core.eventLoopHasMoreWork()) {\n    event.preventDefault();\n  }\n}\nfunction processOnUnload() {\n  if (!process._exiting) {\n    process._exiting = true;\n    process.emit("exit"\x2C process.exitCode || 0);\n  }\n}\nfunction synchronizeListeners() {\n  // Install special "unhandledrejection" handler\x2C that will be called\n  // last.\n  if (unhandledRejectionListenerCount > 0 || uncaughtExceptionListenerCount > 0) {\n    internals.nodeProcessUnhandledRejectionCallback = (event)=>{\n      if (process.listenerCount("unhandledRejection") === 0) {\n        // The Node.js default behavior is to raise an uncaught exception if\n        // an unhandled rejection occurs and there are no unhandledRejection\n        // listeners.\n        event.preventDefault();\n        uncaughtExceptionHandler(event.reason\x2C "unhandledRejection");\n        return;\n      }\n      event.preventDefault();\n      process.emit("unhandledRejection"\x2C event.reason\x2C event.promise);\n    };\n  } else {\n    internals.nodeProcessUnhandledRejectionCallback = undefined;\n  }\n  // Install special "handledrejection" handler\x2C that will be called\n  // last.\n  if (rejectionHandledListenerCount > 0) {\n    internals.nodeProcessRejectionHandledCallback = (event)=>{\n      process.emit("rejectionHandled"\x2C event.reason\x2C event.promise);\n    };\n  } else {\n    internals.nodeProcessRejectionHandledCallback = undefined;\n  }\n  if (uncaughtExceptionListenerCount > 0) {\n    globalThis.addEventListener("error"\x2C processOnError);\n  } else {\n    globalThis.removeEventListener("error"\x2C processOnError);\n  }\n  if (beforeExitListenerCount > 0) {\n    globalThis.addEventListener("beforeunload"\x2C processOnBeforeUnload);\n  } else {\n    globalThis.removeEventListener("beforeunload"\x2C processOnBeforeUnload);\n  }\n  if (exitListenerCount > 0) {\n    globalThis.addEventListener("unload"\x2C processOnUnload);\n  } else {\n    globalThis.removeEventListener("unload"\x2C processOnUnload);\n  }\n}\n// Should be called only once\x2C in `runtime/js/99_main.js` when the runtime is\n// bootstrapped.\ninternals.__bootstrapNodeProcess = function(argv0Val\x2C args\x2C denoVersions) {\n  // Overwrites the 1st item with getter.\n  if (typeof argv0Val === "string") {\n    Object.defineProperty(argv\x2C "0"\x2C {\n      get: ()=>{\n        return argv0Val;\n      }\n    });\n    argv0Getter = ()=>argv0Val;\n  } else {\n    Object.defineProperty(argv\x2C "0"\x2C {\n      get: ()=>{\n        return Deno.execPath();\n      }\n    });\n    argv0Getter = ()=>Deno.execPath();\n  }\n  // Overwrites the 2st item with getter.\n  Object.defineProperty(argv\x2C "1"\x2C {\n    get: ()=>{\n      if (Deno.mainModule?.startsWith("file:")) {\n        return pathFromURL(new URL(Deno.mainModule));\n      } else {\n        return join(Deno.cwd()\x2C "$deno$node.js");\n      }\n    }\n  });\n  for(let i = 0; i < args.length; i++){\n    argv[i + 2] = args[i];\n  }\n  for (const [key\x2C value] of Object.entries(denoVersions)){\n    versions[key] = value;\n  }\n  core.setNextTickCallback(processTicksAndRejections);\n  core.setMacrotaskCallback(runNextTicks);\n  enableNextTick();\n  stdin = process.stdin = initStdin();\n  /** https://nodejs.org/api/process.html#process_process_stdout */ stdout = process.stdout = createWritableStdioStream(io.stdout\x2C "stdout");\n  /** https://nodejs.org/api/process.html#process_process_stderr */ stderr = process.stderr = createWritableStdioStream(io.stderr\x2C "stderr");\n  process.setStartTime(Date.now());\n  // @ts-ignore Remove setStartTime and #startTime is not modifiable\n  delete process.setStartTime;\n  delete internals.__bootstrapNodeProcess;\n};\nexport default process;\n
code-source-info,0x1123fa481d
tick,0x1059ffe74,68000,1,0x1057132bc,6,0x0,0x1123fa481ded,0x1123fa481c26,0x1123fa481530
code-creation,JS,10,68500,0x1123fa482098,17,setNextTickCallback ext:core/01_core.js:132:31,0x38e60b55c120,~
code-source-info,0x1123fa482098,5,3134,3191,C0O3145C7O3164C10O3145C16O3190,,
code-creation,JS,10,68542,0x1123fa4820f0,12,enableNextTick ext:deno_node/_next_tick.ts:10:31,0x1533a61e2300,~
script-source,166,ext:deno_node/_next_tick.ts,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// Copyright Joyent\x2C Inc. and other Node contributors.\n// TODO(petamoriken): enable prefer-primordials for node polyfills\n// deno-lint-ignore-file prefer-primordials\nimport { core } from "ext:core/mod.js";\nimport { validateFunction } from "ext:deno_node/internal/validators.mjs";\nimport { _exiting } from "ext:deno_node/_process/exiting.ts";\nimport { FixedQueue } from "ext:deno_node/internal/fixed_queue.ts";\nlet nextTickEnabled = false;\nexport function enableNextTick() {\n  nextTickEnabled = true;\n}\nconst queue = new FixedQueue();\nexport function processTicksAndRejections() {\n  let tock;\n  do {\n    // deno-lint-ignore no-cond-assign\n    while(tock = queue.shift()){\n      // FIXME(bartlomieju): Deno currently doesn't support async hooks\n      // const asyncId = tock[async_id_symbol];\n      // emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\n      try {\n        const callback = tock.callback;\n        if (tock.args === undefined) {\n          callback();\n        } else {\n          const args = tock.args;\n          switch(args.length){\n            case 1:\n              callback(args[0]);\n              break;\n            case 2:\n              callback(args[0]\x2C args[1]);\n              break;\n            case 3:\n              callback(args[0]\x2C args[1]\x2C args[2]);\n              break;\n            case 4:\n              callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]);\n              break;\n            default:\n              callback(...args);\n          }\n        }\n      } finally{\n      // FIXME(bartlomieju): Deno currently doesn't support async hooks\n      // if (destroyHooksExist())\n      // emitDestroy(asyncId);\n      }\n    // FIXME(bartlomieju): Deno currently doesn't support async hooks\n    // emitAfter(asyncId);\n    }\n    core.runMicrotasks();\n  // FIXME(bartlomieju): Deno currently doesn't unhandled rejections\n  // } while (!queue.isEmpty() || processPromiseRejections());\n  }while (!queue.isEmpty())\n  core.setHasTickScheduled(false);\n// FIXME(bartlomieju): Deno currently doesn't unhandled rejections\n// setHasRejectionToWarn(false);\n}\nexport function runNextTicks() {\n  // FIXME(bartlomieju): Deno currently doesn't unhandled rejections\n  // if (!hasTickScheduled() && !hasRejectionToWarn())\n  //   runMicrotasks();\n  // if (!hasTickScheduled() && !hasRejectionToWarn())\n  //   return;\n  if (!core.hasTickScheduled()) {\n    core.runMicrotasks();\n    return true;\n  }\n  processTicksAndRejections();\n  return true;\n}\nexport function nextTick(callback\x2C ...args) {\n  // If we're snapshotting we don't want to push nextTick to be run. We'll\n  // enable next ticks in "__bootstrapNodeProcess()";\n  if (!nextTickEnabled) {\n    return;\n  }\n  validateFunction(callback\x2C "callback");\n  if (_exiting) {\n    return;\n  }\n  // TODO(bartlomieju): seems superfluous if we don't depend on `arguments`\n  let args_;\n  switch(args.length){\n    case 0:\n      break;\n    case 1:\n      args_ = [\n        args[0]\n      ];\n      break;\n    case 2:\n      args_ = [\n        args[0]\x2C\n        args[1]\n      ];\n      break;\n    case 3:\n      args_ = [\n        args[0]\x2C\n        args[1]\x2C\n        args[2]\n      ];\n      break;\n    default:\n      args_ = new Array(args.length);\n      for(let i = 0; i < args.length; i++){\n        args_[i] = args[i];\n      }\n  }\n  if (queue.isEmpty()) {\n    core.setHasTickScheduled(true);\n  }\n  // FIXME(bartlomieju): Deno currently doesn't support async hooks\n  // const asyncId = newAsyncId();\n  // const triggerAsyncId = getDefaultTriggerAsyncId();\n  const tickObject = {\n    // FIXME(bartlomieju): Deno currently doesn't support async hooks\n    // [async_id_symbol]: asyncId\x2C\n    // [trigger_async_id_symbol]: triggerAsyncId\x2C\n    callback\x2C\n    args: args_\n  };\n  // FIXME(bartlomieju): Deno currently doesn't support async hooks\n  // if (initHooksExist())\n  //   emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\n  queue.push(tickObject);\n}\n
code-source-info,0x1123fa4820f0,166,544,576,C0O551C4O567C11O575,,
code-creation,JS,10,68750,0x1123fa482140,409,initStdin ext:deno_node/_process/streams.mjs:126:26,0x1e3fa041ce78,~
script-source,237,ext:deno_node/_process/streams.mjs,// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.\n// Copyright Joyent\x2C Inc. and Node.js contributors. All rights reserved. MIT license.\n\n// TODO(petamoriken): enable prefer-primordials for node polyfills\n// deno-lint-ignore-file prefer-primordials\n\nimport { Buffer } from "node:buffer";\nimport {\n  clearLine\x2C\n  clearScreenDown\x2C\n  cursorTo\x2C\n  moveCursor\x2C\n} from "ext:deno_node/internal/readline/callbacks.mjs";\nimport { Duplex\x2C Readable\x2C Writable } from "node:stream";\nimport * as io from "ext:deno_io/12_io.js";\nimport { guessHandleType } from "ext:deno_node/internal_binding/util.ts";\n\n// https://github.com/nodejs/node/blob/00738314828074243c9a52a228ab4c68b04259ef/lib/internal/bootstrap/switches/is_main_thread.js#L41\nexport function createWritableStdioStream(writer\x2C name) {\n  const stream = new Writable({\n    emitClose: false\x2C\n    write(buf\x2C enc\x2C cb) {\n      if (!writer) {\n        this.destroy(\n          new Error(`Deno.${name} is not available in this environment`)\x2C\n        );\n        return;\n      }\n      writer.writeSync(buf instanceof Uint8Array ? buf : Buffer.from(buf\x2C enc));\n      cb();\n    }\x2C\n    destroy(err\x2C cb) {\n      cb(err);\n      this._undestroy();\n      if (!this._writableState.emitClose) {\n        nextTick(() => this.emit("close"));\n      }\n    }\x2C\n  });\n  let fd = -1;\n\n  if (writer instanceof io.Stdout) {\n    fd = io.STDOUT_RID;\n  } else if (writer instanceof io.Stderr) {\n    fd = io.STDERR_RID;\n  }\n  stream.fd = fd;\n  stream.destroySoon = stream.destroy;\n  stream._isStdio = true;\n  stream.once("close"\x2C () => writer?.close());\n  Object.defineProperties(stream\x2C {\n    columns: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      get: () =>\n        writer?.isTerminal() ? Deno.consoleSize?.().columns : undefined\x2C\n    }\x2C\n    rows: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      get: () => writer?.isTerminal() ? Deno.consoleSize?.().rows : undefined\x2C\n    }\x2C\n    isTTY: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      get: () => writer?.isTerminal()\x2C\n    }\x2C\n    getWindowSize: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: () =>\n        writer?.isTerminal() ? Object.values(Deno.consoleSize?.()) : undefined\x2C\n    }\x2C\n  });\n\n  if (writer?.isTerminal()) {\n    // These belong on tty.WriteStream()\x2C but the TTY streams currently have\n    // following problems:\n    // 1. Using them here introduces a circular dependency.\n    // 2. Creating a net.Socket() from a fd is not currently supported.\n    stream.cursorTo = function (x\x2C y\x2C callback) {\n      return cursorTo(this\x2C x\x2C y\x2C callback);\n    };\n\n    stream.moveCursor = function (dx\x2C dy\x2C callback) {\n      return moveCursor(this\x2C dx\x2C dy\x2C callback);\n    };\n\n    stream.clearLine = function (dir\x2C callback) {\n      return clearLine(this\x2C dir\x2C callback);\n    };\n\n    stream.clearScreenDown = function (callback) {\n      return clearScreenDown(this\x2C callback);\n    };\n  }\n\n  return stream;\n}\n\nfunction _guessStdinType(fd) {\n  if (typeof fd !== "number" || fd < 0) return "UNKNOWN";\n  return guessHandleType(fd);\n}\n\nconst _read = function (size) {\n  const p = Buffer.alloc(size || 16 * 1024);\n  io.stdin?.read(p).then(\n    (length) => {\n      this.push(length === null ? null : p.slice(0\x2C length));\n    }\x2C\n    (error) => {\n      this.destroy(error);\n    }\x2C\n  );\n};\n\nlet readStream;\nexport function setReadStream(s) {\n  readStream = s;\n}\n\n/** https://nodejs.org/api/process.html#process_process_stdin */\n// https://github.com/nodejs/node/blob/v18.12.1/lib/internal/bootstrap/switches/is_main_thread.js#L189\n/** Create process.stdin */\nexport const initStdin = () => {\n  const fd = io.stdin ? io.STDIN_RID : undefined;\n  let stdin;\n  const stdinType = _guessStdinType(fd);\n\n  switch (stdinType) {\n    case "FILE": {\n      // Since `fs.ReadStream` cannot be imported before process initialization\x2C\n      // use `Readable` instead.\n      // https://github.com/nodejs/node/blob/v18.12.1/lib/internal/bootstrap/switches/is_main_thread.js#L200\n      // https://github.com/nodejs/node/blob/v18.12.1/lib/internal/fs/streams.js#L148\n      stdin = new Readable({\n        highWaterMark: 64 * 1024\x2C\n        autoDestroy: false\x2C\n        read: _read\x2C\n      });\n      break;\n    }\n    case "TTY": {\n      stdin = new readStream(fd);\n      break;\n    }\n    case "PIPE":\n    case "TCP": {\n      // For PIPE and TCP\x2C `new Duplex()` should be replaced `new net.Socket()` if possible.\n      // There are two problems that need to be resolved.\n      // 1. Using them here introduces a circular dependency.\n      // 2. Creating a net.Socket() from a fd is not currently supported.\n      // https://github.com/nodejs/node/blob/v18.12.1/lib/internal/bootstrap/switches/is_main_thread.js#L206\n      // https://github.com/nodejs/node/blob/v18.12.1/lib/net.js#L329\n      stdin = new Duplex({\n        readable: stdinType === "TTY" ? undefined : true\x2C\n        writable: stdinType === "TTY" ? undefined : false\x2C\n        readableHighWaterMark: stdinType === "TTY" ? 0 : undefined\x2C\n        allowHalfOpen: false\x2C\n        emitClose: false\x2C\n        autoDestroy: true\x2C\n        decodeStrings: false\x2C\n        read: _read\x2C\n      });\n\n      if (stdinType !== "TTY") {\n        // Make sure the stdin can't be `.end()`-ed\n        stdin._writableState.ended = true;\n      }\n      break;\n    }\n    default: {\n      // Provide a dummy contentless input for e.g. non-console\n      // Windows applications.\n      stdin = new Readable({ read() {} });\n      stdin.push(null);\n    }\n  }\n\n  stdin.on("close"\x2C () => io.stdin?.close());\n  stdin.fd = io.stdin ? io.STDIN_RID : -1;\n  Object.defineProperty(stdin\x2C "isTTY"\x2C {\n    enumerable: true\x2C\n    configurable: true\x2C\n    get() {\n      return io.stdin.isTerminal();\n    }\x2C\n  });\n  stdin._isRawMode = false;\n  stdin.setRawMode = (enable) => {\n    io.stdin?.setRaw?.(enable);\n    stdin._isRawMode = enable;\n    return stdin;\n  };\n  Object.defineProperty(stdin\x2C "isRaw"\x2C {\n    enumerable: true\x2C\n    configurable: true\x2C\n    get() {\n      return stdin._isRawMode;\n    }\x2C\n  });\n\n  return stdin;\n};\n
code-source-info,0x1123fa
code-creation,JS,10,69000,0x1123fa482320,26,_guessStdinType ext:deno_node/_process/streams.mjs:101:25,0x1e3fa041c5c8,~
code-source-info,0x1123fa482320,237,2962,3058,C0O2971C7O3004C12O3009C14O3026C15O3029C21O3036C25O3056,,
code-creation,JS,10,69000,0x1123fa482380,22,guessHandleType ext:deno_node/internal_binding/util.ts:37:32,0x1533a61e0bd0,~
script-source,165,ext:deno_node/internal_binding/util.ts,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// This module ports:\n// - https://github.com/nodejs/node/blob/master/src/util-inl.h\n// - https://github.com/nodejs/node/blob/master/src/util.cc\n// - https://github.com/nodejs/node/blob/master/src/util.h\n// TODO(petamoriken): enable prefer-primordials for node polyfills\n// deno-lint-ignore-file prefer-primordials\nimport { op_node_guess_handle_type } from "ext:core/ops";\nconst handleTypes = [\n  "TCP"\x2C\n  "TTY"\x2C\n  "UDP"\x2C\n  "FILE"\x2C\n  "PIPE"\x2C\n  "UNKNOWN"\n];\nexport function guessHandleType(fd) {\n  const type = op_node_guess_handle_type(fd);\n  return handleTypes[type];\n}\nexport const ALL_PROPERTIES = 0;\nexport const ONLY_WRITABLE = 1;\nexport const ONLY_ENUMERABLE = 2;\nexport const ONLY_CONFIGURABLE = 4;\nexport const ONLY_ENUM_WRITABLE = 6;\nexport const SKIP_STRINGS = 8;\nexport const SKIP_SYMBOLS = 16;\n/**\n * Efficiently determine whether the provided property key is numeric\n * (and thus could be an array indexer) or not.\n *\n * Always returns true for values of type `'number'`.\n *\n * Otherwise\x2C only returns true for strings that consist only of positive integers.\n *\n * Results are cached.\n */ const isNumericLookup = {};\nexport function isArrayIndex(value) {\n  switch(typeof value){\n    case "number":\n      return value >= 0 && (value | 0) === value;\n    case "string":\n      {\n        const result = isNumericLookup[value];\n        if (result !== void 0) {\n          return result;\n        }\n        const length = value.length;\n        if (length === 0) {\n          return isNumericLookup[value] = false;\n        }\n        let ch = 0;\n        let i = 0;\n        for(; i < length; ++i){\n          ch = value.charCodeAt(i);\n          if (i === 0 && ch === 0x30 && length > 1 /* must not start with 0 */  || ch < 0x30 /* 0 */  || ch > 0x39 /* 9 */ ) {\n            return isNumericLookup[value] = false;\n          }\n        }\n        return isNumericLookup[value] = true;\n      }\n    default:\n      return false;\n  }\n}\nexport function getOwnNonIndexProperties(obj\x2C filter) {\n  let allProperties = [\n    ...Object.getOwnPropertyNames(obj)\x2C\n    ...Object.getOwnPropertySymbols(obj)\n  ];\n  if (Array.isArray(obj)) {\n    allProperties = allProperties.filter((k)=>!isArrayIndex(k));\n  }\n  if (filter === ALL_PROPERTIES) {\n    return allProperties;\n  }\n  const result = [];\n  for (const key of allProperties){\n    const desc = Object.getOwnPropertyDescriptor(obj\x2C key);\n    if (desc === undefined) {\n      continue;\n    }\n    if (filter & ONLY_WRITABLE && !desc.writable) {\n      continue;\n    }\n    if (filter & ONLY_ENUMERABLE && !desc.enumerable) {\n      continue;\n    }\n    if (filter & ONLY_CONFIGURABLE && !desc.configurable) {\n      continue;\n    }\n    if (filter & SKIP_STRINGS && typeof key === "string") {\n      continue;\n    }\n    if (filter & SKIP_SYMBOLS && typeof key === "symbol") {\n      continue;\n    }\n    result.push(key);\n  }\n  return result;\n}\n
code-source-info,0x1123fa482380,165,1696,1778,C0O1718C6O1718C11O1751C18O1769C21O1776,,
tick,0x104b15564,69208,0,0x0,0,0x1123fa482386,0x1123fa482335,0x1123fa482168,0x1123fa481fbe,0x1123fa481c26,0x1123fa481530
code-creation,JS,10,69542,0x1123fa4823d8,147,ReadStream node:tty:31:14,0x2136e0d62ba8,~
script-source,137,node:tty,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\nimport { primordials } from "ext:core/mod.js";\nconst { Error } = primordials;\nimport { op_is_terminal } from "ext:core/ops";\nimport { ERR_INVALID_FD } from "ext:deno_node/internal/errors.ts";\nimport { LibuvStreamWrap } from "ext:deno_node/internal_binding/stream_wrap.ts";\nimport { providerType } from "ext:deno_node/internal_binding/async_wrap.ts";\nimport { Socket } from "node:net";\nimport { setReadStream } from "ext:deno_node/_process/streams.mjs";\n// Returns true when the given numeric fd is associated with a TTY and false otherwise.\nfunction isatty(fd) {\n  if (typeof fd !== "number") {\n    return false;\n  }\n  try {\n    /**\n     * TODO: Treat `fd` as real file descriptors. Currently\x2C `rid` 0\x2C 1\x2C 2\n     * correspond to `fd` 0\x2C 1\x2C 2 (stdin\x2C stdout\x2C stderr). This may change in\n     * the future.\n     */ return op_is_terminal(fd);\n  } catch (_) {\n    return false;\n  }\n}\nclass TTY extends LibuvStreamWrap {\n  constructor(handle){\n    super(providerType.TTYWRAP\x2C handle);\n  }\n}\nexport class ReadStream extends Socket {\n  constructor(fd\x2C options){\n    if (fd >> 0 !== fd || fd < 0) {\n      throw new ERR_INVALID_FD(fd);\n    }\n    // We only support `stdin`.\n    if (fd != 0) throw new Error("Only fd 0 is supported.");\n    const tty = new TTY(Deno.stdin);\n    super({\n      readableHighWaterMark: 0\x2C\n      handle: tty\x2C\n      manualStart: true\x2C\n      ...options\n    });\n    this.isRaw = false;\n    this.isTTY = true;\n  }\n  setRawMode(flag) {\n    flag = !!flag;\n    this._handle.setRaw(flag);\n    this.isRaw = flag;\n    return this;\n  }\n}\nsetReadStream(ReadStream);\nexport class WriteStream extends Socket {\n  constructor(fd){\n    if (fd >> 0 !== fd || fd < 0) {\n      throw new ERR_INVALID_FD(fd);\n    }\n    // We only support `stdin`\x2C `stdout` and `stderr`.\n    if (fd > 2) throw new Error("Only fd 0\x2C 1 and 2 are supported.");\n    const tty = new TTY(fd === 0 ? Deno.stdin : fd === 1 ? Deno.stdout : Deno.stderr);\n    super({\n      readableHighWaterMark: 0\x2C\n      handle: tty\x2C\n      manualStart: true\n    });\n    const { columns\x2C rows } = Deno.consoleSize();\n    this.columns = columns;\n    this.rows = rows;\n    this.isTTY = true;\n  }\n}\nexport { isatty };\nexport default {\n  isatty\x2C\n  WriteStream\x2C\n  ReadStream\n};\n
code-source-info,0x1123fa4823d8,137,1115,1501,C3O1134C5O1141C11O1146C17O1159C22O1172C30O1178C35O1172C36O1244C37O1251C42O1257C52O1263C57O1257C58O1317C63O1325C67O1330C74O1317C80O1342C87O1396C97O1435C101O1342C122O1342C134O1455C135O1466C139O1479C140O1490C146O1500,,
code-creation,JS,10,69667,0x1123fa4824b0,53,TTY node:tty:26:14,0x2136e0d62a08,~
code-source-info,0x1123fa4824b0,137,1004,1058,C3O1024C9O1037C14O1018C38O1018C52O1057,,
code-creation,JS,10,69667,0x1123fa482528,85,LibuvStreamWrap ext:deno_node/internal_binding/stream_wrap.ts:80:14,0x15a2a142e790,~
script-source,215,ext:deno_node/internal_binding/stream_wrap.ts,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// This module ports:\n// - https://github.com/nodejs/node/blob/master/src/stream_base-inl.h\n// - https://github.com/nodejs/node/blob/master/src/stream_base.h\n// - https://github.com/nodejs/node/blob/master/src/stream_base.cc\n// - https://github.com/nodejs/node/blob/master/src/stream_wrap.h\n// - https://github.com/nodejs/node/blob/master/src/stream_wrap.cc\n// TODO(petamoriken): enable prefer-primordials for node polyfills\n// deno-lint-ignore-file prefer-primordials\nimport { core } from "ext:core/mod.js";\nconst { internalRidSymbol } = core;\nimport { op_can_write_vectored\x2C op_raw_write_vectored } from "ext:core/ops";\nimport { TextEncoder } from "ext:deno_web/08_text_encoding.js";\nimport { Buffer } from "node:buffer";\nimport { notImplemented } from "ext:deno_node/_utils.ts";\nimport { HandleWrap } from "ext:deno_node/internal_binding/handle_wrap.ts";\nimport { AsyncWrap\x2C providerType } from "ext:deno_node/internal_binding/async_wrap.ts";\nimport { codeMap } from "ext:deno_node/internal_binding/uv.ts";\nvar StreamBaseStateFields;\nexport const kReadBytesOrError = 0;\nexport const kArrayBufferOffset = 1;\nexport const kBytesWritten = 2;\nexport const kLastWriteWasAsync = 3;\nexport const kNumStreamBaseStateFields = 4;\nexport const streamBaseState = new Uint8Array(5);\n// This is Deno\x2C it always will be async.\nstreamBaseState[kLastWriteWasAsync] = 1;\nexport class WriteWrap extends AsyncWrap {\n  handle;\n  oncomplete;\n  async;\n  bytes;\n  buffer;\n  callback;\n  _chunks;\n  constructor(){\n    super(providerType.WRITEWRAP);\n  }\n}\nexport class ShutdownWrap extends AsyncWrap {\n  handle;\n  oncomplete;\n  callback;\n  constructor(){\n    super(providerType.SHUTDOWNWRAP);\n  }\n}\nexport const kStreamBaseField = Symbol("kStreamBaseField");\nconst SUGGESTED_SIZE = 64 * 1024;\nexport class LibuvStreamWrap extends HandleWrap {\n  [kStreamBaseField];\n  reading;\n  #reading = false;\n  destroyed = false;\n  writeQueueSize = 0;\n  bytesRead = 0;\n  bytesWritten = 0;\n  #buf = new Uint8Array(SUGGESTED_SIZE);\n  onread;\n  constructor(provider\x2C stream){\n    super(provider);\n    this.#attachToObject(stream);\n  }\n  /**\n   * Start the reading of the stream.\n   * @return An error status code.\n   */ readStart() {\n    if (!this.#reading) {\n      this.#reading = true;\n      this.#read();\n    }\n    return 0;\n  }\n  /**\n   * Stop the reading of the stream.\n   * @return An error status code.\n   */ readStop() {\n    this.#reading = false;\n    return 0;\n  }\n  /**\n   * Shutdown the stream.\n   * @param req A shutdown request wrapper.\n   * @return An error status code.\n   */ shutdown(req) {\n    const status = this._onClose();\n    try {\n      req.oncomplete(status);\n    } catch  {\n    // swallow callback error.\n    }\n    return 0;\n  }\n  /**\n   * @param userBuf\n   * @return An error status code.\n   */ useUserBuffer(_userBuf) {\n    // TODO(cmorten)\n    notImplemented("LibuvStreamWrap.prototype.useUserBuffer");\n  }\n  /**\n   * Write a buffer to the stream.\n   * @param req A write request wrapper.\n   * @param data The Uint8Array buffer to write to the stream.\n   * @return An error status code.\n   */ writeBuffer(req\x2C data) {\n    this.#write(req\x2C data);\n    return 0;\n  }\n  /**\n   * Write multiple chunks at once.\n   * @param req A write request wrapper.\n   * @param chunks\n   * @param allBuffers\n   * @return An error status code.\n   */ writev(req\x2C chunks\x2C allBuffers) {\n    const supportsWritev = this.provider === providerType.TCPSERVERWRAP;\n    const rid = this[kStreamBaseField][internalRidSymbol];\n    // Fast case optimization: two chunks\x2C and all buffers.\n    if (chunks.length === 2 && allBuffers && supportsWritev && op_can_write_vectored(rid)) {\n      // String chunks.\n      if (typeof chunks[0] === "string") chunks[0] = Buffer.from(chunks[0]);\n      if (typeof chunks[1] === "string") chunks[1] = Buffer.from(chunks[1]);\n      op_raw_write_vectored(rid\x2C chunks[0]\x2C chunks[1]).then((nwritten)=>{\n        try {\n          req.oncomplete(0);\n        } catch  {\n        // swallow callback errors.\n        }\n        streamBaseState[kBytesWritten] = nwritten;\n        this.bytesWritten += nwritten;\n      });\n      return 0;\n    }\n    const count = allBuffers ? chunks.length : chunks.length >> 1;\n    const buffers = new Array(count);\n    if (!allBuffers) {\n      for(let i = 0; i < count; i++){\n        const chunk = chunks[i * 2];\n        if (Buffer.isBuffer(chunk)) {\n          buffers[i] = chunk;\n        }\n        // String chunk\n        const encoding = chunks[i * 2 + 1];\n        buffers[i] = Buffer.from(chunk\x2C encoding);\n      }\n    } else {\n      for(let i = 0; i < count; i++){\n        buffers[i] = chunks[i];\n      }\n    }\n    return this.writeBuffer(req\x2C Buffer.concat(buffers));\n  }\n  /**\n   * Write an ASCII string to the stream.\n   * @return An error status code.\n   */ writeAsciiString(req\x2C data) {\n    const buffer = new TextEncoder().encode(data);\n    return this.writeBuffer(req\x2C buffer);\n  }\n  /**\n   * Write an UTF8 string to the stream.\n   * @return An error status code.\n   */ writeUtf8String(req\x2C data) {\n    const buffer = new TextEncoder().encode(data);\n    return this.writeBuffer(req\x2C buffer);\n  }\n  /**\n   * Write an UCS2 string to the stream.\n   * @return An error status code.\n   */ writeUcs2String(_req\x2C _data) {\n    notImplemented("LibuvStreamWrap.prototype.writeUcs2String");\n  }\n  /**\n   * Write an LATIN1 string to the stream.\n   * @return An error status code.\n   */ writeLatin1String(req\x2C data) {\n    const buffer = Buffer.from(data\x2C "latin1");\n    return this.writeBuffer(req\x2C buffer);\n  }\n  _onClose() {\n    let status = 0;\n    this.#reading = false;\n    try {\n      this[kStreamBaseField]?.close();\n    } catch  {\n      status = codeMap.get("ENOTCONN");\n    }\n    return status;\n  }\n  /**\n   * Attaches the class to the underlying stream.\n   * @param stream The stream to attach to.\n   */ #attachToObject(stream) {\n    this[kStreamBaseField] = stream;\n  }\n  /** Internal method for reading from the attached stream. */ async #read() {\n    let buf = this.#buf;\n    let nread;\n    const ridBefore = this[kStreamBaseField][internalRidSymbol];\n    try {\n      nread = await this[kStreamBaseField].read(buf);\n    } catch (e) {\n      // Try to read again if the underlying stream resource\n      // changed. This can happen during TLS upgrades (eg. STARTTLS)\n      if (ridBefore != this[kStreamBaseField][internalRidSymbol]) {\n        return this.#read();\n      }\n      if (e instanceof Deno.errors.Interrupted || e instanceof Deno.errors.BadResource) {\n        nread = codeMap.get("EOF");\n      } else if (e instanceof Deno.errors.ConnectionReset || e instanceof Deno.errors.ConnectionAborted) {\n        nread = codeMap.get("ECONNRESET");\n      } else {\n        nread = codeMap.get("UNKNOWN");\n      }\n    }\n    nread ??= codeMap.get("EOF");\n    streamBaseState[kReadBytesOrError] = nread;\n    if (nread > 0) {\n      this.bytesRead += nread;\n    }\n    buf = buf.slice(0\x2C nread);\n    streamBaseState[kArrayBufferOffset] = 0;\n    try {\n      this.onread(buf\x2C nread);\n    } catch  {\n    // swallow callback errors.\n    }\n    if (nread >= 0 && this.#reading) {\n      this.#read();\n    }\n  }\n  /**\n   * Internal method for writing to the attached stream.\n   * @param req A write request wrapper.\n   * @param data The Uint8Array buffer to write to the stream.\n   */ async #write(req\x2C data) {\n    const { byteLength } = data;\n    const ridBefore = this[kStreamBaseField][internalRidSymbol];\n    let nwritten = 0;\n    try {\n      // TODO(crowlKats): duplicate from runtime/js/13_buffer.js\n      while(nwritten < data.length){\n        nwritten += await this[kStreamBaseField].write(data.subarray(nwritten));\n      }\n    } catch (e) {\n      // Try to read again if the underlying stream resource\n      // changed. This can happen during TLS upgrades (eg. STARTTLS)\n      if (ridBefore != this[kStreamBaseField][internalRidSymbol]) {\n        return this.#write(req\x2C data.subarray(nwritten));\n      }\n      let status;\n      // TODO(cmorten): map err to status codes\n      if (e instanceof Deno.errors.BadResource || e instanceof Deno.errors.BrokenPipe) {\n        status = codeMap.get("EBADF");\n      } else {\n        status = codeMap.get("UNKNOWN");\n      }\n      try {\n        req.oncomplete(status);\n      } catch  {\n      // swallow callback errors.\n      }\n      return;\n    }\n    streamBaseState[kBytesWritten] = byteLength;\n    this.bytesWritten += byteLength;\n    try {\n      req.oncomplete(0);\n    } catch  {\n    // swallow callback errors.\n    }\n    return;\n  }\n}\n
code-source-info,0x1123fa482528,215,3224,3302,C3O3248C27O3248C63O3269C65O3274C77O3289C84O3301,,
code-creation,JS,10,70000,0x1123fa4825c0,42,HandleWrap ext:deno_node/internal_binding/handle_wrap.ts:30:14,0x3bd2e7835070,~
script-source,268,ext:deno_node/internal_binding/handle_wrap.ts,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// This module ports:\n// - https://github.com/nodejs/node/blob/master/src/handle_wrap.cc\n// - https://github.com/nodejs/node/blob/master/src/handle_wrap.h\n// TODO(petamoriken): enable prefer-primordials for node polyfills\n// deno-lint-ignore-file prefer-primordials\nimport { unreachable } from "ext:deno_node/_util/asserts.ts";\nimport { AsyncWrap } from "ext:deno_node/internal_binding/async_wrap.ts";\nexport class HandleWrap extends AsyncWrap {\n  constructor(provider){\n    super(provider);\n  }\n  close(cb = ()=>{}) {\n    this._onClose();\n    queueMicrotask(cb);\n  }\n  ref() {\n    unreachable();\n  }\n  unref() {\n    unreachable();\n  }\n  // deno-lint-ignore no-explicit-any\n  _onClose() {}\n}\n
code-source-info,0x1123fa4825c0,268,1667,1703,C3O1683C27O1683C41O1702,,
tick,0x1067b7ac0,70500,0,0x0,0,0x40f463ae033,0x1123fa482560,0x1123fa4824d6,0x1123fa482422,0x1123fa4821b7,0x1123fa481fbe,0x1123fa481c26,0x1123fa481530
code-creation,JS,10,70667,0x1123fa482630,14,#attachToObject ext:deno_node/internal_binding/stream_wrap.ts:214:22,0x15a2a142e688,~
code-source-info,0x1123fa482630,215,7042,7093,C0O7062C8O7080C13O7092,,
code-creation,JS,10,70750,0x1123fa482680,385,Socket node:net:431:14,0xcb077170c58,~
script-source,115,node:net,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// TODO(petamoriken): enable prefer-primordials for node polyfills\n// deno-lint-ignore-file prefer-primordials\nimport { notImplemented } from "ext:deno_node/_utils.ts";\nimport { EventEmitter } from "node:events";\nimport { isIP\x2C isIPv4\x2C isIPv6\x2C normalizedArgsSymbol } from "ext:deno_node/internal/net.ts";\nimport { Duplex } from "node:stream";\nimport { asyncIdSymbol\x2C defaultTriggerAsyncIdScope\x2C newAsyncId\x2C ownerSymbol } from "ext:deno_node/internal/async_hooks.ts";\nimport { ERR_INVALID_ADDRESS_FAMILY\x2C ERR_INVALID_ARG_TYPE\x2C ERR_INVALID_ARG_VALUE\x2C ERR_INVALID_FD_TYPE\x2C ERR_INVALID_IP_ADDRESS\x2C ERR_MISSING_ARGS\x2C ERR_SERVER_ALREADY_LISTEN\x2C ERR_SERVER_NOT_RUNNING\x2C ERR_SOCKET_CLOSED\x2C errnoException\x2C exceptionWithHostPort\x2C genericNodeError\x2C uvExceptionWithHostPort } from "ext:deno_node/internal/errors.ts";\nimport { isUint8Array } from "ext:deno_node/internal/util/types.ts";\nimport { kAfterAsyncWrite\x2C kBuffer\x2C kBufferCb\x2C kBufferGen\x2C kHandle\x2C kUpdateTimer\x2C onStreamRead\x2C setStreamTimeout\x2C writeGeneric\x2C writevGeneric } from "ext:deno_node/internal/stream_base_commons.ts";\nimport { kTimeout } from "ext:deno_node/internal/timers.mjs";\nimport { nextTick } from "ext:deno_node/_next_tick.ts";\nimport { DTRACE_NET_SERVER_CONNECTION\x2C DTRACE_NET_STREAM_END } from "ext:deno_node/internal/dtrace.ts";\nimport { Buffer } from "node:buffer";\nimport { validateAbortSignal\x2C validateFunction\x2C validateInt32\x2C validateNumber\x2C validatePort\x2C validateString } from "ext:deno_node/internal/validators.mjs";\nimport { constants as TCPConstants\x2C TCP\x2C TCPConnectWrap } from "ext:deno_node/internal_binding/tcp_wrap.ts";\nimport { constants as PipeConstants\x2C Pipe\x2C PipeConnectWrap } from "ext:deno_node/internal_binding/pipe_wrap.ts";\nimport { ShutdownWrap } from "ext:deno_node/internal_binding/stream_wrap.ts";\nimport { assert } from "ext:deno_node/_util/asserts.ts";\nimport { isWindows } from "ext:deno_node/_util/os.ts";\nimport { ADDRCONFIG\x2C lookup as dnsLookup } from "node:dns";\nimport { codeMap } from "ext:deno_node/internal_binding/uv.ts";\nimport { guessHandleType } from "ext:deno_node/internal_binding/util.ts";\nimport { debuglog } from "ext:deno_node/internal/util/debuglog.ts";\nimport { channel } from "node:diagnostics_channel";\nlet debug = debuglog("net"\x2C (fn)=>{\n  debug = fn;\n});\nconst kLastWriteQueueSize = Symbol("lastWriteQueueSize");\nconst kSetNoDelay = Symbol("kSetNoDelay");\nconst kBytesRead = Symbol("kBytesRead");\nconst kBytesWritten = Symbol("kBytesWritten");\nconst DEFAULT_IPV4_ADDR = "0.0.0.0";\nconst DEFAULT_IPV6_ADDR = "::";\nfunction _getNewAsyncId(handle) {\n  return !handle || typeof handle.getAsyncId !== "function" ? newAsyncId() : handle.getAsyncId();\n}\nconst _noop = (_arrayBuffer\x2C _nread)=>{\n  return;\n};\nconst netClientSocketChannel = channel("net.client.socket");\nconst netServerSocketChannel = channel("net.server.socket");\nfunction _toNumber(x) {\n  return (x = Number(x)) >= 0 ? x : false;\n}\nfunction _isPipeName(s) {\n  return typeof s === "string" && _toNumber(s) === false;\n}\nfunction _createHandle(fd\x2C isServer) {\n  validateInt32(fd\x2C "fd"\x2C 0);\n  const type = guessHandleType(fd);\n  if (type === "PIPE") {\n    return new Pipe(isServer ? PipeConstants.SERVER : PipeConstants.SOCKET);\n  }\n  if (type === "TCP") {\n    return new TCP(isServer ? TCPConstants.SERVER : TCPConstants.SOCKET);\n  }\n  throw new ERR_INVALID_FD_TYPE(type);\n}\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\n// cb is either a function or null.\n// Used to normalize arguments of `Socket.prototype.connect()` and\n// `Server.prototype.listen()`. Possible combinations of parameters:\n// - (options[...][\x2C cb])\n// - (path[...][\x2C cb])\n// - ([port][\x2C host][...][\x2C cb])\n// For `Socket.prototype.connect()`\x2C the [...] part is ignored\n// For `Server.prototype.listen()`\x2C the [...] part is [\x2C backlog]\n// but will not be handled here (handled in listen())\nexport function _normalizeArgs(args) {\n  let arr;\n  if (args.length === 0) {\n    arr = [\n      {}\x2C\n      null\n    ];\n    arr[normalizedArgsSymbol] = true;\n    return arr;\n  }\n  const arg0 = args[0];\n  let options = {};\n  if (typeof arg0 === "object" && arg0 !== null) {\n    // (options[...][\x2C cb])\n    options = arg0;\n  } else if (_isPipeName(arg0)) {\n    // (path[...][\x2C cb])\n    options.path = arg0;\n  } else {\n    // ([port][\x2C host][...][\x2C cb])\n    options.port = arg0;\n    if (args.length > 1 && typeof args[1] === "string") {\n      options.host = args[1];\n    }\n  }\n  const cb = args[args.length - 1];\n  if (!_isConnectionListener(cb)) {\n    arr = [\n      options\x2C\n      null\n    ];\n  } else {\n    arr = [\n      options\x2C\n      cb\n    ];\n  }\n  arr[normalizedArgsSymbol] = true;\n  return arr;\n}\nfunction _isTCPConnectWrap(req) {\n  return "localAddress" in req && "localPort" in req;\n}\nfunction _afterConnect(status\x2C // deno-lint-ignore no-explicit-any\nhandle\x2C req\x2C readable\x2C writable) {\n  let socket = handle[ownerSymbol];\n  if (socket.constructor.name === "ReusedHandle") {\n    socket = socket.handle;\n  }\n  // Callback may come after call to destroy\n  if (socket.destroyed) {\n    return;\n  }\n  debug("afterConnect");\n  assert(socket.connecting);\n  socket.connecting = false;\n  socket._sockname = null;\n  if (status === 0) {\n    if (socket.readable && !readable) {\n      socket.push(null);\n      socket.read();\n    }\n    if (socket.writable && !writable) {\n      socket.end();\n    }\n    socket._unrefTimer();\n    socket.emit("connect");\n    socket.emit("ready");\n    // Start the first read\x2C or get an immediate EOF.\n    // this doesn't actually consume any bytes\x2C because len=0.\n    if (readable && !socket.isPaused()) {\n      socket.read(0);\n    }\n  } else {\n    socket.connecting = false;\n    let details;\n    if (_isTCPConnectWrap(req)) {\n      details = req.localAddress + ":" + req.localPort;\n    }\n    const ex = exceptionWithHostPort(status\x2C "connect"\x2C req.address\x2C req.port\x2C details);\n    if (_isTCPConnectWrap(req)) {\n      ex.localAddress = req.localAddress;\n      ex.localPort = req.localPort;\n    }\n    socket.destroy(ex);\n  }\n}\nfunction _checkBindError(err\x2C port\x2C handle) {\n  // EADDRINUSE may not be reported until we call `listen()` or `connect()`.\n  // To complicate matters\x2C a failed `bind()` followed by `listen()` or `connect()`\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\n  // bound to the expected port before calling `listen()` or `connect()`.\n  if (err === 0 && port > 0 && handle.getsockname) {\n    const out = {};\n    err = handle.getsockname(out);\n    if (err === 0 && port !== out.port) {\n      err = codeMap.get("EADDRINUSE");\n    }\n  }\n  return err;\n}\nfunction _isPipe(options) {\n  return "path" in options && !!options.path;\n}\nfunction _connectErrorNT(socket\x2C err) {\n  socket.destroy(err);\n}\nfunction _internalConnect(socket\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\n  assert(socket.connecting);\n  let err;\n  if (localAddress || localPort) {\n    if (addressType === 4) {\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\n      err = socket._handle.bind(localAddress\x2C localPort);\n    } else {\n      // addressType === 6\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\n      err = socket._handle.bind6(localAddress\x2C localPort\x2C flags);\n    }\n    debug("binding to localAddress: %s and localPort: %d (addressType: %d)"\x2C localAddress\x2C localPort\x2C addressType);\n    err = _checkBindError(err\x2C localPort\x2C socket._handle);\n    if (err) {\n      const ex = exceptionWithHostPort(err\x2C "bind"\x2C localAddress\x2C localPort);\n      socket.destroy(ex);\n      return;\n    }\n  }\n  if (addressType === 6 || addressType === 4) {\n    const req = new TCPConnectWrap();\n    req.oncomplete = _afterConnect;\n    req.address = address;\n    req.port = port;\n    req.localAddress = localAddress;\n    req.localPort = localPort;\n    if (addressType === 4) {\n      err = socket._handle.connect(req\x2C address\x2C port);\n    } else {\n      err = socket._handle.connect6(req\x2C address\x2C port);\n    }\n  } else {\n    const req = new PipeConnectWrap();\n    req.oncomplete = _afterConnect;\n    req.address = address;\n    err = socket._handle.connect(req\x2C address);\n  }\n  if (err) {\n    let details = "";\n    const sockname = socket._getsockname();\n    if (sockname) {\n      details = `${sockname.address}:${sockname.port}`;\n    }\n    const ex = exceptionWithHostPort(err\x2C "connect"\x2C address\x2C port\x2C details);\n    socket.destroy(ex);\n  }\n}\n// Provide a better error message when we call end() as a result\n// of the other side sending a FIN.  The standard "write after end"\n// is overly vague\x2C and makes it seem like the user's code is to blame.\nfunction _writeAfterFIN(// deno-lint-ignore no-explicit-any\nchunk\x2C encoding\x2C cb) {\n  if (!this.writableEnded) {\n    return Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C // @ts-expect-error Using `call` seem to be interfering with the overload for write\n    cb);\n  }\n  if (typeof encoding === "function") {\n    cb = encoding;\n    encoding = null;\n  }\n  const err = genericNodeError("This socket has been ended by the other party"\x2C {\n    code: "EPIPE"\n  });\n  if (typeof cb === "function") {\n    defaultTriggerAsyncIdScope(this[asyncIdSymbol]\x2C nextTick\x2C cb\x2C err);\n  }\n  if (this._server) {\n    nextTick(()=>this.destroy(err));\n  } else {\n    this.destroy(err);\n  }\n  return false;\n}\nfunction _tryReadStart(socket) {\n  // Not already reading\x2C start the flow.\n  debug("Socket._handle.readStart");\n  socket._handle.reading = true;\n  const err = socket._handle.readStart();\n  if (err) {\n    socket.destroy(errnoException(err\x2C "read"));\n  }\n}\n// Called when the "end" event is emitted.\nfunction _onReadableStreamEnd() {\n  if (!this.allowHalfOpen) {\n    this.write = _writeAfterFIN;\n  }\n}\n// Called when creating new Socket\x2C or when re-using a closed Socket\nfunction _initSocketHandle(socket) {\n  socket._undestroy();\n  socket._sockname = undefined;\n  // Handle creation may be deferred to bind() or connect() time.\n  if (socket._handle) {\n    // deno-lint-ignore no-explicit-any\n    socket._handle[ownerSymbol] = socket;\n    socket._handle.onread = onStreamRead;\n    socket[asyncIdSymbol] = _getNewAsyncId(socket._handle);\n    let userBuf = socket[kBuffer];\n    if (userBuf) {\n      const bufGen = socket[kBufferGen];\n      if (bufGen !== null) {\n        userBuf = bufGen();\n        if (!isUint8Array(userBuf)) {\n          return;\n        }\n        socket[kBuffer] = userBuf;\n      }\n      socket._handle.useUserBuffer(userBuf);\n    }\n  }\n}\nfunction _lookupAndConnect(self\x2C options) {\n  const { localAddress\x2C localPort } = options;\n  const host = options.host || "localhost";\n  let { port } = options;\n  if (localAddress && !isIP(localAddress)) {\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\n  }\n  if (localPort) {\n    validateNumber(localPort\x2C "options.localPort");\n  }\n  if (typeof port !== "undefined") {\n    if (typeof port !== "number" && typeof port !== "string") {\n      throw new ERR_INVALID_ARG_TYPE("options.port"\x2C [\n        "number"\x2C\n        "string"\n      ]\x2C port);\n    }\n    validatePort(port);\n  }\n  port |= 0;\n  // If host is an IP\x2C skip performing a lookup\n  const addressType = isIP(host);\n  if (addressType) {\n    defaultTriggerAsyncIdScope(self[asyncIdSymbol]\x2C nextTick\x2C ()=>{\n      if (self.connecting) {\n        defaultTriggerAsyncIdScope(self[asyncIdSymbol]\x2C _internalConnect\x2C self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort);\n      }\n    });\n    return;\n  }\n  if (options.lookup !== undefined) {\n    validateFunction(options.lookup\x2C "options.lookup");\n  }\n  const dnsOpts = {\n    family: options.family\x2C\n    hints: options.hints || 0\n  };\n  if (!isWindows && dnsOpts.family !== 4 && dnsOpts.family !== 6 && dnsOpts.hints === 0) {\n    dnsOpts.hints = ADDRCONFIG;\n  }\n  debug("connect: find host"\x2C host);\n  debug("connect: dns options"\x2C dnsOpts);\n  self._host = host;\n  const lookup = options.lookup || dnsLookup;\n  defaultTriggerAsyncIdScope(self[asyncIdSymbol]\x2C function() {\n    lookup(host\x2C dnsOpts\x2C function emitLookup(err\x2C ip\x2C addressType) {\n      self.emit("lookup"\x2C err\x2C ip\x2C addressType\x2C host);\n      // It's possible we were destroyed while looking this up.\n      // XXX it would be great if we could cancel the promise returned by\n      // the look up.\n      if (!self.connecting) {\n        return;\n      }\n      if (err) {\n        // net.createConnection() creates a net.Socket object and immediately\n        // calls net.Socket.connect() on it (that's us). There are no event\n        // listeners registered yet so defer the error event to the next tick.\n        nextTick(_connectErrorNT\x2C self\x2C err);\n      } else if (!isIP(ip)) {\n        err = new ERR_INVALID_IP_ADDRESS(ip);\n        nextTick(_connectErrorNT\x2C self\x2C err);\n      } else if (addressType !== 4 && addressType !== 6) {\n        err = new ERR_INVALID_ADDRESS_FAMILY(`${addressType}`\x2C options.host\x2C options.port);\n        nextTick(_connectErrorNT\x2C self\x2C err);\n      } else {\n        self._unrefTimer();\n        defaultTriggerAsyncIdScope(self[asyncIdSymbol]\x2C _internalConnect\x2C self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort);\n      }\n    });\n  });\n}\nfunction _afterShutdown() {\n  // deno-lint-ignore no-explicit-any\n  const self = this.handle[ownerSymbol];\n  debug("afterShutdown destroyed=%j"\x2C self.destroyed\x2C self._readableState);\n  this.callback();\n}\nfunction _emitCloseNT(s) {\n  debug("SERVER: emit close");\n  s.emit("close");\n}\n/**\n * This class is an abstraction of a TCP socket or a streaming `IPC` endpoint\n * (uses named pipes on Windows\x2C and Unix domain sockets otherwise). It is also\n * an `EventEmitter`.\n *\n * A `net.Socket` can be created by the user and used directly to interact with\n * a server. For example\x2C it is returned by `createConnection`\x2C\n * so the user can use it to talk to the server.\n *\n * It can also be created by Node.js and passed to the user when a connection\n * is received. For example\x2C it is passed to the listeners of a `"connection"` event emitted on a `Server`\x2C so the user can use\n * it to interact with the client.\n */ export class Socket extends Duplex {\n  // Problem with this is that users can supply their own handle\x2C that may not\n  // have `handle.getAsyncId()`. In this case an `[asyncIdSymbol]` should\n  // probably be supplied by `async_hooks`.\n  [asyncIdSymbol] = -1;\n  [kHandle] = null;\n  [kSetNoDelay] = false;\n  [kLastWriteQueueSize] = 0;\n  // deno-lint-ignore no-explicit-any\n  [kTimeout] = null;\n  [kBuffer] = null;\n  [kBufferCb] = null;\n  [kBufferGen] = null;\n  // Used after `.destroy()`\n  [kBytesRead] = 0;\n  [kBytesWritten] = 0;\n  // Reserved properties\n  server = null;\n  // deno-lint-ignore no-explicit-any\n  _server = null;\n  _peername;\n  _sockname;\n  _pendingData = null;\n  _pendingEncoding = "";\n  _host = null;\n  // deno-lint-ignore no-explicit-any\n  _parent = null;\n  constructor(options){\n    if (typeof options === "number") {\n      // Legacy interface.\n      options = {\n        fd: options\n      };\n    } else {\n      options = {\n        ...options\n      };\n    }\n    // Default to *not* allowing half open sockets.\n    options.allowHalfOpen = Boolean(options.allowHalfOpen);\n    // For backwards compat do not emit close on destroy.\n    options.emitClose = false;\n    options.autoDestroy = true;\n    // Handle strings directly.\n    options.decodeStrings = false;\n    super(options);\n    if (options.handle) {\n      this._handle = options.handle;\n      this[asyncIdSymbol] = _getNewAsyncId(this._handle);\n    } else if (options.fd !== undefined) {\n      // REF: https://github.com/denoland/deno/issues/6529\n      notImplemented("net.Socket.prototype.constructor with fd option");\n    }\n    const onread = options.onread;\n    if (onread !== null && typeof onread === "object" && (isUint8Array(onread.buffer) || typeof onread.buffer === "function") && typeof onread.callback === "function") {\n      if (typeof onread.buffer === "function") {\n        this[kBuffer] = true;\n        this[kBufferGen] = onread.buffer;\n      } else {\n        this[kBuffer] = onread.buffer;\n      }\n      this[kBufferCb] = onread.callback;\n    }\n    this.on("end"\x2C _onReadableStreamEnd);\n    _initSocketHandle(this);\n    // If we have a handle\x2C then start the flow of data into the\n    // buffer. If not\x2C then this will happen when we connect.\n    if (this._handle && options.readable !== false) {\n      if (options.pauseOnCreate) {\n        // Stop the handle from reading and pause the stream\n        this._handle.reading = false;\n        this._handle.readStop();\n        // @ts-expect-error This property shouldn't be modified\n        this.readableFlowing = false;\n      } else if (!options.manualStart) {\n        this.read(0);\n      }\n    }\n  }\n  connect(...args) {\n    let normalized;\n    // If passed an array\x2C it's treated as an array of arguments that have\n    // already been normalized (so we don't normalize more than once). This has\n    // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\n    // reverted as it had unintended side effects.\n    if (Array.isArray(args[0]) && args[0][normalizedArgsSymbol]) {\n      normalized = args[0];\n    } else {\n      normalized = _normalizeArgs(args);\n    }\n    const options = normalized[0];\n    const cb = normalized[1];\n    // `options.port === null` will be checked later.\n    if (options.port === undefined && options.path == null) {\n      throw new ERR_MISSING_ARGS([\n        "options"\x2C\n        "port"\x2C\n        "path"\n      ]);\n    }\n    if (this.write !== Socket.prototype.write) {\n      this.write = Socket.prototype.write;\n    }\n    if (this.destroyed) {\n      this._handle = null;\n      this._peername = undefined;\n      this._sockname = undefined;\n    }\n    const { path } = options;\n    const pipe = _isPipe(options);\n    debug("pipe"\x2C pipe\x2C path);\n    if (!this._handle) {\n      this._handle = pipe ? new Pipe(PipeConstants.SOCKET) : new TCP(TCPConstants.SOCKET);\n      _initSocketHandle(this);\n    }\n    if (cb !== null) {\n      this.once("connect"\x2C cb);\n    }\n    this._unrefTimer();\n    this.connecting = true;\n    if (pipe) {\n      validateString(path\x2C "options.path");\n      defaultTriggerAsyncIdScope(this[asyncIdSymbol]\x2C _internalConnect\x2C this\x2C path);\n    } else {\n      _lookupAndConnect(this\x2C options);\n    }\n    return this;\n  }\n  /**\n   * Pauses the reading of data. That is\x2C `"data"` events will not be emitted.\n   * Useful to throttle back an upload.\n   *\n   * @return The socket itself.\n   */ pause() {\n    if (this[kBuffer] && !this.connecting && this._handle && this._handle.reading) {\n      this._handle.reading = false;\n      if (!this.destroyed) {\n        const err = this._handle.readStop();\n        if (err) {\n          this.destroy(errnoException(err\x2C "read"));\n        }\n      }\n    }\n    return Duplex.prototype.pause.call(this);\n  }\n  /**\n   * Resumes reading after a call to `socket.pause()`.\n   *\n   * @return The socket itself.\n   */ resume() {\n    if (this[kBuffer] && !this.connecting && this._handle && !this._handle.reading) {\n      _tryReadStart(this);\n    }\n    return Duplex.prototype.resume.call(this);\n  }\n  /**\n   * Sets the socket to timeout after `timeout` milliseconds of inactivity on\n   * the socket. By default `net.Socket` do not have a timeout.\n   *\n   * When an idle timeout is triggered the socket will receive a `"timeout"` event but the connection will not be severed. The user must manually call `socket.end()` or `socket.destroy()` to\n   * end the connection.\n   *\n   * If `timeout` is `0`\x2C then the existing idle timeout is disabled.\n   *\n   * The optional `callback` parameter will be added as a one-time listener for the `"timeout"` event.\n   * @return The socket itself.\n   */ setTimeout = setStreamTimeout;\n  /**\n   * Enable/disable the use of Nagle's algorithm.\n   *\n   * When a TCP connection is created\x2C it will have Nagle's algorithm enabled.\n   *\n   * Nagle's algorithm delays data before it is sent via the network. It attempts\n   * to optimize throughput at the expense of latency.\n   *\n   * Passing `true` for `noDelay` or not passing an argument will disable Nagle's\n   * algorithm for the socket. Passing `false` for `noDelay` will enable Nagle's\n   * algorithm.\n   *\n   * @param noDelay\n   * @return The socket itself.\n   */ setNoDelay(noDelay) {\n    if (!this._handle) {\n      this.once("connect"\x2C noDelay ? this.setNoDelay : ()=>this.setNoDelay(noDelay));\n      return this;\n    }\n    // Backwards compatibility: assume true when `noDelay` is omitted\n    const newValue = noDelay === undefined ? true : !!noDelay;\n    if ("setNoDelay" in this._handle && this._handle.setNoDelay && newValue !== this[kSetNoDelay]) {\n      this[kSetNoDelay] = newValue;\n      this._handle.setNoDelay(newValue);\n    }\n    return this;\n  }\n  /**\n   * Enable/disable keep-alive functionality\x2C and optionally set the initial\n   * delay before the first keepalive probe is sent on an idle socket.\n   *\n   * Set `initialDelay` (in milliseconds) to set the delay between the last\n   * data packet received and the first keepalive probe. Setting `0` for`initialDelay` will leave the value unchanged from the default\n   * (or previous) setting.\n   *\n   * Enabling the keep-alive functionality will set the following socket options:\n   *\n   * - `SO_KEEPALIVE=1`\n   * - `TCP_KEEPIDLE=initialDelay`\n   * - `TCP_KEEPCNT=10`\n   * - `TCP_KEEPINTVL=1`\n   *\n   * @param enable\n   * @param initialDelay\n   * @return The socket itself.\n   */ setKeepAlive(enable\x2C initialDelay) {\n    if (!this._handle) {\n      this.once("connect"\x2C ()=>this.setKeepAlive(enable\x2C initialDelay));\n      return this;\n    }\n    if ("setKeepAlive" in this._handle) {\n      this._handle.setKeepAlive(enable\x2C ~~(initialDelay / 1000));\n    }\n    return this;\n  }\n  /**\n   * Returns the bound `address`\x2C the address `family` name and `port` of the\n   * socket as reported by the operating system:`{ port: 12346\x2C family: "IPv4"\x2C address: "127.0.0.1" }`\n   */ address() {\n    return this._getsockname();\n  }\n  /**\n   * Calling `unref()` on a socket will allow the program to exit if this is the only\n   * active socket in the event system. If the socket is already `unref`ed calling`unref()` again will have no effect.\n   *\n   * @return The socket itself.\n   */ unref() {\n    if (!this._handle) {\n      this.once("connect"\x2C this.unref);\n      return this;\n    }\n    if (typeof this._handle.unref === "function") {\n      this._handle.unref();\n    }\n    return this;\n  }\n  /**\n   * Opposite of `unref()`\x2C calling `ref()` on a previously `unref`ed socket will_not_ let the program exit if it's the only socket left (the default behavior).\n   * If the socket is `ref`ed calling `ref` again will have no effect.\n   *\n   * @return The socket itself.\n   */ ref() {\n    if (!this._handle) {\n      this.once("connect"\x2C this.ref);\n      return this;\n    }\n    if (typeof this._handle.ref === "function") {\n      this._handle.ref();\n    }\n    return this;\n  }\n  /**\n   * This property shows the number of characters buffered for writing. The buffer\n   * may contain strings whose length after encoding is not yet known. So this number\n   * is only an approximation of the number of bytes in the buffer.\n   *\n   * `net.Socket` has the property that `socket.write()` always works. This is to\n   * help users get up and running quickly. The computer cannot always keep up\n   * with the amount of data that is written to a socket. The network connection\n   * simply might be too slow. Node.js will internally queue up the data written to a\n   * socket and send it out over the wire when it is possible.\n   *\n   * The consequence of this internal buffering is that memory may grow.\n   * Users who experience large or growing `bufferSize` should attempt to\n   * "throttle" the data flows in their program with `socket.pause()` and `socket.resume()`.\n   *\n   * @deprecated Use `writableLength` instead.\n   */ get bufferSize() {\n    if (this._handle) {\n      return this.writableLength;\n    }\n    return 0;\n  }\n  /**\n   * The amount of received bytes.\n   */ get bytesRead() {\n    return this._handle ? this._handle.bytesRead : this[kBytesRead];\n  }\n  /**\n   * The amount of bytes sent.\n   */ get bytesWritten() {\n    let bytes = this._bytesDispatched;\n    const data = this._pendingData;\n    const encoding = this._pendingEncoding;\n    const writableBuffer = this.writableBuffer;\n    if (!writableBuffer) {\n      return undefined;\n    }\n    for (const el of writableBuffer){\n      bytes += el.chunk instanceof Buffer ? el.chunk.length : Buffer.byteLength(el.chunk\x2C el.encoding);\n    }\n    if (Array.isArray(data)) {\n      // Was a writev\x2C iterate over chunks to get total length\n      for(let i = 0; i < data.length; i++){\n        const chunk = data[i];\n        // deno-lint-ignore no-explicit-any\n        if (data.allBuffers || chunk instanceof Buffer) {\n          bytes += chunk.length;\n        } else {\n          bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\n        }\n      }\n    } else if (data) {\n      // Writes are either a string or a Buffer.\n      if (typeof data !== "string") {\n        bytes += data.length;\n      } else {\n        bytes += Buffer.byteLength(data\x2C encoding);\n      }\n    }\n    return bytes;\n  }\n  /**\n   * If `true`\x2C`socket.connect(options[\x2C connectListener])` was\n   * called and has not yet finished. It will stay `true` until the socket becomes\n   * connected\x2C then it is set to `false` and the `"connect"` event is emitted. Note\n   * that the `socket.connect(options[\x2C connectListener])` callback is a listener for the `"connect"` event.\n   */ connecting = false;\n  /**\n   * The string representation of the local IP address the remote client is\n   * connecting on. For example\x2C in a server listening on `"0.0.0.0"`\x2C if a client\n   * connects on `"192.168.1.1"`\x2C the value of `socket.localAddress` would be`"192.168.1.1"`.\n   */ get localAddress() {\n    return this._getsockname().address;\n  }\n  /**\n   * The numeric representation of the local port. For example\x2C `80` or `21`.\n   */ get localPort() {\n    return this._getsockname().port;\n  }\n  /**\n   * The string representation of the local IP family. `"IPv4"` or `"IPv6"`.\n   */ get localFamily() {\n    return this._getsockname().family;\n  }\n  /**\n   * The string representation of the remote IP address. For example\x2C`"74.125.127.100"` or `"2001:4860:a005::68"`. Value may be `undefined` if\n   * the socket is destroyed (for example\x2C if the client disconnected).\n   */ get remoteAddress() {\n    return this._getpeername().address;\n  }\n  /**\n   * The string representation of the remote IP family. `"IPv4"` or `"IPv6"`.\n   */ get remoteFamily() {\n    const { family } = this._getpeername();\n    return family ? `IPv${family}` : family;\n  }\n  /**\n   * The numeric representation of the remote port. For example\x2C `80` or `21`.\n   */ get remotePort() {\n    return this._getpeername().port;\n  }\n  get pending() {\n    return !this._handle || this.connecting;\n  }\n  get readyState() {\n    if (this.connecting) {\n      return "opening";\n    } else if (this.readable && this.writable) {\n      return "open";\n    } else if (this.readable && !this.writable) {\n      return "readOnly";\n    } else if (!this.readable && this.writable) {\n      return "writeOnly";\n    }\n    return "closed";\n  }\n  end(data\x2C encoding\x2C cb) {\n    Duplex.prototype.end.call(this\x2C data\x2C encoding\x2C cb);\n    DTRACE_NET_STREAM_END(this);\n    return this;\n  }\n  /**\n   * @param size Optional argument to specify how much data to read.\n   */ read(size) {\n    if (this[kBuffer] && !this.connecting && this._handle && !this._handle.reading) {\n      _tryReadStart(this);\n    }\n    return Duplex.prototype.read.call(this\x2C size);\n  }\n  destroySoon() {\n    if (this.writable) {\n      this.end();\n    }\n    if (this.writableFinished) {\n      this.destroy();\n    } else {\n      this.once("finish"\x2C this.destroy);\n    }\n  }\n  _unrefTimer() {\n    // deno-lint-ignore no-this-alias\n    for(let s = this; s !== null; s = s._parent){\n      if (s[kTimeout]) {\n        s[kTimeout].refresh();\n      }\n    }\n  }\n  // The user has called .end()\x2C and all the bytes have been\n  // sent out to the other side.\n  // deno-lint-ignore no-explicit-any\n  _final(cb) {\n    // If still connecting - defer handling `_final` until 'connect' will happen\n    if (this.pending) {\n      debug("_final: not yet connected");\n      return this.once("connect"\x2C ()=>this._final(cb));\n    }\n    if (!this._handle) {\n      return cb();\n    }\n    debug("_final: not ended\x2C call shutdown()");\n    const req = new ShutdownWrap();\n    req.oncomplete = _afterShutdown;\n    req.handle = this._handle;\n    req.callback = cb;\n    const err = this._handle.shutdown(req);\n    if (err === 1 || err === codeMap.get("ENOTCONN")) {\n      // synchronous finish\n      return cb();\n    } else if (err !== 0) {\n      return cb(errnoException(err\x2C "shutdown"));\n    }\n  }\n  _onTimeout() {\n    const handle = this._handle;\n    const lastWriteQueueSize = this[kLastWriteQueueSize];\n    if (lastWriteQueueSize > 0 && handle) {\n      // `lastWriteQueueSize !== writeQueueSize` means there is\n      // an active write in progress\x2C so we suppress the timeout.\n      const { writeQueueSize } = handle;\n      if (lastWriteQueueSize !== writeQueueSize) {\n        this[kLastWriteQueueSize] = writeQueueSize;\n        this._unrefTimer();\n        return;\n      }\n    }\n    debug("_onTimeout");\n    this.emit("timeout");\n  }\n  _read(size) {\n    debug("_read");\n    if (this.connecting || !this._handle) {\n      debug("_read wait for connection");\n      this.once("connect"\x2C ()=>this._read(size));\n    } else if (!this._handle.reading) {\n      _tryReadStart(this);\n    }\n  }\n  _destroy(exception\x2C cb) {\n    debug("destroy");\n    this.connecting = false;\n    // deno-lint-ignore no-this-alias\n    for(let s = this; s !== null; s = s._parent){\n      clearTimeout(s[kTimeout]);\n    }\n    debug("close");\n    if (this._handle) {\n      debug("close handle");\n      const isException = exception ? true : false;\n      // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\n      this[kBytesRead] = this._handle.bytesRead;\n      this[kBytesWritten] = this._handle.bytesWritten;\n      this._handle.close(()=>{\n        this._handle.onread = _noop;\n        this._handle = null;\n        this._sockname = undefined;\n        debug("emit close");\n        this.emit("close"\x2C isException);\n      });\n      cb(exception);\n    } else {\n      cb(exception);\n      nextTick(_emitCloseNT\x2C this);\n    }\n    if (this._server) {\n      debug("has server");\n      this._server._connections--;\n      if (this._server._emitCloseIfDrained) {\n        this._server._emitCloseIfDrained();\n      }\n    }\n  }\n  _getpeername() {\n    if (!this._handle || !("getpeername" in this._handle) || this.connecting) {\n      return this._peername || {};\n    } else if (!this._peername) {\n      this._peername = {};\n      this._handle.getpeername(this._peername);\n    }\n    return this._peername;\n  }\n  _getsockname() {\n    if (!this._handle || !("getsockname" in this._handle)) {\n      return {};\n    } else if (!this._sockname) {\n      this._sockname = {};\n      this._handle.getsockname(this._sockname);\n    }\n    return this._sockname;\n  }\n  _writeGeneric(writev\x2C // deno-lint-ignore no-explicit-any\n  data\x2C encoding\x2C cb) {\n    // If we are still connecting\x2C then buffer this for later.\n    // The Writable logic will buffer up any more writes while\n    // waiting for this one to be done.\n    if (this.connecting) {\n      this._pendingData = data;\n      this._pendingEncoding = encoding;\n      this.once("connect"\x2C function connect() {\n        this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\n      });\n      return;\n    }\n    this._pendingData = null;\n    this._pendingEncoding = "";\n    if (!this._handle) {\n      cb(new ERR_SOCKET_CLOSED());\n      return false;\n    }\n    this._unrefTimer();\n    let req;\n    if (writev) {\n      req = writevGeneric(this\x2C data\x2C cb);\n    } else {\n      req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\n    }\n    if (req.async) {\n      this[kLastWriteQueueSize] = req.bytes;\n    }\n  }\n  // @ts-ignore Duplex defining as a property when want a method.\n  _writev(// deno-lint-ignore no-explicit-any\n  chunks\x2C cb) {\n    this._writeGeneric(true\x2C chunks\x2C ""\x2C cb);\n  }\n  _write(// deno-lint-ignore no-explicit-any\n  data\x2C encoding\x2C cb) {\n    this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\n  }\n  [kAfterAsyncWrite]() {\n    this[kLastWriteQueueSize] = 0;\n  }\n  get [kUpdateTimer]() {\n    return this._unrefTimer;\n  }\n  get _connecting() {\n    return this.connecting;\n  }\n  // Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\n  // really hurt anyone either. This can probably be removed safely if desired.\n  get _bytesDispatched() {\n    return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\n  }\n  get _handle() {\n    return this[kHandle];\n  }\n  set _handle(v) {\n    this[kHandle] = v;\n  }\n}\nexport const Stream = Socket;\nexport function connect(...args) {\n  const normalized = _normalizeArgs(args);\n  const options = normalized[0];\n  debug("createConnection"\x2C normalized);\n  const socket = new Socket(options);\n  if (netClientSocketChannel.hasSubscribers) {\n    netClientSocketChannel.publish({\n      socket\n    });\n  }\n  if (options.timeout) {\n    socket.setTimeout(options.timeout);\n  }\n  return socket.connect(normalized);\n}\nexport const createConnection = connect;\nfunction _isServerSocketOptions(options) {\n  return options === null || typeof options === "undefined" || typeof options === "object";\n}\nfunction _isConnectionListener(connectionListener) {\n  return typeof connectionListener === "function";\n}\nfunction _getFlags(ipv6Only) {\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\n}\nfunction _listenInCluster(server\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C exclusive\x2C flags) {\n  exclusive = !!exclusive;\n  // TODO(cmorten): here we deviate somewhat from the Node implementation which\n  // makes use of the https://nodejs.org/api/cluster.html module to run servers\n  // across a "cluster" of Node processes to take advantage of multi-core\n  // systems.\n  //\n  // Though Deno has has a Worker capability from which we could simulate this\x2C\n  // for now we assert that we are _always_ on the primary process.\n  const isPrimary = true;\n  if (isPrimary || exclusive) {\n    // Will create a new handle\n    // _listen2 sets up the listened handle\x2C it is still named like this\n    // to avoid breaking code that wraps this method\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\n    return;\n  }\n}\nfunction _lookupAndListen(server\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\n  dnsLookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\n    if (err) {\n      server.emit("error"\x2C err);\n    } else {\n      addressType = ip ? addressType : 4;\n      _listenInCluster(server\x2C ip\x2C port\x2C addressType\x2C backlog\x2C null\x2C exclusive\x2C flags);\n    }\n  });\n}\nfunction _addAbortSignalOption(server\x2C options) {\n  if (options?.signal === undefined) {\n    return;\n  }\n  validateAbortSignal(options.signal\x2C "options.signal");\n  const { signal } = options;\n  const onAborted = ()=>{\n    server.close();\n  };\n  if (signal.aborted) {\n    nextTick(onAborted);\n  } else {\n    signal.addEventListener("abort"\x2C onAborted);\n    server.once("close"\x2C ()=>signal.removeEventListener("abort"\x2C onAborted));\n  }\n}\n// Returns handle if it can be created\x2C or error code if it can't\nexport function _createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\n  let err = 0;\n  // Assign handle in listen\x2C and clean up if bind or listen fails\n  let handle;\n  let isTCP = false;\n  if (typeof fd === "number" && fd >= 0) {\n    try {\n      handle = _createHandle(fd\x2C true);\n    } catch (e) {\n      // Not a fd we can listen on. This will trigger an error.\n      debug("listen invalid fd=%d:"\x2C fd\x2C e.message);\n      return codeMap.get("EINVAL");\n    }\n    err = handle.open(fd);\n    if (err) {\n      return err;\n    }\n    assert(!address && !port);\n  } else if (port === -1 && addressType === -1) {\n    handle = new Pipe(PipeConstants.SERVER);\n    if (isWindows) {\n      const instances = Number.parseInt(Deno.env.get("NODE_PENDING_PIPE_INSTANCES") ?? "");\n      if (!Number.isNaN(instances)) {\n        handle.setPendingInstances(instances);\n      }\n    }\n  } else {\n    handle = new TCP(TCPConstants.SERVER);\n    isTCP = true;\n  }\n  if (address || port || isTCP) {\n    debug("bind to"\x2C address || "any");\n    if (!address) {\n      // TODO(@bartlomieju): differs from Node which tries to bind to IPv6 first when no\n      // address is provided.\n      //\n      // Forcing IPv4 as a workaround for Deno not aligning with Node on\n      // implicit binding on Windows.\n      //\n      // REF: https://github.com/denoland/deno/issues/10762\n      // Try binding to ipv6 first\n      // err = (handle as TCP).bind6(DEFAULT_IPV6_ADDR\x2C port ?? 0\x2C flags ?? 0);\n      // if (err) {\n      //   handle.close();\n      // Fallback to ipv4\n      return _createServerHandle(DEFAULT_IPV4_ADDR\x2C port\x2C 4\x2C null\x2C flags);\n    // }\n    } else if (addressType === 6) {\n      err = handle.bind6(address\x2C port ?? 0\x2C flags ?? 0);\n    } else {\n      err = handle.bind(address\x2C port ?? 0);\n    }\n  }\n  if (err) {\n    handle.close();\n    return err;\n  }\n  return handle;\n}\nfunction _emitErrorNT(server\x2C err) {\n  server.emit("error"\x2C err);\n}\nfunction _emitListeningNT(server) {\n  // Ensure handle hasn't closed\n  if (server._handle) {\n    server.emit("listening");\n  }\n}\n// deno-lint-ignore no-explicit-any\nfunction _onconnection(err\x2C clientHandle) {\n  // deno-lint-ignore no-this-alias\n  const handle = this;\n  const self = handle[ownerSymbol];\n  debug("onconnection");\n  if (err) {\n    self.emit("error"\x2C errnoException(err\x2C "accept"));\n    return;\n  }\n  if (self.maxConnections && self._connections >= self.maxConnections) {\n    clientHandle.close();\n    return;\n  }\n  const socket = self._createSocket(clientHandle);\n  this._connections++;\n  self.emit("connection"\x2C socket);\n  if (netServerSocketChannel.hasSubscribers) {\n    netServerSocketChannel.publish({\n      socket\n    });\n  }\n}\nfunction _setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\n  debug("setupListenHandle"\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\n  // If there is not yet a handle\x2C we need to create one and bind.\n  // In the case of a server sent via IPC\x2C we don't need to do this.\n  if (this._handle) {\n    debug("setupListenHandle: have a handle already");\n  } else {\n    debug("setupListenHandle: create a handle");\n    let rval = null;\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\n    if (!address && typeof fd !== "number") {\n      // TODO(@bartlomieju): differs from Node which tries to bind to IPv6 first\n      // when no address is provided.\n      //\n      // Forcing IPv4 as a workaround for Deno not aligning with Node on\n      // implicit binding on Windows.\n      //\n      // REF: https://github.com/denoland/deno/issues/10762\n      // rval = _createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\n      // if (typeof rval === "number") {\n      //   rval = null;\n      address = DEFAULT_IPV4_ADDR;\n      addressType = 4;\n    // } else {\n    //   address = DEFAULT_IPV6_ADDR;\n    //   addressType = 6;\n    // }\n    }\n    if (rval === null) {\n      rval = _createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\n    }\n    if (typeof rval === "number") {\n      const error = uvExceptionWithHostPort(rval\x2C "listen"\x2C address\x2C port);\n      nextTick(_emitErrorNT\x2C this\x2C error);\n      return;\n    }\n    this._handle = rval;\n  }\n  this[asyncIdSymbol] = _getNewAsyncId(this._handle);\n  this._handle.onconnection = _onconnection;\n  this._handle[ownerSymbol] = this;\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\n  // which will thus give us a backlog of 512 entries.\n  const err = this._handle.listen(backlog || 511);\n  if (err) {\n    const ex = uvExceptionWithHostPort(err\x2C "listen"\x2C address\x2C port);\n    this._handle.close();\n    this._handle = null;\n    defaultTriggerAsyncIdScope(this[asyncIdSymbol]\x2C nextTick\x2C _emitErrorNT\x2C this\x2C ex);\n    return;\n  }\n  // Generate connection key\x2C this should be unique to the connection\n  this._connectionKey = addressType + ":" + address + ":" + port;\n  // Unref the handle if the server was unref'ed prior to listening\n  if (this._unref) {\n    this.unref();\n  }\n  defaultTriggerAsyncIdScope(this[asyncIdSymbol]\x2C nextTick\x2C _emitListeningNT\x2C this);\n}\n/** This class is used to create a TCP or IPC server. */ export class Server extends EventEmitter {\n  [asyncIdSymbol] = -1;\n  allowHalfOpen = false;\n  pauseOnConnect = false;\n  // deno-lint-ignore no-explicit-any\n  _handle = null;\n  _connections = 0;\n  _usingWorkers = false;\n  // deno-lint-ignore no-explicit-any\n  _workers = [];\n  _unref = false;\n  _pipeName;\n  _connectionKey;\n  constructor(options\x2C connectionListener){\n    super();\n    if (_isConnectionListener(options)) {\n      this.on("connection"\x2C options);\n    } else if (_isServerSocketOptions(options)) {\n      this.allowHalfOpen = options?.allowHalfOpen || false;\n      this.pauseOnConnect = !!options?.pauseOnConnect;\n      if (_isConnectionListener(connectionListener)) {\n        this.on("connection"\x2C connectionListener);\n      }\n    } else {\n      throw new ERR_INVALID_ARG_TYPE("options"\x2C "Object"\x2C options);\n    }\n  }\n  listen(...args) {\n    const normalized = _normalizeArgs(args);\n    let options = normalized[0];\n    const cb = normalized[1];\n    if (this._handle) {\n      throw new ERR_SERVER_ALREADY_LISTEN();\n    }\n    if (cb !== null) {\n      this.once("listening"\x2C cb);\n    }\n    const backlogFromArgs = // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\n    _toNumber(args.length > 1 && args[1]) || _toNumber(args.length > 2 && args[2]); // (port\x2C host\x2C backlog)\n    // deno-lint-ignore no-explicit-any\n    options = options._handle || options.handle || options;\n    const flags = _getFlags(options.ipv6Only);\n    // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\n    if (options instanceof TCP) {\n      this._handle = options;\n      this[asyncIdSymbol] = this._handle.getAsyncId();\n      _listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\n      return this;\n    }\n    _addAbortSignalOption(this\x2C options);\n    // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\n    if (typeof options.fd === "number" && options.fd >= 0) {\n      _listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\n      return this;\n    }\n    // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\n    // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\n    // or (options[\x2C cb]) where options.port is explicitly set as undefined or\n    // null\x2C bind to an arbitrary unused port\n    if (args.length === 0 || typeof args[0] === "function" || typeof options.port === "undefined" && "port" in options || options.port === null) {\n      options.port = 0;\n    }\n    // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\n    // or (options[\x2C cb]) where options.port is specified\n    // or if options.port is normalized as 0 before\n    let backlog;\n    if (typeof options.port === "number" || typeof options.port === "string") {\n      validatePort(options.port\x2C "options.port");\n      backlog = options.backlog || backlogFromArgs;\n      // start TCP server listening on host:port\n      if (options.host) {\n        _lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C !!options.exclusive\x2C flags);\n      } else {\n        // Undefined host\x2C listens on unspecified address\n        // Default addressType 4 will be used to search for primary server\n        _listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C backlog\x2C undefined\x2C options.exclusive);\n      }\n      return this;\n    }\n    // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\n    // where path or options.path is a UNIX domain socket or Windows pipe\n    if (options.path && _isPipeName(options.path)) {\n      const pipeName = this._pipeName = options.path;\n      backlog = options.backlog || backlogFromArgs;\n      _listenInCluster(this\x2C pipeName\x2C -1\x2C -1\x2C backlog\x2C undefined\x2C options.exclusive);\n      if (!this._handle) {\n        // Failed and an error shall be emitted in the next tick.\n        // Therefore\x2C we directly return.\n        return this;\n      }\n      let mode = 0;\n      if (options.readableAll === true) {\n        mode |= PipeConstants.UV_READABLE;\n      }\n      if (options.writableAll === true) {\n        mode |= PipeConstants.UV_WRITABLE;\n      }\n      if (mode !== 0) {\n        const err = this._handle.fchmod(mode);\n        if (err) {\n          this._handle.close();\n          this._handle = null;\n          throw errnoException(err\x2C "uv_pipe_chmod");\n        }\n      }\n      return this;\n    }\n    if (!("port" in options || "path" in options)) {\n      throw new ERR_INVALID_ARG_VALUE("options"\x2C options\x2C 'must have the property "port" or "path"');\n    }\n    throw new ERR_INVALID_ARG_VALUE("options"\x2C options);\n  }\n  /**\n   * Stops the server from accepting new connections and keeps existing\n   * connections. This function is asynchronous\x2C the server is finally closed\n   * when all connections are ended and the server emits a `"close"` event.\n   * The optional `callback` will be called once the `"close"` event occurs. Unlike\n   * that event\x2C it will be called with an `Error` as its only argument if the server\n   * was not open when it was closed.\n   *\n   * @param cb Called when the server is closed.\n   */ close(cb) {\n    if (typeof cb === "function") {\n      if (!this._handle) {\n        this.once("close"\x2C function close() {\n          cb(new ERR_SERVER_NOT_RUNNING());\n        });\n      } else {\n        this.once("close"\x2C cb);\n      }\n    }\n    if (this._handle) {\n      this._handle.close();\n      this._handle = null;\n    }\n    if (this._usingWorkers) {\n      let left = this._workers.length;\n      const onWorkerClose = ()=>{\n        if (--left !== 0) {\n          return;\n        }\n        this._connections = 0;\n        this._emitCloseIfDrained();\n      };\n      // Increment connections to be sure that\x2C even if all sockets will be closed\n      // during polling of workers\x2C `close` event will be emitted only once.\n      this._connections++;\n      // Poll workers\n      for(let n = 0; n < this._workers.length; n++){\n        this._workers[n].close(onWorkerClose);\n      }\n    } else {\n      this._emitCloseIfDrained();\n    }\n    return this;\n  }\n  /**\n   * Returns the bound `address`\x2C the address `family` name\x2C and `port` of the server\n   * as reported by the operating system if listening on an IP socket\n   * (useful to find which port was assigned when getting an OS-assigned address):`{ port: 12346\x2C family: "IPv4"\x2C address: "127.0.0.1" }`.\n   *\n   * For a server listening on a pipe or Unix domain socket\x2C the name is returned\n   * as a string.\n   *\n   * `server.address()` returns `null` before the `"listening"` event has been\n   * emitted or after calling `server.close()`.\n   */ address() {\n    if (this._handle && this._handle.getsockname) {\n      const out = {};\n      const err = this._handle.getsockname(out);\n      if (err) {\n        throw errnoException(err\x2C "address");\n      }\n      return out;\n    } else if (this._pipeName) {\n      return this._pipeName;\n    }\n    return null;\n  }\n  /**\n   * Asynchronously get the number of concurrent connections on the server. Works\n   * when sockets were sent to forks.\n   *\n   * Callback should take two arguments `err` and `count`.\n   */ getConnections(cb) {\n    // deno-lint-ignore no-this-alias\n    const server = this;\n    function end(err\x2C connections) {\n      defaultTriggerAsyncIdScope(server[asyncIdSymbol]\x2C nextTick\x2C cb\x2C err\x2C connections);\n    }\n    if (!this._usingWorkers) {\n      end(null\x2C this._connections);\n      return this;\n    }\n    // Poll workers\n    let left = this._workers.length;\n    let total = this._connections;\n    function oncount(err\x2C count) {\n      if (err) {\n        left = -1;\n        return end(err);\n      }\n      total += count;\n      if (--left === 0) {\n        return end(null\x2C total);\n      }\n    }\n    for(let n = 0; n < this._workers.length; n++){\n      this._workers[n].getConnections(oncount);\n    }\n    return this;\n  }\n  /**\n   * Calling `unref()` on a server will allow the program to exit if this is the only\n   * active server in the event system. If the server is already `unref`ed calling `unref()` again will have no effect.\n   */ unref() {\n    this._unref = true;\n    if (this._handle) {\n      this._handle.unref();\n    }\n    return this;\n  }\n  /**\n   * Opposite of `unref()`\x2C calling `ref()` on a previously `unref`ed server will _not_ let the program exit if it's the only server left (the default behavior).\n   * If the server is `ref`ed calling `ref()` again will have no effect.\n   */ ref() {\n    this._unref = false;\n    if (this._handle) {\n      this._handle.ref();\n    }\n    return this;\n  }\n  /**\n   * Indicates whether or not the server is listening for connections.\n   */ get listening() {\n    return !!this._handle;\n  }\n  _createSocket(clientHandle) {\n    const socket = new Socket({\n      handle: clientHandle\x2C\n      allowHalfOpen: this.allowHalfOpen\x2C\n      pauseOnCreate: this.pauseOnConnect\x2C\n      readable: true\x2C\n      writable: true\n    });\n    // TODO(@bartlomieju): implement noDelay and setKeepAlive\n    socket.server = this;\n    socket._server = this;\n    DTRACE_NET_SERVER_CONNECTION(socket);\n    return socket;\n  }\n  _listen2 = _setupListenHandle;\n  _emitCloseIfDrained() {\n    debug("SERVER _emitCloseIfDrained");\n    if (this._handle || this._connections) {\n      debug(`SERVER handle? ${!!this._handle}   connections? ${this._connections}`);\n      return;\n    }\n    // We use setTimeout instead of nextTick here to avoid EADDRINUSE error\n    // when the same port listened immediately after the 'close' event.\n    // ref: https://github.com/denoland/deno_std/issues/2788\n    defaultTriggerAsyncIdScope(this[asyncIdSymbol]\x2C setTimeout\x2C _emitCloseNT\x2C 0\x2C this);\n  }\n  _setupWorker(socketList) {\n    this._usingWorkers = true;\n    this._workers.push(socketList);\n    // deno-lint-ignore no-explicit-any\n    socketList.once("exit"\x2C (socketList)=>{\n      const index = this._workers.indexOf(socketList);\n      this._workers.splice(index\x2C 1);\n    });\n  }\n  [EventEmitter.captureRejectionSymbol](err\x2C event\x2C sock) {\n    switch(event){\n      case "connection":\n        {\n          sock.destroy(err);\n          break;\n        }\n      default:\n        {\n          this.emit("error"\x2C err);\n        }\n    }\n  }\n}\n/**\n * Creates a new TCP or IPC server.\n *\n * Accepts an `options` object with properties `allowHalfOpen` (default `false`)\n * and `pauseOnConnect` (default `false`).\n *\n * If `allowHalfOpen` is set to `false`\x2C then the socket will\n * automatically end the writable side when the readable side ends.\n *\n * If `allowHalfOpen` is set to `true`\x2C when the other end of the socket\n * signals the end of transmission\x2C the server will only send back the end of\n * transmission when `socket.end()` is explicitly called. For example\x2C in the\n * context of TCP\x2C when a FIN packed is received\x2C a FIN packed is sent back\n * only when `socket.end()` is explicitly called. Until then the connection is\n * half-closed (non-readable but still writable). See `"end"` event and RFC 1122\n * (section 4.2.2.13) for more information.\n *\n * `pauseOnConnect` indicates whether the socket should be paused on incoming\n * connections.\n *\n * If `pauseOnConnect` is set to `true`\x2C then the socket associated with each\n * incoming connection will be paused\x2C and no data will be read from its\n * handle. This allows connections to be passed between processes without any\n * data being read by the original process. To begin reading data from a paused\n * socket\x2C call `socket.resume()`.\n *\n * The server can be a TCP server or an IPC server\x2C depending on what it\n * `listen()` to.\n *\n * Here is an example of an TCP echo server which listens for connections on\n * port 8124:\n *\n * @param options Socket options.\n * @param connectionListener Automatically set as a listener for the `"connection"` event.\n * @return A `net.Server`.\n */ export function createServer(options\x2C connectionListener) {\n  return new Server(options\x2C connectionListener);\n}\nexport { isIP\x2C isIPv4\x2C isIPv6 };\nexport default {\n  _createServerHandle\x2C\n  _normalizeArgs\x2C\n  isIP\x2C\n  isIPv4\x2C\n  isIPv6\x2C\n  connect\x2C\n  createConnection\x2C\n  createServer\x2C\n  Server\x2C\n  Socket\x2C\n  Stream\n};\n
code-source-info,0x1123fa
tick,0x185290a28,72583,0,0x0,3,0x1123fa482452,0x1123fa4821b7,0x1123fa481fbe,0x1123fa481c26,0x1123fa481530
tick,0x105c38054,73000,0,0x0,0,0x1123fa48269b,0x1123fa482452,0x1123fa4821b7,0x1123fa481fbe,0x1123fa481c26,0x1123fa481530
code-creation,JS,10,73417,0x1123fa482848,162,Duplex ext:deno_node/_stream.mjs:4793:20,0xb815c25ad08,~
script-source,153,ext:deno_node/_stream.mjs,// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.\n// Copyright Joyent and Node contributors. All rights reserved. MIT license.\n// deno-fmt-ignore-file\n// deno-lint-ignore-file\nimport { nextTick } from "ext:deno_node/_next_tick.ts";\nimport { AbortController } from "ext:deno_web/03_abort_signal.js";\nimport { Blob } from "ext:deno_web/09_file.js";\nimport { StringDecoder } from "node:string_decoder";\nimport {\n  createDeferredPromise\x2C\n  kEmptyObject\x2C\n  normalizeEncoding\x2C\n  once\x2C\n  promisify\x2C\n} from "ext:deno_node/internal/util.mjs";\nimport {\n  isArrayBufferView\x2C\n  isAsyncFunction\x2C\n} from "ext:deno_node/internal/util/types.ts";\nimport { debuglog } from "ext:deno_node/internal/util/debuglog.ts";\nimport { inspect } from "ext:deno_node/internal/util/inspect.mjs";\n\nimport {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_INVALID_RETURN_VALUE\x2C\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\n  ERR_MISSING_ARGS\x2C\n  ERR_MULTIPLE_CALLBACK\x2C\n  ERR_OUT_OF_RANGE\x2C\n  ERR_SOCKET_BAD_PORT\x2C\n  ERR_STREAM_ALREADY_FINISHED\x2C\n  ERR_STREAM_CANNOT_PIPE\x2C\n  ERR_STREAM_DESTROYED\x2C\n  ERR_STREAM_NULL_VALUES\x2C\n  ERR_STREAM_PREMATURE_CLOSE\x2C\n  ERR_STREAM_PUSH_AFTER_EOF\x2C\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x2C\n  ERR_STREAM_WRITE_AFTER_END\x2C\n  ERR_UNKNOWN_ENCODING\x2C\n  ERR_UNKNOWN_SIGNAL\x2C\n  hideStackFrames\x2C\n} from "ext:deno_node/internal/errors.ts";\n\n/* esm.sh - esbuild bundle(readable-stream@4.2.0) es2022 production */\n// generated with\n// $ esbuild --bundle --legal-comments=none --target=es2022 --tree-shaking=true --format=esm .\n// ... then making sure the file uses the existing ext:deno_node stuff instead of bundling it\nimport __process$ from "node:process";\nimport __buffer$ from "node:buffer";\nimport __string_decoder$ from "node:string_decoder";\nimport __events$ from "node:events";\n\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __commonJS = (cb\x2C mod) =>\n  function __require() {\n    return mod ||\n      (0\x2C cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports\x2C mod)\x2C\n      mod.exports;\n  };\n\n// node_modules/buffer/index.js\nvar require_buffer = () => {\n  return __buffer$;\n};\n\n// lib/ours/errors.js\nvar require_primordials = __commonJS({\n  "lib/ours/primordials.js"(exports2\x2C module2) {\n    "use strict";\n    module2.exports = {\n      ArrayIsArray(self2) {\n        return Array.isArray(self2);\n      }\x2C\n      ArrayPrototypeIncludes(self2\x2C el) {\n        return self2.includes(el);\n      }\x2C\n      ArrayPrototypeIndexOf(self2\x2C el) {\n        return self2.indexOf(el);\n      }\x2C\n      ArrayPrototypeJoin(self2\x2C sep) {\n        return self2.join(sep);\n      }\x2C\n      ArrayPrototypeMap(self2\x2C fn) {\n        return self2.map(fn);\n      }\x2C\n      ArrayPrototypePop(self2\x2C el) {\n        return self2.pop(el);\n      }\x2C\n      ArrayPrototypePush(self2\x2C el) {\n        return self2.push(el);\n      }\x2C\n      ArrayPrototypeSlice(self2\x2C start\x2C end) {\n        return self2.slice(start\x2C end);\n      }\x2C\n      Error\x2C\n      FunctionPrototypeCall(fn\x2C thisArgs\x2C ...args) {\n        return fn.call(thisArgs\x2C ...args);\n      }\x2C\n      FunctionPrototypeSymbolHasInstance(self2\x2C instance) {\n        return Function.prototype[Symbol.hasInstance].call(self2\x2C instance);\n      }\x2C\n      MathFloor: Math.floor\x2C\n      Number\x2C\n      NumberIsInteger: Number.isInteger\x2C\n      NumberIsNaN: Number.isNaN\x2C\n      NumberMAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER\x2C\n      NumberMIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER\x2C\n      NumberParseInt: Number.parseInt\x2C\n      ObjectDefineProperties(self2\x2C props) {\n        return Object.defineProperties(self2\x2C props);\n      }\x2C\n      ObjectDefineProperty(self2\x2C name\x2C prop) {\n        return Object.defineProperty(self2\x2C name\x2C prop);\n      }\x2C\n      ObjectGetOwnPropertyDescriptor(self2\x2C name) {\n        return Object.getOwnPropertyDescriptor(self2\x2C name);\n      }\x2C\n      ObjectKeys(obj) {\n        return Object.keys(obj);\n      }\x2C\n      ObjectSetPrototypeOf(target\x2C proto) {\n        return Object.setPrototypeOf(target\x2C proto);\n      }\x2C\n      Promise\x2C\n      PromisePrototypeCatch(self2\x2C fn) {\n        return self2.catch(fn);\n      }\x2C\n      PromisePrototypeThen(self2\x2C thenFn\x2C catchFn) {\n        return self2.then(thenFn\x2C catchFn);\n      }\x2C\n      PromiseReject(err) {\n        return Promise.reject(err);\n      }\x2C\n      ReflectApply: Reflect.apply\x2C\n      RegExpPrototypeTest(self2\x2C value) {\n        return self2.test(value);\n      }\x2C\n      SafeSet: Set\x2C\n      String\x2C\n      StringPrototypeSlice(self2\x2C start\x2C end) {\n        return self2.slice(start\x2C end);\n      }\x2C\n      StringPrototypeToLowerCase(self2) {\n        return self2.toLowerCase();\n      }\x2C\n      StringPrototypeToUpperCase(self2) {\n        return self2.toUpperCase();\n      }\x2C\n      StringPrototypeTrim(self2) {\n        return self2.trim();\n      }\x2C\n      Symbol\x2C\n      SymbolAsyncIterator: Symbol.asyncIterator\x2C\n      SymbolHasInstance: Symbol.hasInstance\x2C\n      SymbolIterator: Symbol.iterator\x2C\n      TypedArrayPrototypeSet(self2\x2C buf\x2C len) {\n        return self2.set(buf\x2C len);\n      }\x2C\n      Uint8Array\x2C\n    };\n  }\x2C\n});\n\n// lib/internal/validators.js\nvar require_validators = __commonJS({\n  "lib/internal/validators.js"(exports\x2C module) {\n    "use strict";\n    var {\n      ArrayIsArray\x2C\n      ArrayPrototypeIncludes\x2C\n      ArrayPrototypeJoin\x2C\n      ArrayPrototypeMap\x2C\n      NumberIsInteger\x2C\n      NumberIsNaN\x2C\n      NumberMAX_SAFE_INTEGER\x2C\n      NumberMIN_SAFE_INTEGER\x2C\n      NumberParseInt\x2C\n      ObjectPrototypeHasOwnProperty\x2C\n      RegExpPrototypeExec\x2C\n      String: String2\x2C\n      StringPrototypeToUpperCase\x2C\n      StringPrototypeTrim\x2C\n    } = require_primordials();\n    var signals = {};\n    function isInt32(value) {\n      return value === (value | 0);\n    }\n    function isUint32(value) {\n      return value === value >>> 0;\n    }\n    var octalReg = /^[0-7]+$/;\n    var modeDesc = "must be a 32-bit unsigned integer or an octal string";\n    function parseFileMode(value\x2C name\x2C def) {\n      if (typeof value === "undefined") {\n        value = def;\n      }\n      if (typeof value === "string") {\n        if (RegExpPrototypeExec(octalReg\x2C value) === null) {\n          throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\n        }\n        value = NumberParseInt(value\x2C 8);\n      }\n      validateUint32(value\x2C name);\n      return value;\n    }\n    var validateInteger = hideStackFrames(\n      (\n        value\x2C\n        name\x2C\n        min = NumberMIN_SAFE_INTEGER\x2C\n        max = NumberMAX_SAFE_INTEGER\x2C\n      ) => {\n        if (typeof value !== "number") {\n          throw new ERR_INVALID_ARG_TYPE(name\x2C "number"\x2C value);\n        }\n        if (!NumberIsInteger(value)) {\n          throw new ERR_OUT_OF_RANGE(name\x2C "an integer"\x2C value);\n        }\n        if (value < min || value > max) {\n          throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n        }\n      }\x2C\n    );\n    var validateInt32 = hideStackFrames(\n      (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\n        if (typeof value !== "number") {\n          throw new ERR_INVALID_ARG_TYPE(name\x2C "number"\x2C value);\n        }\n        if (!NumberIsInteger(value)) {\n          throw new ERR_OUT_OF_RANGE(name\x2C "an integer"\x2C value);\n        }\n        if (value < min || value > max) {\n          throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n        }\n      }\x2C\n    );\n    var validateUint32 = hideStackFrames((value\x2C name\x2C positive = false) => {\n      if (typeof value !== "number") {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C "number"\x2C value);\n      }\n      if (!NumberIsInteger(value)) {\n        throw new ERR_OUT_OF_RANGE(name\x2C "an integer"\x2C value);\n      }\n      const min = positive ? 1 : 0;\n      const max = 4294967295;\n      if (value < min || value > max) {\n        throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n      }\n    });\n    function validateString(value\x2C name) {\n      if (typeof value !== "string") {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C "string"\x2C value);\n      }\n    }\n    function validateNumber(value\x2C name\x2C min = void 0\x2C max) {\n      if (typeof value !== "number") {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C "number"\x2C value);\n      }\n      if (\n        min != null && value < min || max != null && value > max ||\n        (min != null || max != null) && NumberIsNaN(value)\n      ) {\n        throw new ERR_OUT_OF_RANGE(\n          name\x2C\n          `${min != null ? `>= ${min}` : ""}${\n            min != null && max != null ? " && " : ""\n          }${max != null ? `<= ${max}` : ""}`\x2C\n          value\x2C\n        );\n      }\n    }\n    var validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\n      if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\n        const allowed = ArrayPrototypeJoin(\n          ArrayPrototypeMap(\n            oneOf\x2C\n            (v) => typeof v === "string" ? `'${v}'` : String2(v)\x2C\n          )\x2C\n          "\x2C "\x2C\n        );\n        const reason = "must be one of: " + allowed;\n        throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n      }\n    });\n    function validateBoolean(value\x2C name) {\n      if (typeof value !== "boolean") {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C "boolean"\x2C value);\n      }\n    }\n    function getOwnPropertyValueOrDefault(options\x2C key\x2C defaultValue) {\n      return options == null || !ObjectPrototypeHasOwnProperty(options\x2C key)\n        ? defaultValue\n        : options[key];\n    }\n    var validateObject = hideStackFrames((value\x2C name\x2C options = null) => {\n      const allowArray = getOwnPropertyValueOrDefault(\n        options\x2C\n        "allowArray"\x2C\n        false\x2C\n      );\n      const allowFunction = getOwnPropertyValueOrDefault(\n        options\x2C\n        "allowFunction"\x2C\n        false\x2C\n      );\n      const nullable = getOwnPropertyValueOrDefault(options\x2C "nullable"\x2C false);\n      if (\n        !nullable && value === null || !allowArray && ArrayIsArray(value) ||\n        typeof value !== "object" &&\n          (!allowFunction || typeof value !== "function")\n      ) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C "Object"\x2C value);\n      }\n    });\n    var validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\n      if (!ArrayIsArray(value)) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C "Array"\x2C value);\n      }\n      if (value.length < minLength) {\n        const reason = `must be longer than ${minLength}`;\n        throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n      }\n    });\n    function validateSignalName(signal\x2C name = "signal") {\n      validateString(signal\x2C name);\n      if (signals[signal] === void 0) {\n        if (signals[StringPrototypeToUpperCase(signal)] !== void 0) {\n          throw new ERR_UNKNOWN_SIGNAL(\n            signal + " (signals must use all capital letters)"\x2C\n          );\n        }\n        throw new ERR_UNKNOWN_SIGNAL(signal);\n      }\n    }\n    var validateBuffer = hideStackFrames((buffer\x2C name = "buffer") => {\n      if (!isArrayBufferView(buffer)) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C [\n          "Buffer"\x2C\n          "TypedArray"\x2C\n          "DataView"\x2C\n        ]\x2C buffer);\n      }\n    });\n    function validateEncoding(data\x2C encoding) {\n      const normalizedEncoding = normalizeEncoding(encoding);\n      const length = data.length;\n      if (normalizedEncoding === "hex" && length % 2 !== 0) {\n        throw new ERR_INVALID_ARG_VALUE(\n          "encoding"\x2C\n          encoding\x2C\n          `is invalid for data of length ${length}`\x2C\n        );\n      }\n    }\n    function validatePort(port\x2C name = "Port"\x2C allowZero = true) {\n      if (\n        typeof port !== "number" && typeof port !== "string" ||\n        typeof port === "string" && StringPrototypeTrim(port).length === 0 ||\n        +port !== +port >>> 0 || port > 65535 || port === 0 && !allowZero\n      ) {\n        throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\n      }\n      return port | 0;\n    }\n    var validateAbortSignal = hideStackFrames((signal\x2C name) => {\n      if (\n        signal !== void 0 &&\n        (signal === null || typeof signal !== "object" ||\n          !("aborted" in signal))\n      ) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C "AbortSignal"\x2C signal);\n      }\n    });\n    var validateFunction = hideStackFrames((value\x2C name) => {\n      if (typeof value !== "function") {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C "Function"\x2C value);\n      }\n    });\n    var validatePlainFunction = hideStackFrames((value\x2C name) => {\n      if (typeof value !== "function" || isAsyncFunction(value)) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C "Function"\x2C value);\n      }\n    });\n    var validateUndefined = hideStackFrames((value\x2C name) => {\n      if (value !== void 0) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C "undefined"\x2C value);\n      }\n    });\n    function validateUnion(value\x2C name\x2C union) {\n      if (!ArrayPrototypeIncludes(union\x2C value)) {\n        throw new ERR_INVALID_ARG_TYPE(\n          name\x2C\n          `('${ArrayPrototypeJoin(union\x2C "|")}')`\x2C\n          value\x2C\n        );\n      }\n    }\n    module.exports = {\n      isInt32\x2C\n      isUint32\x2C\n      parseFileMode\x2C\n      validateArray\x2C\n      validateBoolean\x2C\n      validateBuffer\x2C\n      validateEncoding\x2C\n      validateFunction\x2C\n      validateInt32\x2C\n      validateInteger\x2C\n      validateNumber\x2C\n      validateObject\x2C\n      validateOneOf\x2C\n      validatePlainFunction\x2C\n      validatePort\x2C\n      validateSignalName\x2C\n      validateString\x2C\n      validateUint32\x2C\n      validateUndefined\x2C\n      validateUnion\x2C\n      validateAbortSignal\x2C\n    };\n  }\x2C\n});\n\n// node_modules/process/browser.js\nvar require_browser2 = () => {\n  return __process$;\n};\n\n// lib/internal/streams/utils.js\nvar require_utils = __commonJS({\n  "lib/internal/streams/utils.js"(exports\x2C module) {\n    "use strict";\n    var { Symbol: Symbol2\x2C SymbolAsyncIterator\x2C SymbolIterator } =\n      require_primordials();\n    var kDestroyed = Symbol2("kDestroyed");\n    var kIsErrored = Symbol2("kIsErrored");\n    var kIsReadable = Symbol2("kIsReadable");\n    var kIsDisturbed = Symbol2("kIsDisturbed");\n    function isReadableNodeStream(obj\x2C strict = false) {\n      var _obj$_readableState;\n      return !!(obj && typeof obj.pipe === "function" &&\n        typeof obj.on === "function" &&\n        (!strict ||\n          typeof obj.pause === "function" &&\n            typeof obj.resume === "function") &&\n        (!obj._writableState ||\n          ((_obj$_readableState = obj._readableState) === null ||\n                _obj$_readableState === void 0\n              ? void 0\n              : _obj$_readableState.readable) !== false) && // Duplex\n        (!obj._writableState || obj._readableState));\n    }\n    function isWritableNodeStream(obj) {\n      var _obj$_writableState;\n      return !!(obj && typeof obj.write === "function" &&\n        typeof obj.on === "function" &&\n        (!obj._readableState ||\n          ((_obj$_writableState = obj._writableState) === null ||\n                _obj$_writableState === void 0\n              ? void 0\n              : _obj$_writableState.writable) !== false));\n    }\n    function isDuplexNodeStream(obj) {\n      return !!(obj && typeof obj.pipe === "function" && obj._readableState &&\n        typeof obj.on === "function" && typeof obj.write === "function");\n    }\n    function isNodeStream(obj) {\n      return obj &&\n        (obj._readableState || obj._writableState ||\n          typeof obj.write === "function" && typeof obj.on === "function" ||\n          typeof obj.pipe === "function" && typeof obj.on === "function");\n    }\n    function isIterable(obj\x2C isAsync) {\n      if (obj == null) {\n        return false;\n      }\n      if (isAsync === true) {\n        return typeof obj[SymbolAsyncIterator] === "function";\n      }\n      if (isAsync === false) {\n        return typeof obj[SymbolIterator] === "function";\n      }\n      return typeof obj[SymbolAsyncIterator] === "function" ||\n        typeof obj[SymbolIterator] === "function";\n    }\n    function isDestroyed(stream) {\n      if (!isNodeStream(stream)) {\n        return null;\n      }\n      const wState = stream._writableState;\n      const rState = stream._readableState;\n      const state = wState || rState;\n      return !!(stream.destroyed || stream[kDestroyed] ||\n        state !== null && state !== void 0 && state.destroyed);\n    }\n    function isWritableEnded(stream) {\n      if (!isWritableNodeStream(stream)) {\n        return null;\n      }\n      if (stream.writableEnded === true) {\n        return true;\n      }\n      const wState = stream._writableState;\n      if (wState !== null && wState !== void 0 && wState.errored) {\n        return false;\n      }\n      if (\n        typeof (wState === null || wState === void 0\n          ? void 0\n          : wState.ended) !== "boolean"\n      ) {\n        return null;\n      }\n      return wState.ended;\n    }\n    function isWritableFinished(stream\x2C strict) {\n      if (!isWritableNodeStream(stream)) {\n        return null;\n      }\n      if (stream.writableFinished === true) {\n        return true;\n      }\n      const wState = stream._writableState;\n      if (wState !== null && wState !== void 0 && wState.errored) {\n        return false;\n      }\n      if (\n        typeof (wState === null || wState === void 0\n          ? void 0\n          : wState.finished) !== "boolean"\n      ) {\n        return null;\n      }\n      return !!(wState.finished ||\n        strict === false && wState.ended === true && wState.length === 0);\n    }\n    function isReadableEnded(stream) {\n      if (!isReadableNodeStream(stream)) {\n        return null;\n      }\n      if (stream.readableEnded === true) {\n        return true;\n      }\n      const rState = stream._readableState;\n      if (!rState || rState.errored) {\n        return false;\n      }\n      if (\n        typeof (rState === null || rState === void 0\n          ? void 0\n          : rState.ended) !== "boolean"\n      ) {\n        return null;\n      }\n      return rState.ended;\n    }\n    function isReadableFinished(stream\x2C strict) {\n      if (!isReadableNodeStream(stream)) {\n        return null;\n      }\n      const rState = stream._readableState;\n      if (rState !== null && rState !== void 0 && rState.errored) {\n        return false;\n      }\n      if (\n        typeof (rState === null || rState === void 0\n          ? void 0\n          : rState.endEmitted) !== "boolean"\n      ) {\n        return null;\n      }\n      return !!(rState.endEmitted ||\n        strict === false && rState.ended === true && rState.length === 0);\n    }\n    function isReadable(stream) {\n      if (stream && stream[kIsReadable] != null) {\n        return stream[kIsReadable];\n      }\n      if (\n        typeof (stream === null || stream === void 0\n          ? void 0\n          : stream.readable) !== "boolean"\n      ) {\n        return null;\n      }\n      if (isDestroyed(stream)) {\n        return false;\n      }\n      return isReadableNodeStream(stream) && stream.readable &&\n        !isReadableFinished(stream);\n    }\n    function isWritable(stream) {\n      if (\n        typeof (stream === null || stream === void 0\n          ? void 0\n          : stream.writable) !== "boolean"\n      ) {\n        return null;\n      }\n      if (isDestroyed(stream)) {\n        return false;\n      }\n      return isWritableNodeStream(stream) && stream.writable &&\n        !isWritableEnded(stream);\n    }\n    function isFinished(stream\x2C opts) {\n      if (!isNodeStream(stream)) {\n        return null;\n      }\n      if (isDestroyed(stream)) {\n        return true;\n      }\n      if (\n        (opts === null || opts === void 0 ? void 0 : opts.readable) !== false &&\n        isReadable(stream)\n      ) {\n        return false;\n      }\n      if (\n        (opts === null || opts === void 0 ? void 0 : opts.writable) !== false &&\n        isWritable(stream)\n      ) {\n        return false;\n      }\n      return true;\n    }\n    function isWritableErrored(stream) {\n      var _stream$_writableStat\x2C _stream$_writableStat2;\n      if (!isNodeStream(stream)) {\n        return null;\n      }\n      if (stream.writableErrored) {\n        return stream.writableErrored;\n      }\n      return (_stream$_writableStat =\n              (_stream$_writableStat2 = stream._writableState) === null ||\n                _stream$_writableStat2 === void 0\n                ? void 0\n                : _stream$_writableStat2.errored) !== null &&\n          _stream$_writableStat !== void 0\n        ? _stream$_writableStat\n        : null;\n    }\n    function isReadableErrored(stream) {\n      var _stream$_readableStat\x2C _stream$_readableStat2;\n      if (!isNodeStream(stream)) {\n        return null;\n      }\n      if (stream.readableErrored) {\n        return stream.readableErrored;\n      }\n      return (_stream$_readableStat =\n              (_stream$_readableStat2 = stream._readableState) === null ||\n                _stream$_readableStat2 === void 0\n                ? void 0\n                : _stream$_readableStat2.errored) !== null &&\n          _stream$_readableStat !== void 0\n        ? _stream$_readableStat\n        : null;\n    }\n    function isClosed(stream) {\n      if (!isNodeStream(stream)) {\n        return null;\n      }\n      if (typeof stream.closed === "boolean") {\n        return stream.closed;\n      }\n      const wState = stream._writableState;\n      const rState = stream._readableState;\n      if (\n        typeof (wState === null || wState === void 0\n            ? void 0\n            : wState.closed) === "boolean" ||\n        typeof (rState === null || rState === void 0\n            ? void 0\n            : rState.closed) === "boolean"\n      ) {\n        return (wState === null || wState === void 0\n          ? void 0\n          : wState.closed) ||\n          (rState === null || rState === void 0 ? void 0 : rState.closed);\n      }\n      if (typeof stream._closed === "boolean" && isOutgoingMessage(stream)) {\n        return stream._closed;\n      }\n      return null;\n    }\n    function isOutgoingMessage(stream) {\n      return typeof stream._closed === "boolean" &&\n        typeof stream._defaultKeepAlive === "boolean" &&\n        typeof stream._removedConnection === "boolean" &&\n        typeof stream._removedContLen === "boolean";\n    }\n    function isServerResponse(stream) {\n      return typeof stream._sent100 === "boolean" && isOutgoingMessage(stream);\n    }\n    function isServerRequest(stream) {\n      var _stream$req;\n      return typeof stream._consuming === "boolean" &&\n        typeof stream._dumped === "boolean" &&\n        ((_stream$req = stream.req) === null || _stream$req === void 0\n            ? void 0\n            : _stream$req.upgradeOrConnect) === void 0;\n    }\n    function willEmitClose(stream) {\n      if (!isNodeStream(stream)) {\n        return null;\n      }\n      const wState = stream._writableState;\n      const rState = stream._readableState;\n      const state = wState || rState;\n      return !state && isServerResponse(stream) ||\n        !!(state && state.autoDestroy && state.emitClose &&\n          state.closed === false);\n    }\n    function isDisturbed(stream) {\n      var _stream$kIsDisturbed;\n      return !!(stream &&\n        ((_stream$kIsDisturbed = stream[kIsDisturbed]) !== null &&\n            _stream$kIsDisturbed !== void 0\n          ? _stream$kIsDisturbed\n          : stream.readableDidRead || stream.readableAborted));\n    }\n    function isErrored(stream) {\n      var _ref\x2C\n        _ref2\x2C\n        _ref3\x2C\n        _ref4\x2C\n        _ref5\x2C\n        _stream$kIsErrored\x2C\n        _stream$_readableStat3\x2C\n        _stream$_writableStat3\x2C\n        _stream$_readableStat4\x2C\n        _stream$_writableStat4;\n      return !!(stream &&\n        ((_ref =\n                (_ref2 =\n                      (_ref3 =\n                            (_ref4 =\n                                  (_ref5 =\n                                        (_stream$kIsErrored =\n                                              stream[kIsErrored]) !== null &&\n                                          _stream$kIsErrored !== void 0\n                                          ? _stream$kIsErrored\n                                          : stream.readableErrored) !== null &&\n                                    _ref5 !== void 0\n                                    ? _ref5\n                                    : stream.writableErrored) !== null &&\n                              _ref4 !== void 0\n                              ? _ref4\n                              : (_stream$_readableStat3 =\n                                      stream._readableState) === null ||\n                                  _stream$_readableStat3 === void 0\n                              ? void 0\n                              : _stream$_readableStat3.errorEmitted) !== null &&\n                        _ref3 !== void 0\n                        ? _ref3\n                        : (_stream$_writableStat3 = stream._writableState) ===\n                              null || _stream$_writableStat3 === void 0\n                        ? void 0\n                        : _stream$_writableStat3.errorEmitted) !== null &&\n                  _ref2 !== void 0\n                  ? _ref2\n                  : (_stream$_readableStat4 = stream._readableState) === null ||\n                      _stream$_readableStat4 === void 0\n                  ? void 0\n                  : _stream$_readableStat4.errored) !== null && _ref !== void 0\n          ? _ref\n          : (_stream$_writableStat4 = stream._writableState) === null ||\n              _stream$_writableStat4 === void 0\n          ? void 0\n          : _stream$_writableStat4.errored));\n    }\n    module.exports = {\n      kDestroyed\x2C\n      isDisturbed\x2C\n      kIsDisturbed\x2C\n      isErrored\x2C\n      kIsErrored\x2C\n      isReadable\x2C\n      kIsReadable\x2C\n      isClosed\x2C\n      isDestroyed\x2C\n      isDuplexNodeStream\x2C\n      isFinished\x2C\n      isIterable\x2C\n      isReadableNodeStream\x2C\n      isReadableEnded\x2C\n      isReadableFinished\x2C\n      isReadableErrored\x2C\n      isNodeStream\x2C\n      isWritable\x2C\n      isWritableNodeStream\x2C\n      isWritableEnded\x2C\n      isWritableFinished\x2C\n      isWritableErrored\x2C\n      isServerRequest\x2C\n      isServerResponse\x2C\n      willEmitClose\x2C\n    };\n  }\x2C\n});\n\n// lib/internal/streams/end-of-stream.js\nvar require_end_of_stream = __commonJS({\n  "lib/internal/streams/end-of-stream.js"(exports\x2C module) {\n    var process = require_browser2();\n    var { validateAbortSignal\x2C validateFunction\x2C validateObject } =\n      require_validators();\n    var { Promise: Promise2 } = require_primordials();\n    var {\n      isClosed\x2C\n      isReadable\x2C\n      isReadableNodeStream\x2C\n      isReadableFinished\x2C\n      isReadableErrored\x2C\n      isWritable\x2C\n      isWritableNodeStream\x2C\n      isWritableFinished\x2C\n      isWritableErrored\x2C\n      isNodeStream\x2C\n      willEmitClose: _willEmitClose\x2C\n    } = require_utils();\n    function isRequest(stream) {\n      return stream.setHeader && typeof stream.abort === "function";\n    }\n    var nop = () => {\n    };\n    function eos(stream\x2C options\x2C callback) {\n      var _options$readable\x2C _options$writable;\n      if (arguments.length === 2) {\n        callback = options;\n        options = kEmptyObject;\n      } else if (options == null) {\n        options = kEmptyObject;\n      } else {\n        validateObject(options\x2C "options");\n      }\n      validateFunction(callback\x2C "callback");\n      validateAbortSignal(options.signal\x2C "options.signal");\n      callback = once(callback);\n      const readable = (_options$readable = options.readable) !== null &&\n          _options$readable !== void 0\n        ? _options$readable\n        : isReadableNodeStream(stream);\n      const writable = (_options$writable = options.writable) !== null &&\n          _options$writable !== void 0\n        ? _options$writable\n        : isWritableNodeStream(stream);\n      if (!isNodeStream(stream)) {\n        throw new ERR_INVALID_ARG_TYPE("stream"\x2C "Stream"\x2C stream);\n      }\n      const wState = stream._writableState;\n      const rState = stream._readableState;\n      const onlegacyfinish = () => {\n        if (!stream.writable) {\n          onfinish();\n        }\n      };\n      let willEmitClose = _willEmitClose(stream) &&\n        isReadableNodeStream(stream) === readable &&\n        isWritableNodeStream(stream) === writable;\n      let writableFinished = isWritableFinished(stream\x2C false);\n      const onfinish = () => {\n        writableFinished = true;\n        if (stream.destroyed) {\n          willEmitClose = false;\n        }\n        if (willEmitClose && (!stream.readable || readable)) {\n          return;\n        }\n        if (!readable || readableFinished) {\n          callback.call(stream);\n        }\n      };\n      let readableFinished = isReadableFinished(stream\x2C false);\n      const onend = () => {\n        readableFinished = true;\n        if (stream.destroyed) {\n          willEmitClose = false;\n        }\n        if (willEmitClose && (!stream.writable || writable)) {\n          return;\n        }\n        if (!writable || writableFinished) {\n          callback.call(stream);\n        }\n      };\n      const onerror = (err) => {\n        callback.call(stream\x2C err);\n      };\n      let closed = isClosed(stream);\n      const onclose = () => {\n        closed = true;\n        const errored = isWritableErrored(stream) || isReadableErrored(stream);\n        if (errored && typeof errored !== "boolean") {\n          return callback.call(stream\x2C errored);\n        }\n        if (\n          readable && !readableFinished && isReadableNodeStream(stream\x2C true)\n        ) {\n          if (!isReadableFinished(stream\x2C false)) {\n            return callback.call(stream\x2C new ERR_STREAM_PREMATURE_CLOSE());\n          }\n        }\n        if (writable && !writableFinished) {\n          if (!isWritableFinished(stream\x2C false)) {\n            return callback.call(stream\x2C new ERR_STREAM_PREMATURE_CLOSE());\n          }\n        }\n        callback.call(stream);\n      };\n      const onrequest = () => {\n        stream.req.on("finish"\x2C onfinish);\n      };\n      if (isRequest(stream)) {\n        stream.on("complete"\x2C onfinish);\n        if (!willEmitClose) {\n          stream.on("abort"\x2C onclose);\n        }\n        if (stream.req) {\n          onrequest();\n        } else {\n          stream.on("request"\x2C onrequest);\n        }\n      } else if (writable && !wState) {\n        stream.on("end"\x2C onlegacyfinish);\n        stream.on("close"\x2C onlegacyfinish);\n      }\n      if (!willEmitClose && typeof stream.aborted === "boolean") {\n        stream.on("aborted"\x2C onclose);\n      }\n      stream.on("end"\x2C onend);\n      stream.on("finish"\x2C onfinish);\n      if (options.error !== false) {\n        stream.on("error"\x2C onerror);\n      }\n      stream.on("close"\x2C onclose);\n      if (closed) {\n        process.nextTick(onclose);\n      } else if (\n        wState !== null && wState !== void 0 && wState.errorEmitted ||\n        rState !== null && rState !== void 0 && rState.errorEmitted\n      ) {\n        if (!willEmitClose) {\n          process.nextTick(onclose);\n        }\n      } else if (\n        !readable && (!willEmitClose || isReadable(stream)) &&\n        (writableFinished || isWritable(stream) === false)\n      ) {\n        process.nextTick(onclose);\n      } else if (\n        !writable && (!willEmitClose || isWritable(stream)) &&\n        (readableFinished || isReadable(stream) === false)\n      ) {\n        process.nextTick(onclose);\n      } else if (rState && stream.req && stream.aborted) {\n        process.nextTick(onclose);\n      }\n      const cleanup = () => {\n        callback = nop;\n        stream.removeListener("aborted"\x2C onclose);\n        stream.removeListener("complete"\x2C onfinish);\n        stream.removeListener("abort"\x2C onclose);\n        stream.removeListener("request"\x2C onrequest);\n        if (stream.req) {\n          stream.req.removeListener("finish"\x2C onfinish);\n        }\n        stream.removeListener("end"\x2C onlegacyfinish);\n        stream.removeListener("close"\x2C onlegacyfinish);\n        stream.removeListener("finish"\x2C onfinish);\n        stream.removeListener("end"\x2C onend);\n        stream.removeListener("error"\x2C onerror);\n        stream.removeListener("close"\x2C onclose);\n      };\n      if (options.signal && !closed) {\n        const abort = () => {\n          const endCallback = callback;\n          cleanup();\n          endCallback.call(\n            stream\x2C\n            new AbortError(void 0\x2C {\n              cause: options.signal.reason\x2C\n            })\x2C\n          );\n        };\n        if (options.signal.aborted) {\n          process.nextTick(abort);\n        } else {\n          const originalCallback = callback;\n          callback = once((...args) => {\n            options.signal.removeEventListener("abort"\x2C abort);\n            originalCallback.apply(stream\x2C args);\n          });\n          options.signal.addEventListener("abort"\x2C abort);\n        }\n      }\n      return cleanup;\n    }\n    function finished(stream\x2C opts) {\n      return new Promise2((resolve\x2C reject) => {\n        eos(stream\x2C opts\x2C (err) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve();\n          }\n        });\n      });\n    }\n    module.exports = eos;\n    module.exports.finished = finished;\n  }\x2C\n});\n\n// lib/internal/streams/operators.js\nvar require_operators = __commonJS({\n  "lib/internal/streams/operators.js"(exports\x2C module) {\n    "use strict";\n    var { validateAbortSignal\x2C validateInteger\x2C validateObject } =\n      require_validators();\n    var kWeakHandler = require_primordials().Symbol("kWeak");\n    var { finished } = require_end_of_stream();\n    var {\n      ArrayPrototypePush\x2C\n      MathFloor\x2C\n      Number: Number2\x2C\n      NumberIsNaN\x2C\n      Promise: Promise2\x2C\n      PromiseReject\x2C\n      PromisePrototypeThen\x2C\n      Symbol: Symbol2\x2C\n    } = require_primordials();\n    var kEmpty = Symbol2("kEmpty");\n    var kEof = Symbol2("kEof");\n    function map(fn\x2C options) {\n      if (typeof fn !== "function") {\n        throw new ERR_INVALID_ARG_TYPE("fn"\x2C ["Function"\x2C "AsyncFunction"]\x2C fn);\n      }\n      if (options != null) {\n        validateObject(options\x2C "options");\n      }\n      if (\n        (options === null || options === void 0 ? void 0 : options.signal) !=\n          null\n      ) {\n        validateAbortSignal(options.signal\x2C "options.signal");\n      }\n      let concurrency = 1;\n      if (\n        (options === null || options === void 0\n          ? void 0\n          : options.concurrency) != null\n      ) {\n        concurrency = MathFloor(options.concurrency);\n      }\n      validateInteger(concurrency\x2C "concurrency"\x2C 1);\n      return async function* map2() {\n        var _options$signal\x2C _options$signal2;\n        const ac = new AbortController();\n        const stream = this;\n        const queue = [];\n        const signal = ac.signal;\n        const signalOpt = {\n          signal\x2C\n        };\n        const abort = () => ac.abort();\n        if (\n          options !== null && options !== void 0 &&\n          (_options$signal = options.signal) !== null &&\n          _options$signal !== void 0 && _options$signal.aborted\n        ) {\n          abort();\n        }\n        options === null || options === void 0\n          ? void 0\n          : (_options$signal2 = options.signal) === null ||\n              _options$signal2 === void 0\n          ? void 0\n          : _options$signal2.addEventListener("abort"\x2C abort);\n        let next;\n        let resume;\n        let done = false;\n        function onDone() {\n          done = true;\n        }\n        async function pump() {\n          try {\n            for await (let val of stream) {\n              var _val;\n              if (done) {\n                return;\n              }\n              if (signal.aborted) {\n                throw new AbortError();\n              }\n              try {\n                val = fn(val\x2C signalOpt);\n              } catch (err) {\n                val = PromiseReject(err);\n              }\n              if (val === kEmpty) {\n                continue;\n              }\n              if (\n                typeof ((_val = val) === null || _val === void 0\n                  ? void 0\n                  : _val.catch) === "function"\n              ) {\n                val.catch(onDone);\n              }\n              queue.push(val);\n              if (next) {\n                next();\n                next = null;\n              }\n              if (!done && queue.length && queue.length >= concurrency) {\n                await new Promise2((resolve) => {\n                  resume = resolve;\n                });\n              }\n            }\n            queue.push(kEof);\n          } catch (err) {\n            const val = PromiseReject(err);\n            PromisePrototypeThen(val\x2C void 0\x2C onDone);\n            queue.push(val);\n          } finally {\n            var _options$signal3;\n            done = true;\n            if (next) {\n              next();\n              next = null;\n            }\n            options === null || options === void 0\n              ? void 0\n              : (_options$signal3 = options.signal) === null ||\n                  _options$signal3 === void 0\n              ? void 0\n              : _options$signal3.removeEventListener("abort"\x2C abort);\n          }\n        }\n        pump();\n        try {\n          while (true) {\n            while (queue.length > 0) {\n              const val = await queue[0];\n              if (val === kEof) {\n                return;\n              }\n              if (signal.aborted) {\n                throw new AbortError();\n              }\n              if (val !== kEmpty) {\n                yield val;\n              }\n              queue.shift();\n              if (resume) {\n                resume();\n                resume = null;\n              }\n            }\n            await new Promise2((resolve) => {\n              next = resolve;\n            });\n          }\n        } finally {\n          ac.abort();\n          done = true;\n          if (resume) {\n            resume();\n            resume = null;\n          }\n        }\n      }.call(this);\n    }\n    function asIndexedPairs(options = void 0) {\n      if (options != null) {\n        validateObject(options\x2C "options");\n      }\n      if (\n        (options === null || options === void 0 ? void 0 : options.signal) !=\n          null\n      ) {\n        validateAbortSignal(options.signal\x2C "options.signal");\n      }\n      return async function* asIndexedPairs2() {\n        let index = 0;\n        for await (const val of this) {\n          var _options$signal4;\n          if (\n            options !== null && options !== void 0 &&\n            (_options$signal4 = options.signal) !== null &&\n            _options$signal4 !== void 0 && _options$signal4.aborted\n          ) {\n            throw new AbortError({\n              cause: options.signal.reason\x2C\n            });\n          }\n          yield [index++\x2C val];\n        }\n      }.call(this);\n    }\n    async function some(fn\x2C options = void 0) {\n      for await (const unused of filter.call(this\x2C fn\x2C options)) {\n        return true;\n      }\n      return false;\n    }\n    async function every(fn\x2C options = void 0) {\n      if (typeof fn !== "function") {\n        throw new ERR_INVALID_ARG_TYPE("fn"\x2C ["Function"\x2C "AsyncFunction"]\x2C fn);\n      }\n      return !await some.call(\n        this\x2C\n        async (...args) => {\n          return !await fn(...args);\n        }\x2C\n        options\x2C\n      );\n    }\n    async function find(fn\x2C options) {\n      for await (const result of filter.call(this\x2C fn\x2C options)) {\n        return result;\n      }\n      return void 0;\n    }\n    async function forEach(fn\x2C options) {\n      if (typeof fn !== "function") {\n        throw new ERR_INVALID_ARG_TYPE("fn"\x2C ["Function"\x2C "AsyncFunction"]\x2C fn);\n      }\n      async function forEachFn(value\x2C options2) {\n        await fn(value\x2C options2);\n        return kEmpty;\n      }\n      for await (const unused of map.call(this\x2C forEachFn\x2C options));\n    }\n    function filter(fn\x2C options) {\n      if (typeof fn !== "function") {\n        throw new ERR_INVALID_ARG_TYPE("fn"\x2C ["Function"\x2C "AsyncFunction"]\x2C fn);\n      }\n      async function filterFn(value\x2C options2) {\n        if (await fn(value\x2C options2)) {\n          return value;\n        }\n        return kEmpty;\n      }\n      return map.call(this\x2C filterFn\x2C options);\n    }\n    var ReduceAwareErrMissingArgs = class extends ERR_MISSING_ARGS {\n      constructor() {\n        super("reduce");\n        this.message = "Reduce of an empty stream requires an initial value";\n      }\n    };\n    async function reduce(reducer\x2C initialValue\x2C options) {\n      var _options$signal5;\n      if (typeof reducer !== "function") {\n        throw new ERR_INVALID_ARG_TYPE(\n          "reducer"\x2C\n          ["Function"\x2C "AsyncFunction"]\x2C\n          reducer\x2C\n        );\n      }\n      if (options != null) {\n        validateObject(options\x2C "options");\n      }\n      if (\n        (options === null || options === void 0 ? void 0 : options.signal) !=\n          null\n      ) {\n        validateAbortSignal(options.signal\x2C "options.signal");\n      }\n      let hasInitialValue = arguments.length > 1;\n      if (\n        options !== null && options !== void 0 &&\n        (_options$signal5 = options.signal) !== null &&\n        _options$signal5 !== void 0 && _options$signal5.aborted\n      ) {\n        const err = new AbortError(void 0\x2C {\n          cause: options.signal.reason\x2C\n        });\n        this.once("error"\x2C () => {\n        });\n        await finished(this.destroy(err));\n        throw err;\n      }\n      const ac = new AbortController();\n      const signal = ac.signal;\n      if (options !== null && options !== void 0 && options.signal) {\n        const opts = {\n          once: true\x2C\n          [kWeakHandler]: this\x2C\n        };\n        options.signal.addEventListener("abort"\x2C () => ac.abort()\x2C opts);\n      }\n      let gotAnyItemFromStream = false;\n      try {\n        for await (const value of this) {\n          var _options$signal6;\n          gotAnyItemFromStream = true;\n          if (\n            options !== null && options !== void 0 &&\n            (_options$signal6 = options.signal) !== null &&\n            _options$signal6 !== void 0 && _options$signal6.aborted\n          ) {\n            throw new AbortError();\n          }\n          if (!hasInitialValue) {\n            initialValue = value;\n            hasInitialValue = true;\n          } else {\n            initialValue = await reducer(initialValue\x2C value\x2C {\n              signal\x2C\n            });\n          }\n        }\n        if (!gotAnyItemFromStream && !hasInitialValue) {\n          throw new ReduceAwareErrMissingArgs();\n        }\n      } finally {\n        ac.abort();\n      }\n      return initialValue;\n    }\n    async function toArray(options) {\n      if (options != null) {\n        validateObject(options\x2C "options");\n      }\n      if (\n        (options === null || options === void 0 ? void 0 : options.signal) !=\n          null\n      ) {\n        validateAbortSignal(options.signal\x2C "options.signal");\n      }\n      const result = [];\n      for await (const val of this) {\n        var _options$signal7;\n        if (\n          options !== null && options !== void 0 &&\n          (_options$signal7 = options.signal) !== null &&\n          _options$signal7 !== void 0 && _options$signal7.aborted\n        ) {\n          throw new AbortError(void 0\x2C {\n            cause: options.signal.reason\x2C\n          });\n        }\n        ArrayPrototypePush(result\x2C val);\n      }\n      return result;\n    }\n    function flatMap(fn\x2C options) {\n      const values = map.call(this\x2C fn\x2C options);\n      return async function* flatMap2() {\n        for await (const val of values) {\n          yield* val;\n        }\n      }.call(this);\n    }\n    function toIntegerOrInfinity(number) {\n      number = Number2(number);\n      if (NumberIsNaN(number)) {\n        return 0;\n      }\n      if (number < 0) {\n        throw new ERR_OUT_OF_RANGE("number"\x2C ">= 0"\x2C number);\n      }\n      return number;\n    }\n    function drop(number\x2C options = void 0) {\n      if (options != null) {\n        validateObject(options\x2C "options");\n      }\n      if (\n        (options === null || options === void 0 ? void 0 : options.signal) !=\n          null\n      ) {\n        validateAbortSignal(options.signal\x2C "options.signal");\n      }\n      number = toIntegerOrInfinity(number);\n      return async function* drop2() {\n        var _options$signal8;\n        if (\n          options !== null && options !== void 0 &&\n          (_options$signal8 = options.signal) !== null &&\n          _options$signal8 !== void 0 && _options$signal8.aborted\n        ) {\n          throw new AbortError();\n        }\n        for await (const val of this) {\n          var _options$signal9;\n          if (\n            options !== null && options !== void 0 &&\n            (_options$signal9 = options.signal) !== null &&\n            _options$signal9 !== void 0 && _options$signal9.aborted\n          ) {\n            throw new AbortError();\n          }\n          if (number-- <= 0) {\n            yield val;\n          }\n        }\n      }.call(this);\n    }\n    function take(number\x2C options = void 0) {\n      if (options != null) {\n        validateObject(options\x2C "options");\n      }\n      if (\n        (options === null || options === void 0 ? void 0 : options.signal) !=\n          null\n      ) {\n        validateAbortSignal(options.signal\x2C "options.signal");\n      }\n      number = toIntegerOrInfinity(number);\n      return async function* take2() {\n        var _options$signal10;\n        if (\n          options !== null && options !== void 0 &&\n          (_options$signal10 = options.signal) !== null &&\n          _options$signal10 !== void 0 && _options$signal10.aborted\n        ) {\n          throw new AbortError();\n        }\n        for await (const val of this) {\n          var _options$signal11;\n          if (\n            options !== null && options !== void 0 &&\n            (_options$signal11 = options.signal) !== null &&\n            _options$signal11 !== void 0 && _options$signal11.aborted\n          ) {\n            throw new AbortError();\n          }\n          if (number-- > 0) {\n            yield val;\n          } else {\n            return;\n          }\n        }\n      }.call(this);\n    }\n    module.exports.streamReturningOperators = {\n      asIndexedPairs\x2C\n      drop\x2C\n      filter\x2C\n      flatMap\x2C\n      map\x2C\n      take\x2C\n    };\n    module.exports.promiseReturningOperators = {\n      every\x2C\n      forEach\x2C\n      reduce\x2C\n      toArray\x2C\n      some\x2C\n      find\x2C\n    };\n  }\x2C\n});\n\n// lib/internal/streams/destroy.js\nvar require_destroy = __commonJS({\n  "lib/internal/streams/destroy.js"(exports\x2C module) {\n    "use strict";\n    var process = require_browser2();\n    var { Symbol: Symbol2 } = require_primordials();\n    var { kDestroyed\x2C isDestroyed\x2C isFinished\x2C isServerRequest } =\n      require_utils();\n    var kDestroy = Symbol2("kDestroy");\n    var kConstruct = Symbol2("kConstruct");\n    function checkError(err\x2C w\x2C r) {\n      if (err) {\n        err.stack;\n        if (w && !w.errored) {\n          w.errored = err;\n        }\n        if (r && !r.errored) {\n          r.errored = err;\n        }\n      }\n    }\n    function destroy(err\x2C cb) {\n      const r = this._readableState;\n      const w = this._writableState;\n      const s = w || r;\n      if (w && w.destroyed || r && r.destroyed) {\n        if (typeof cb === "function") {\n          cb();\n        }\n        return this;\n      }\n      checkError(err\x2C w\x2C r);\n      if (w) {\n        w.destroyed = true;\n      }\n      if (r) {\n        r.destroyed = true;\n      }\n      if (!s.constructed) {\n        this.once(kDestroy\x2C function (er) {\n          _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\n        });\n      } else {\n        _destroy(this\x2C err\x2C cb);\n      }\n      return this;\n    }\n    function _destroy(self2\x2C err\x2C cb) {\n      let called = false;\n      function onDestroy(err2) {\n        if (called) {\n          return;\n        }\n        called = true;\n        const r = self2._readableState;\n        const w = self2._writableState;\n        checkError(err2\x2C w\x2C r);\n        if (w) {\n          w.closed = true;\n        }\n        if (r) {\n          r.closed = true;\n        }\n        if (typeof cb === "function") {\n          cb(err2);\n        }\n        if (err2) {\n          process.nextTick(emitErrorCloseNT\x2C self2\x2C err2);\n        } else {\n          process.nextTick(emitCloseNT\x2C self2);\n        }\n      }\n      try {\n        self2._destroy(err || null\x2C onDestroy);\n      } catch (err2) {\n        onDestroy(err2);\n      }\n    }\n    function emitErrorCloseNT(self2\x2C err) {\n      emitErrorNT(self2\x2C err);\n      emitCloseNT(self2);\n    }\n    function emitCloseNT(self2) {\n      const r = self2._readableState;\n      const w = self2._writableState;\n      if (w) {\n        w.closeEmitted = true;\n      }\n      if (r) {\n        r.closeEmitted = true;\n      }\n      if (w && w.emitClose || r && r.emitClose) {\n        self2.emit("close");\n      }\n    }\n    function emitErrorNT(self2\x2C err) {\n      const r = self2._readableState;\n      const w = self2._writableState;\n      if (w && w.errorEmitted || r && r.errorEmitted) {\n        return;\n      }\n      if (w) {\n        w.errorEmitted = true;\n      }\n      if (r) {\n        r.errorEmitted = true;\n      }\n      self2.emit("error"\x2C err);\n    }\n    function undestroy() {\n      const r = this._readableState;\n      const w = this._writableState;\n      if (r) {\n        r.constructed = true;\n        r.closed = false;\n        r.closeEmitted = false;\n        r.destroyed = false;\n        r.errored = null;\n        r.errorEmitted = false;\n        r.reading = false;\n        r.ended = r.readable === false;\n        r.endEmitted = r.readable === false;\n      }\n      if (w) {\n        w.constructed = true;\n        w.destroyed = false;\n        w.closed = false;\n        w.closeEmitted = false;\n        w.errored = null;\n        w.errorEmitted = false;\n        w.finalCalled = false;\n        w.prefinished = false;\n        w.ended = w.writable === false;\n        w.ending = w.writable === false;\n        w.finished = w.writable === false;\n      }\n    }\n    function errorOrDestroy(stream\x2C err\x2C sync) {\n      const r = stream._readableState;\n      const w = stream._writableState;\n      if (w && w.destroyed || r && r.destroyed) {\n        return this;\n      }\n      if (r && r.autoDestroy || w && w.autoDestroy) {\n        stream.destroy(err);\n      } else if (err) {\n        err.stack;\n        if (w && !w.errored) {\n          w.errored = err;\n        }\n        if (r && !r.errored) {\n          r.errored = err;\n        }\n        if (sync) {\n          process.nextTick(emitErrorNT\x2C stream\x2C err);\n        } else {\n          emitErrorNT(stream\x2C err);\n        }\n      }\n    }\n    function construct(stream\x2C cb) {\n      if (typeof stream._construct !== "function") {\n        return;\n      }\n      const r = stream._readableState;\n      const w = stream._writableState;\n      if (r) {\n        r.constructed = false;\n      }\n      if (w) {\n        w.constructed = false;\n      }\n      stream.once(kConstruct\x2C cb);\n      if (stream.listenerCount(kConstruct) > 1) {\n        return;\n      }\n      process.nextTick(constructNT\x2C stream);\n    }\n    function constructNT(stream) {\n      let called = false;\n      function onConstruct(err) {\n        if (called) {\n          errorOrDestroy(\n            stream\x2C\n            err !== null && err !== void 0 ? err : new ERR_MULTIPLE_CALLBACK()\x2C\n          );\n          return;\n        }\n        called = true;\n        const r = stream._readableState;\n        const w = stream._writableState;\n        const s = w || r;\n        if (r) {\n          r.constructed = true;\n        }\n        if (w) {\n          w.constructed = true;\n        }\n        if (s.destroyed) {\n          stream.emit(kDestroy\x2C err);\n        } else if (err) {\n          errorOrDestroy(stream\x2C err\x2C true);\n        } else {\n          process.nextTick(emitConstructNT\x2C stream);\n        }\n      }\n      try {\n        stream._construct((err) => {\n          nextTick(onConstruct\x2C err);\n        });\n      } catch (err) {\n        nextTick(onConstruct\x2C err);\n      }\n    }\n    function emitConstructNT(stream) {\n      stream.emit(kConstruct);\n    }\n    function isRequest(stream) {\n      return stream && stream.setHeader && typeof stream.abort === "function";\n    }\n    function emitCloseLegacy(stream) {\n      stream.emit("close");\n    }\n    function emitErrorCloseLegacy(stream\x2C err) {\n      stream.emit("error"\x2C err);\n      process.nextTick(emitCloseLegacy\x2C stream);\n    }\n    function destroyer(stream\x2C err) {\n      if (!stream || isDestroyed(stream)) {\n        return;\n      }\n      if (!err && !isFinished(stream)) {\n        err = new AbortError();\n      }\n      if (isServerRequest(stream)) {\n        stream.socket = null;\n        stream.destroy(err);\n      } else if (isRequest(stream)) {\n        stream.abort();\n      } else if (isRequest(stream.req)) {\n        stream.req.abort();\n      } else if (typeof stream.destroy === "function") {\n        stream.destroy(err);\n      } else if (typeof stream.close === "function") {\n        stream.close();\n      } else if (err) {\n        process.nextTick(emitErrorCloseLegacy\x2C stream\x2C err);\n      } else {\n        process.nextTick(emitCloseLegacy\x2C stream);\n      }\n      if (!stream.destroyed) {\n        stream[kDestroyed] = true;\n      }\n    }\n    module.exports = {\n      construct\x2C\n      destroyer\x2C\n      destroy\x2C\n      undestroy\x2C\n      errorOrDestroy\x2C\n    };\n  }\x2C\n});\n\n// node_modules/events/events.js\nvar require_events = __commonJS({\n  "node_modules/events/events.js"(exports\x2C module) {\n    "use strict";\n    var R = typeof Reflect === "object" ? Reflect : null;\n    var ReflectApply = R && typeof R.apply === "function"\n      ? R.apply\n      : function ReflectApply2(target\x2C receiver\x2C args) {\n        return Function.prototype.apply.call(target\x2C receiver\x2C args);\n      };\n    var ReflectOwnKeys;\n    if (R && typeof R.ownKeys === "function") {\n      ReflectOwnKeys = R.ownKeys;\n    } else if (Object.getOwnPropertySymbols) {\n      ReflectOwnKeys = function ReflectOwnKeys2(target) {\n        return Object.getOwnPropertyNames(target).concat(\n          Object.getOwnPropertySymbols(target)\x2C\n        );\n      };\n    } else {\n      ReflectOwnKeys = function ReflectOwnKeys2(target) {\n        return Object.getOwnPropertyNames(target);\n      };\n    }\n    function ProcessEmitWarning(warning) {\n      if (console && console.warn) {\n        console.warn(warning);\n      }\n    }\n    var NumberIsNaN = Number.isNaN || function NumberIsNaN2(value) {\n      return value !== value;\n    };\n    function EventEmitter() {\n      EventEmitter.init.call(this);\n    }\n    module.exports = EventEmitter;\n    module.exports.once = once;\n    EventEmitter.EventEmitter = EventEmitter;\n    EventEmitter.prototype._events = void 0;\n    EventEmitter.prototype._eventsCount = 0;\n    EventEmitter.prototype._maxListeners = void 0;\n    var defaultMaxListeners = 10;\n    function checkListener(listener) {\n      if (typeof listener !== "function") {\n        throw new TypeError(\n          'The "listener" argument must be of type Function. Received type ' +\n            typeof listener\x2C\n        );\n      }\n    }\n    Object.defineProperty(EventEmitter\x2C "defaultMaxListeners"\x2C {\n      enumerable: true\x2C\n      get: function () {\n        return defaultMaxListeners;\n      }\x2C\n      set: function (arg) {\n        if (typeof arg !== "number" || arg < 0 || NumberIsNaN(arg)) {\n          throw new RangeError(\n            'The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' +\n              arg + "."\x2C\n          );\n        }\n        defaultMaxListeners = arg;\n      }\x2C\n    });\n    EventEmitter.init = function () {\n      if (\n        this._events === void 0 ||\n        this._events === Object.getPrototypeOf(this)._events\n      ) {\n        this._events = /* @__PURE__ */ Object.create(null);\n        this._eventsCount = 0;\n      }\n      this._maxListeners = this._maxListeners || void 0;\n    };\n    EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n      if (typeof n !== "number" || n < 0 || NumberIsNaN(n)) {\n        throw new RangeError(\n          'The value of "n" is out of range. It must be a non-negative number. Received ' +\n            n + "."\x2C\n        );\n      }\n      this._maxListeners = n;\n      return this;\n    };\n    function _getMaxListeners(that) {\n      if (that._maxListeners === void 0) {\n        return EventEmitter.defaultMaxListeners;\n      }\n      return that._maxListeners;\n    }\n    EventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n      return _getMaxListeners(this);\n    };\n    EventEmitter.prototype.emit = function emit(type) {\n      var args = [];\n      for (var i = 1; i < arguments.length; i++) {\n        args.push(arguments[i]);\n      }\n      var doError = type === "error";\n      var events = this._events;\n      if (events !== void 0) {\n        doError = doError && events.error === void 0;\n      } else if (!doError) {\n        return false;\n      }\n      if (doError) {\n        var er;\n        if (args.length > 0) {\n          er = args[0];\n        }\n        if (er instanceof Error) {\n          throw er;\n        }\n        var err = new Error(\n          "Unhandled error." + (er ? " (" + er.message + ")" : "")\x2C\n        );\n        err.context = er;\n        throw err;\n      }\n      var handler = events[type];\n      if (handler === void 0) {\n        return false;\n      }\n      if (typeof handler === "function") {\n        ReflectApply(handler\x2C this\x2C args);\n      } else {\n        var len = handler.length;\n        var listeners = arrayClone(handler\x2C len);\n        for (var i = 0; i < len; ++i) {\n          ReflectApply(listeners[i]\x2C this\x2C args);\n        }\n      }\n      return true;\n    };\n    function _addListener(target\x2C type\x2C listener\x2C prepend) {\n      var m;\n      var events;\n      var existing;\n      checkListener(listener);\n      events = target._events;\n      if (events === void 0) {\n        events = target._events = /* @__PURE__ */ Object.create(null);\n        target._eventsCount = 0;\n      } else {\n        if (events.newListener !== void 0) {\n          target.emit(\n            "newListener"\x2C\n            type\x2C\n            listener.listener ? listener.listener : listener\x2C\n          );\n          events = target._events;\n        }\n        existing = events[type];\n      }\n      if (existing === void 0) {\n        existing = events[type] = listener;\n        ++target._eventsCount;\n      } else {\n        if (typeof existing === "function") {\n          existing = events[type] = prepend\n            ? [listener\x2C existing]\n            : [existing\x2C listener];\n        } else if (prepend) {\n          existing.unshift(listener);\n        } else {\n          existing.push(listener);\n        }\n        m = _getMaxListeners(target);\n        if (m > 0 && existing.length > m && !existing.warned) {\n          existing.warned = true;\n          var w = new Error(\n            "Possible EventEmitter memory leak detected. " + existing.length +\n              " " + String(type) +\n              " listeners added. Use emitter.setMaxListeners() to increase limit"\x2C\n          );\n          w.name = "MaxListenersExceededWarning";\n          w.emitter = target;\n          w.type = type;\n          w.count = existing.length;\n          ProcessEmitWarning(w);\n        }\n      }\n      return target;\n    }\n    EventEmitter.prototype.addListener = function addListener(type\x2C listener) {\n      return _addListener(this\x2C type\x2C listener\x2C false);\n    };\n    EventEmitter.prototype.on = EventEmitter.prototype.addListener;\n    EventEmitter.prototype.prependListener = function prependListener(\n      type\x2C\n      listener\x2C\n    ) {\n      return _addListener(this\x2C type\x2C listener\x2C true);\n    };\n    function onceWrapper() {\n      if (!this.fired) {\n        this.target.removeListener(this.type\x2C this.wrapFn);\n        this.fired = true;\n        if (arguments.length === 0) {\n          return this.listener.call(this.target);\n        }\n        return this.listener.apply(this.target\x2C arguments);\n      }\n    }\n    function _onceWrap(target\x2C type\x2C listener) {\n      var state = { fired: false\x2C wrapFn: void 0\x2C target\x2C type\x2C listener };\n      var wrapped = onceWrapper.bind(state);\n      wrapped.listener = listener;\n      state.wrapFn = wrapped;\n      return wrapped;\n    }\n    EventEmitter.prototype.once = function once2(type\x2C listener) {\n      checkListener(listener);\n      this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\n      return this;\n    };\n    EventEmitter.prototype.prependOnceListener = function prependOnceListener(\n      type\x2C\n      listener\x2C\n    ) {\n      checkListener(listener);\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\n      return this;\n    };\n    EventEmitter.prototype.removeListener = function removeListener(\n      type\x2C\n      listener\x2C\n    ) {\n      var list\x2C events\x2C position\x2C i\x2C originalListener;\n      checkListener(listener);\n      events = this._events;\n      if (events === void 0) {\n        return this;\n      }\n      list = events[type];\n      if (list === void 0) {\n        return this;\n      }\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0) {\n          this._events = /* @__PURE__ */ Object.create(null);\n        } else {\n          delete events[type];\n          if (events.removeListener) {\n            this.emit("removeListener"\x2C type\x2C list.listener || listener);\n          }\n        }\n      } else if (typeof list !== "function") {\n        position = -1;\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n        if (position < 0) {\n          return this;\n        }\n        if (position === 0) {\n          list.shift();\n        } else {\n          spliceOne(list\x2C position);\n        }\n        if (list.length === 1) {\n          events[type] = list[0];\n        }\n        if (events.removeListener !== void 0) {\n          this.emit("removeListener"\x2C type\x2C originalListener || listener);\n        }\n      }\n      return this;\n    };\n    EventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n    EventEmitter.prototype.removeAllListeners = function removeAllListeners(\n      type\x2C\n    ) {\n      var listeners\x2C events\x2C i;\n      events = this._events;\n      if (events === void 0) {\n        return this;\n      }\n      if (events.removeListener === void 0) {\n        if (arguments.length === 0) {\n          this._events = /* @__PURE__ */ Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== void 0) {\n          if (--this._eventsCount === 0) {\n            this._events = /* @__PURE__ */ Object.create(null);\n          } else {\n            delete events[type];\n          }\n        }\n        return this;\n      }\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === "removeListener") {\n            continue;\n          }\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners("removeListener");\n        this._events = /* @__PURE__ */ Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n      listeners = events[type];\n      if (typeof listeners === "function") {\n        this.removeListener(type\x2C listeners);\n      } else if (listeners !== void 0) {\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type\x2C listeners[i]);\n        }\n      }\n      return this;\n    };\n    function _listeners(target\x2C type\x2C unwrap) {\n      var events = target._events;\n      if (events === void 0) {\n        return [];\n      }\n      var evlistener = events[type];\n      if (evlistener === void 0) {\n        return [];\n      }\n      if (typeof evlistener === "function") {\n        return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n      }\n      return unwrap\n        ? unwrapListeners(evlistener)\n        : arrayClone(evlistener\x2C evlistener.length);\n    }\n    EventEmitter.prototype.listeners = function listeners(type) {\n      return _listeners(this\x2C type\x2C true);\n    };\n    EventEmitter.prototype.rawListeners = function rawListeners(type) {\n      return _listeners(this\x2C type\x2C false);\n    };\n    EventEmitter.listenerCount = function (emitter\x2C type) {\n      if (typeof emitter.listenerCount === "function") {\n        return emitter.listenerCount(type);\n      } else {\n        return listenerCount.call(emitter\x2C type);\n      }\n    };\n    EventEmitter.prototype.listenerCount = listenerCount;\n    function listenerCount(type) {\n      var events = this._events;\n      if (events !== void 0) {\n        var evlistener = events[type];\n        if (typeof evlistener === "function") {\n          return 1;\n        } else if (evlistener !== void 0) {\n          return evlistener.length;\n        }\n      }\n      return 0;\n    }\n    EventEmitter.prototype.eventNames = function eventNames() {\n      return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n    };\n    function arrayClone(arr\x2C n) {\n      var copy = new Array(n);\n      for (var i = 0; i < n; ++i) {\n        copy[i] = arr[i];\n      }\n      return copy;\n    }\n    function spliceOne(list\x2C index) {\n      for (; index + 1 < list.length; index++) {\n        list[index] = list[index + 1];\n      }\n      list.pop();\n    }\n    function unwrapListeners(arr) {\n      var ret = new Array(arr.length);\n      for (var i = 0; i < ret.length; ++i) {\n        ret[i] = arr[i].listener || arr[i];\n      }\n      return ret;\n    }\n    function once(emitter\x2C name) {\n      return new Promise(function (resolve\x2C reject) {\n        function errorListener(err) {\n          emitter.removeListener(name\x2C resolver);\n          reject(err);\n        }\n        function resolver() {\n          if (typeof emitter.removeListener === "function") {\n            emitter.removeListener("error"\x2C errorListener);\n          }\n          resolve([].slice.call(arguments));\n        }\n\n        eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\n        if (name !== "error") {\n          addErrorHandlerIfEventEmitter(emitter\x2C errorListener\x2C { once: true });\n        }\n      });\n    }\n    function addErrorHandlerIfEventEmitter(emitter\x2C handler\x2C flags) {\n      if (typeof emitter.on === "function") {\n        eventTargetAgnosticAddListener(emitter\x2C "error"\x2C handler\x2C flags);\n      }\n    }\n    function eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\n      if (typeof emitter.on === "function") {\n        if (flags.once) {\n          emitter.once(name\x2C listener);\n        } else {\n          emitter.on(name\x2C listener);\n        }\n      } else if (typeof emitter.addEventListener === "function") {\n        emitter.addEventListener(name\x2C function wrapListener(arg) {\n          if (flags.once) {\n            emitter.removeEventListener(name\x2C wrapListener);\n          }\n          listener(arg);\n        });\n      } else {\n        throw new TypeError(\n          'The "emitter" argument must be of type EventEmitter. Received type ' +\n            typeof emitter\x2C\n        );\n      }\n    }\n  }\x2C\n});\n\n// lib/internal/streams/legacy.js\nvar require_legacy = __commonJS({\n  "lib/internal/streams/legacy.js"(exports\x2C module) {\n    "use strict";\n    var { ArrayIsArray\x2C ObjectSetPrototypeOf } = require_primordials();\n    var { EventEmitter: EE } = require_events();\n    function Stream(opts) {\n      EE.call(this\x2C opts);\n    }\n    ObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\n    ObjectSetPrototypeOf(Stream\x2C EE);\n    Stream.prototype.pipe = function (dest\x2C options) {\n      const source = this;\n      function ondata(chunk) {\n        if (dest.writable && dest.write(chunk) === false && source.pause) {\n          source.pause();\n        }\n      }\n      source.on("data"\x2C ondata);\n      function ondrain() {\n        if (source.readable && source.resume) {\n          source.resume();\n        }\n      }\n      dest.on("drain"\x2C ondrain);\n      if (!dest._isStdio && (!options || options.end !== false)) {\n        source.on("end"\x2C onend);\n        source.on("close"\x2C onclose);\n      }\n      let didOnEnd = false;\n      function onend() {\n        if (didOnEnd) {\n          return;\n        }\n        didOnEnd = true;\n        dest.end();\n      }\n      function onclose() {\n        if (didOnEnd) {\n          return;\n        }\n        didOnEnd = true;\n        if (typeof dest.destroy === "function") {\n          dest.destroy();\n        }\n      }\n      function onerror(er) {\n        cleanup();\n        if (EE.listenerCount(this\x2C "error") === 0) {\n          this.emit("error"\x2C er);\n        }\n      }\n      prependListener(source\x2C "error"\x2C onerror);\n      prependListener(dest\x2C "error"\x2C onerror);\n      function cleanup() {\n        source.removeListener("data"\x2C ondata);\n        dest.removeListener("drain"\x2C ondrain);\n        source.removeListener("end"\x2C onend);\n        source.removeListener("close"\x2C onclose);\n        source.removeListener("error"\x2C onerror);\n        dest.removeListener("error"\x2C onerror);\n        source.removeListener("end"\x2C cleanup);\n        source.removeListener("close"\x2C cleanup);\n        dest.removeListener("close"\x2C cleanup);\n      }\n      source.on("end"\x2C cleanup);\n      source.on("close"\x2C cleanup);\n      dest.on("close"\x2C cleanup);\n      dest.emit("pipe"\x2C source);\n      return dest;\n    };\n    function prependListener(emitter\x2C event\x2C fn) {\n      if (typeof emitter.prependListener === "function") {\n        return emitter.prependListener(event\x2C fn);\n      }\n      if (!emitter._events || !emitter._events[event]) {\n        emitter.on(event\x2C fn);\n      } else if (ArrayIsArray(emitter._events[event])) {\n        emitter._events[event].unshift(fn);\n      } else {\n        emitter._events[event] = [fn\x2C emitter._events[event]];\n      }\n    }\n    module.exports = {\n      Stream\x2C\n      prependListener\x2C\n    };\n  }\x2C\n});\n\n// lib/internal/streams/add-abort-signal.js\nvar require_add_abort_signal = __commonJS({\n  "lib/internal/streams/add-abort-signal.js"(exports\x2C module) {\n    "use strict";\n    var eos = require_end_of_stream();\n    var validateAbortSignal = (signal\x2C name) => {\n      if (typeof signal !== "object" || !("aborted" in signal)) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C "AbortSignal"\x2C signal);\n      }\n    };\n    function isNodeStream(obj) {\n      return !!(obj && typeof obj.pipe === "function");\n    }\n    module.exports.addAbortSignal = function addAbortSignal(signal\x2C stream) {\n      validateAbortSignal(signal\x2C "signal");\n      if (!isNodeStream(stream)) {\n        throw new ERR_INVALID_ARG_TYPE("stream"\x2C "stream.Stream"\x2C stream);\n      }\n      return module.exports.addAbortSignalNoValidate(signal\x2C stream);\n    };\n    module.exports.addAbortSignalNoValidate = function (signal\x2C stream) {\n      if (typeof signal !== "object" || !("aborted" in signal)) {\n        return stream;\n      }\n      const onAbort = () => {\n        stream.destroy(\n          new AbortError(void 0\x2C {\n            cause: signal.reason\x2C\n          })\x2C\n        );\n      };\n      if (signal.aborted) {\n        onAbort();\n      } else {\n        signal.addEventListener("abort"\x2C onAbort);\n        eos(stream\x2C () => signal.removeEventListener("abort"\x2C onAbort));\n      }\n      return stream;\n    };\n  }\x2C\n});\n\n// lib/internal/streams/buffer_list.js\nvar require_buffer_list = __commonJS({\n  "lib/internal/streams/buffer_list.js"(exports\x2C module) {\n    "use strict";\n    var {\n      StringPrototypeSlice\x2C\n      SymbolIterator\x2C\n      TypedArrayPrototypeSet\x2C\n      Uint8Array: Uint8Array2\x2C\n    } = require_primordials();\n    var { Buffer: Buffer2 } = require_buffer();\n    module.exports = class BufferList {\n      constructor() {\n        this.head = null;\n        this.tail = null;\n        this.length = 0;\n      }\n      push(v) {\n        const entry = {\n          data: v\x2C\n          next: null\x2C\n        };\n        if (this.length > 0) {\n          this.tail.next = entry;\n        } else {\n          this.head = entry;\n        }\n        this.tail = entry;\n        ++this.length;\n      }\n      unshift(v) {\n        const entry = {\n          data: v\x2C\n          next: this.head\x2C\n        };\n        if (this.length === 0) {\n          this.tail = entry;\n        }\n        this.head = entry;\n        ++this.length;\n      }\n      shift() {\n        if (this.length === 0) {\n          return;\n        }\n        const ret = this.head.data;\n        if (this.length === 1) {\n          this.head = this.tail = null;\n        } else {\n          this.head = this.head.next;\n        }\n        --this.length;\n        return ret;\n      }\n      clear() {\n        this.head = this.tail = null;\n        this.length = 0;\n      }\n      join(s) {\n        if (this.length === 0) {\n          return "";\n        }\n        let p = this.head;\n        let ret = "" + p.data;\n        while ((p = p.next) !== null) {\n          ret += s + p.data;\n        }\n        return ret;\n      }\n      concat(n) {\n        if (this.length === 0) {\n          return Buffer2.alloc(0);\n        }\n        const ret = Buffer2.allocUnsafe(n >>> 0);\n        let p = this.head;\n        let i = 0;\n        while (p) {\n          TypedArrayPrototypeSet(ret\x2C p.data\x2C i);\n          i += p.data.length;\n          p = p.next;\n        }\n        return ret;\n      }\n      // Consumes a specified amount of bytes or characters from the buffered data.\n      consume(n\x2C hasStrings) {\n        const data = this.head.data;\n        if (n < data.length) {\n          const slice = data.slice(0\x2C n);\n          this.head.data = data.slice(n);\n          return slice;\n        }\n        if (n === data.length) {\n          return this.shift();\n        }\n        return hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      first() {\n        return this.head.data;\n      }\n      *[SymbolIterator]() {\n        for (let p = this.head; p; p = p.next) {\n          yield p.data;\n        }\n      }\n      // Consumes a specified amount of characters from the buffered data.\n      _getString(n) {\n        let ret = "";\n        let p = this.head;\n        let c = 0;\n        do {\n          const str = p.data;\n          if (n > str.length) {\n            ret += str;\n            n -= str.length;\n          } else {\n            if (n === str.length) {\n              ret += str;\n              ++c;\n              if (p.next) {\n                this.head = p.next;\n              } else {\n                this.head = this.tail = null;\n              }\n            } else {\n              ret += StringPrototypeSlice(str\x2C 0\x2C n);\n              this.head = p;\n              p.data = StringPrototypeSlice(str\x2C n);\n            }\n            break;\n          }\n          ++c;\n        } while ((p = p.next) !== null);\n        this.length -= c;\n        return ret;\n      }\n      // Consumes a specified amount of bytes from the buffered data.\n      _getBuffer(n) {\n        const ret = Buffer2.allocUnsafe(n);\n        const retLen = n;\n        let p = this.head;\n        let c = 0;\n        do {\n          const buf = p.data;\n          if (n > buf.length) {\n            TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\n            n -= buf.length;\n          } else {\n            if (n === buf.length) {\n              TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\n              ++c;\n              if (p.next) {\n                this.head = p.next;\n              } else {\n                this.head = this.tail = null;\n              }\n            } else {\n              TypedArrayPrototypeSet(\n                ret\x2C\n                new Uint8Array2(buf.buffer\x2C buf.byteOffset\x2C n)\x2C\n                retLen - n\x2C\n              );\n              this.head = p;\n              p.data = buf.slice(n);\n            }\n            break;\n          }\n          ++c;\n        } while ((p = p.next) !== null);\n        this.length -= c;\n        return ret;\n      }\n      // Make sure the linked list only shows the minimal necessary information.\n      [Symbol.for("nodejs.util.inspect.custom")](_\x2C options) {\n        return inspect(this\x2C {\n          ...options\x2C\n          // Only inspect one level.\n          depth: 0\x2C\n          // It should not recurse.\n          customInspect: false\x2C\n        });\n      }\n    };\n  }\x2C\n});\n\n// lib/internal/streams/state.js\nvar require_state = __commonJS({\n  "lib/internal/streams/state.js"(exports\x2C module) {\n    "use strict";\n    var { MathFloor\x2C NumberIsInteger } = require_primordials();\n    function highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\n      return options.highWaterMark != null\n        ? options.highWaterMark\n        : isDuplex\n        ? options[duplexKey]\n        : null;\n    }\n    function getDefaultHighWaterMark(objectMode) {\n      return objectMode ? 16 : 16 * 1024;\n    }\n    function getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\n      const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\n      if (hwm != null) {\n        if (!NumberIsInteger(hwm) || hwm < 0) {\n          const name = isDuplex\n            ? `options.${duplexKey}`\n            : "options.highWaterMark";\n          throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\n        }\n        return MathFloor(hwm);\n      }\n      return getDefaultHighWaterMark(state.objectMode);\n    }\n    module.exports = {\n      getHighWaterMark\x2C\n      getDefaultHighWaterMark\x2C\n    };\n  }\x2C\n});\n\n// node_modules/safe-buffer/index.js\nvar require_safe_buffer = __commonJS({\n  "node_modules/safe-buffer/index.js"(exports\x2C module) {\n    var buffer = require_buffer();\n    var Buffer2 = buffer.Buffer;\n    function copyProps(src\x2C dst) {\n      for (var key in src) {\n        dst[key] = src[key];\n      }\n    }\n    if (\n      Buffer2.from && Buffer2.alloc && Buffer2.allocUnsafe &&\n      Buffer2.allocUnsafeSlow\n    ) {\n      module.exports = buffer;\n    } else {\n      copyProps(buffer\x2C exports);\n      exports.Buffer = SafeBuffer;\n    }\n    function SafeBuffer(arg\x2C encodingOrOffset\x2C length) {\n      return Buffer2(arg\x2C encodingOrOffset\x2C length);\n    }\n    SafeBuffer.prototype = Object.create(Buffer2.prototype);\n    copyProps(Buffer2\x2C SafeBuffer);\n    SafeBuffer.from = function (arg\x2C encodingOrOffset\x2C length) {\n      if (typeof arg === "number") {\n        throw new TypeError("Argument must not be a number");\n      }\n      return Buffer2(arg\x2C encodingOrOffset\x2C length);\n    };\n    SafeBuffer.alloc = function (size\x2C fill\x2C encoding) {\n      if (typeof size !== "number") {\n        throw new TypeError("Argument must be a number");\n      }\n      var buf = Buffer2(size);\n      if (fill !== void 0) {\n        if (typeof encoding === "string") {\n          buf.fill(fill\x2C encoding);\n        } else {\n          buf.fill(fill);\n        }\n      } else {\n        buf.fill(0);\n      }\n      return buf;\n    };\n    SafeBuffer.allocUnsafe = function (size) {\n      if (typeof size !== "number") {\n        throw new TypeError("Argument must be a number");\n      }\n      return Buffer2(size);\n    };\n    SafeBuffer.allocUnsafeSlow = function (size) {\n      if (typeof size !== "number") {\n        throw new TypeError("Argument must be a number");\n      }\n      return buffer.SlowBuffer(size);\n    };\n  }\x2C\n});\n\n// lib/internal/streams/from.js\nvar require_from = __commonJS({\n  "lib/internal/streams/from.js"(exports\x2C module) {\n    "use strict";\n    var process = require_browser2();\n    var { PromisePrototypeThen\x2C SymbolAsyncIterator\x2C SymbolIterator } =\n      require_primordials();\n    var { Buffer: Buffer2 } = require_buffer();\n    function from(Readable\x2C iterable\x2C opts) {\n      let iterator;\n      if (typeof iterable === "string" || iterable instanceof Buffer2) {\n        return new Readable({\n          objectMode: true\x2C\n          ...opts\x2C\n          read() {\n            this.push(iterable);\n            this.push(null);\n          }\x2C\n        });\n      }\n      let isAsync;\n      if (iterable && iterable[SymbolAsyncIterator]) {\n        isAsync = true;\n        iterator = iterable[SymbolAsyncIterator]();\n      } else if (iterable && iterable[SymbolIterator]) {\n        isAsync = false;\n        iterator = iterable[SymbolIterator]();\n      } else {\n        throw new ERR_INVALID_ARG_TYPE("iterable"\x2C ["Iterable"]\x2C iterable);\n      }\n      const readable = new Readable({\n        objectMode: true\x2C\n        highWaterMark: 1\x2C\n        // TODO(ronag): What options should be allowed?\n        ...opts\x2C\n      });\n      let reading = false;\n      readable._read = function () {\n        if (!reading) {\n          reading = true;\n          next();\n        }\n      };\n      readable._destroy = function (error\x2C cb) {\n        PromisePrototypeThen(\n          close(error)\x2C\n          () => process.nextTick(cb\x2C error)\x2C\n          // nextTick is here in case cb throws\n          (e) => process.nextTick(cb\x2C e || error)\x2C\n        );\n      };\n      async function close(error) {\n        const hadError = error !== void 0 && error !== null;\n        const hasThrow = typeof iterator.throw === "function";\n        if (hadError && hasThrow) {\n          const { value\x2C done } = await iterator.throw(error);\n          await value;\n          if (done) {\n            return;\n          }\n        }\n        if (typeof iterator.return === "function") {\n          const { value } = await iterator.return();\n          await value;\n        }\n      }\n      async function next() {\n        for (;;) {\n          try {\n            const { value\x2C done } = isAsync\n              ? await iterator.next()\n              : iterator.next();\n            if (done) {\n              readable.push(null);\n            } else {\n              const res = value && typeof value.then === "function"\n                ? await value\n                : value;\n              if (res === null) {\n                reading = false;\n                throw new ERR_STREAM_NULL_VALUES();\n              } else if (readable.push(res)) {\n                continue;\n              } else {\n                reading = false;\n              }\n            }\n          } catch (err) {\n            readable.destroy(err);\n          }\n          break;\n        }\n      }\n      return readable;\n    }\n    module.exports = from;\n  }\x2C\n});\n\n// lib/internal/streams/readable.js\nvar require_readable = __commonJS({\n  "lib/internal/streams/readable.js"(exports\x2C module) {\n    var process = require_browser2();\n    var {\n      ArrayPrototypeIndexOf\x2C\n      NumberIsInteger\x2C\n      NumberIsNaN\x2C\n      NumberParseInt\x2C\n      ObjectDefineProperties\x2C\n      ObjectKeys\x2C\n      ObjectSetPrototypeOf\x2C\n      Promise: Promise2\x2C\n      SafeSet\x2C\n      SymbolAsyncIterator\x2C\n      Symbol: Symbol2\x2C\n    } = require_primordials();\n    module.exports = Readable;\n    Readable.ReadableState = ReadableState;\n    var { EventEmitter: EE } = require_events();\n    var { Stream\x2C prependListener } = require_legacy();\n    var { Buffer: Buffer2 } = require_buffer();\n    var { addAbortSignal } = require_add_abort_signal();\n    var eos = require_end_of_stream();\n    var debug = debuglog("stream"\x2C (fn) => {\n      debug = fn;\n    });\n    var BufferList = require_buffer_list();\n    var destroyImpl = require_destroy();\n    var { getHighWaterMark\x2C getDefaultHighWaterMark } = require_state();\n    var { validateObject } = require_validators();\n    var kPaused = Symbol2("kPaused");\n    var from = require_from();\n    ObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\n    ObjectSetPrototypeOf(Readable\x2C Stream);\n    var nop = () => {\n    };\n    var { errorOrDestroy } = destroyImpl;\n    function ReadableState(options\x2C stream\x2C isDuplex) {\n      if (typeof isDuplex !== "boolean") {\n        isDuplex = stream instanceof require_duplex();\n      }\n      this.objectMode = !!(options && options.objectMode);\n      if (isDuplex) {\n        this.objectMode = this.objectMode ||\n          !!(options && options.readableObjectMode);\n      }\n      this.highWaterMark = options\n        ? getHighWaterMark(this\x2C options\x2C "readableHighWaterMark"\x2C isDuplex)\n        : getDefaultHighWaterMark(false);\n      this.buffer = new BufferList();\n      this.length = 0;\n      this.pipes = [];\n      this.flowing = null;\n      this.ended = false;\n      this.endEmitted = false;\n      this.reading = false;\n      this.constructed = true;\n      this.sync = true;\n      this.needReadable = false;\n      this.emittedReadable = false;\n      this.readableListening = false;\n      this.resumeScheduled = false;\n      this[kPaused] = null;\n      this.errorEmitted = false;\n      this.emitClose = !options || options.emitClose !== false;\n      this.autoDestroy = !options || options.autoDestroy !== false;\n      this.destroyed = false;\n      this.errored = null;\n      this.closed = false;\n      this.closeEmitted = false;\n      this.defaultEncoding = options && options.defaultEncoding || "utf8";\n      this.awaitDrainWriters = null;\n      this.multiAwaitDrain = false;\n      this.readingMore = false;\n      this.dataEmitted = false;\n      this.decoder = null;\n      this.encoding = null;\n      if (options && options.encoding) {\n        this.decoder = new StringDecoder(options.encoding);\n        this.encoding = options.encoding;\n      }\n    }\n    function Readable(options) {\n      if (!(this instanceof Readable)) {\n        return new Readable(options);\n      }\n      const isDuplex = this instanceof require_duplex();\n      this._readableState = new ReadableState(options\x2C this\x2C isDuplex);\n      if (options) {\n        if (typeof options.read === "function") {\n          this._read = options.read;\n        }\n        if (typeof options.destroy === "function") {\n          this._destroy = options.destroy;\n        }\n        if (typeof options.construct === "function") {\n          this._construct = options.construct;\n        }\n        if (options.signal && !isDuplex) {\n          addAbortSignal(options.signal\x2C this);\n        }\n      }\n      Stream.call(this\x2C options);\n      destroyImpl.construct(this\x2C () => {\n        if (this._readableState.needReadable) {\n          maybeReadMore(this\x2C this._readableState);\n        }\n      });\n    }\n    Readable.prototype.destroy = destroyImpl.destroy;\n    Readable.prototype._undestroy = destroyImpl.undestroy;\n    Readable.prototype._destroy = function (err\x2C cb) {\n      cb(err);\n    };\n    Readable.prototype[EE.captureRejectionSymbol] = function (err) {\n      this.destroy(err);\n    };\n    Readable.prototype.push = function (chunk\x2C encoding) {\n      return readableAddChunk(this\x2C chunk\x2C encoding\x2C false);\n    };\n    Readable.prototype.unshift = function (chunk\x2C encoding) {\n      return readableAddChunk(this\x2C chunk\x2C encoding\x2C true);\n    };\n    function readableAddChunk(stream\x2C chunk\x2C encoding\x2C addToFront) {\n      debug("readableAddChunk"\x2C chunk);\n      const state = stream._readableState;\n      let err;\n      if (!state.objectMode) {\n        if (typeof chunk === "string") {\n          encoding = encoding || state.defaultEncoding;\n          if (state.encoding !== encoding) {\n            if (addToFront && state.encoding) {\n              chunk = Buffer2.from(chunk\x2C encoding).toString(state.encoding);\n            } else {\n              chunk = Buffer2.from(chunk\x2C encoding);\n              encoding = "";\n            }\n          }\n        } else if (chunk instanceof Buffer2) {\n          encoding = "";\n        } else if (Stream._isUint8Array(chunk)) {\n          chunk = Stream._uint8ArrayToBuffer(chunk);\n          encoding = "";\n        } else if (chunk != null) {\n          err = new ERR_INVALID_ARG_TYPE("chunk"\x2C [\n            "string"\x2C\n            "Buffer"\x2C\n            "Uint8Array"\x2C\n          ]\x2C chunk);\n        }\n      }\n      if (err) {\n        errorOrDestroy(stream\x2C err);\n      } else if (chunk === null) {\n        state.reading = false;\n        onEofChunk(stream\x2C state);\n      } else if (state.objectMode || chunk && chunk.length > 0) {\n        if (addToFront) {\n          if (state.endEmitted) {\n            errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\n          } else if (state.destroyed || state.errored) {\n            return false;\n          } else {\n            addChunk(stream\x2C state\x2C chunk\x2C true);\n          }\n        } else if (state.ended) {\n          errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\n        } else if (state.destroyed || state.errored) {\n          return false;\n        } else {\n          state.reading = false;\n          if (state.decoder && !encoding) {\n            chunk = state.decoder.write(chunk);\n            if (state.objectMode || chunk.length !== 0) {\n              addChunk(stream\x2C state\x2C chunk\x2C false);\n            } else {\n              maybeReadMore(stream\x2C state);\n            }\n          } else {\n            addChunk(stream\x2C state\x2C chunk\x2C false);\n          }\n        }\n      } else if (!addToFront) {\n        state.reading = false;\n        maybeReadMore(stream\x2C state);\n      }\n      return !state.ended &&\n        (state.length < state.highWaterMark || state.length === 0);\n    }\n    function addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\n      if (\n        state.flowing && state.length === 0 && !state.sync &&\n        stream.listenerCount("data") > 0\n      ) {\n        if (state.multiAwaitDrain) {\n          state.awaitDrainWriters.clear();\n        } else {\n          state.awaitDrainWriters = null;\n        }\n        state.dataEmitted = true;\n        stream.emit("data"\x2C chunk);\n      } else {\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront) {\n          state.buffer.unshift(chunk);\n        } else {\n          state.buffer.push(chunk);\n        }\n        if (state.needReadable) {\n          emitReadable(stream);\n        }\n      }\n      maybeReadMore(stream\x2C state);\n    }\n    Readable.prototype.isPaused = function () {\n      const state = this._readableState;\n      return state[kPaused] === true || state.flowing === false;\n    };\n    Readable.prototype.setEncoding = function (enc) {\n      const decoder = new StringDecoder(enc);\n      this._readableState.decoder = decoder;\n      this._readableState.encoding = this._readableState.decoder.encoding;\n      const buffer = this._readableState.buffer;\n      let content = "";\n      for (const data of buffer) {\n        content += decoder.write(data);\n      }\n      buffer.clear();\n      if (content !== "") {\n        buffer.push(content);\n      }\n      this._readableState.length = content.length;\n      return this;\n    };\n    var MAX_HWM = 1073741824;\n    function computeNewHighWaterMark(n) {\n      if (n > MAX_HWM) {\n        throw new ERR_OUT_OF_RANGE("size"\x2C "<= 1GiB"\x2C n);\n      } else {\n        n--;\n        n |= n >>> 1;\n        n |= n >>> 2;\n        n |= n >>> 4;\n        n |= n >>> 8;\n        n |= n >>> 16;\n        n++;\n      }\n      return n;\n    }\n    function howMuchToRead(n\x2C state) {\n      if (n <= 0 || state.length === 0 && state.ended) {\n        return 0;\n      }\n      if (state.objectMode) {\n        return 1;\n      }\n      if (NumberIsNaN(n)) {\n        if (state.flowing && state.length) {\n          return state.buffer.first().length;\n        }\n        return state.length;\n      }\n      if (n <= state.length) {\n        return n;\n      }\n      return state.ended ? state.length : 0;\n    }\n    Readable.prototype.read = function (n) {\n      debug("read"\x2C n);\n      if (n === void 0) {\n        n = NaN;\n      } else if (!NumberIsInteger(n)) {\n        n = NumberParseInt(n\x2C 10);\n      }\n      const state = this._readableState;\n      const nOrig = n;\n      if (n > state.highWaterMark) {\n        state.highWaterMark = computeNewHighWaterMark(n);\n      }\n      if (n !== 0) {\n        state.emittedReadable = false;\n      }\n      if (\n        n === 0 && state.needReadable &&\n        ((state.highWaterMark !== 0\n          ? state.length >= state.highWaterMark\n          : state.length > 0) || state.ended)\n      ) {\n        debug("read: emitReadable"\x2C state.length\x2C state.ended);\n        if (state.length === 0 && state.ended) {\n          endReadable(this);\n        } else {\n          emitReadable(this);\n        }\n        return null;\n      }\n      n = howMuchToRead(n\x2C state);\n      if (n === 0 && state.ended) {\n        if (state.length === 0) {\n          endReadable(this);\n        }\n        return null;\n      }\n      let doRead = state.needReadable;\n      debug("need readable"\x2C doRead);\n      if (state.length === 0 || state.length - n < state.highWaterMark) {\n        doRead = true;\n        debug("length less than watermark"\x2C doRead);\n      }\n      if (\n        state.ended || state.reading || state.destroyed || state.errored ||\n        !state.constructed\n      ) {\n        doRead = false;\n        debug("reading\x2C ended or constructing"\x2C doRead);\n      } else if (doRead) {\n        debug("do read");\n        state.reading = true;\n        state.sync = true;\n        if (state.length === 0) {\n          state.needReadable = true;\n        }\n        try {\n          this._read(state.highWaterMark);\n        } catch (err) {\n          errorOrDestroy(this\x2C err);\n        }\n        state.sync = false;\n        if (!state.reading) {\n          n = howMuchToRead(nOrig\x2C state);\n        }\n      }\n      let ret;\n      if (n > 0) {\n        ret = fromList(n\x2C state);\n      } else {\n        ret = null;\n      }\n      if (ret === null) {\n        state.needReadable = state.length <= state.highWaterMark;\n        n = 0;\n      } else {\n        state.length -= n;\n        if (state.multiAwaitDrain) {\n          state.awaitDrainWriters.clear();\n        } else {\n          state.awaitDrainWriters = null;\n        }\n      }\n      if (state.length === 0) {\n        if (!state.ended) {\n          state.needReadable = true;\n        }\n        if (nOrig !== n && state.ended) {\n          endReadable(this);\n        }\n      }\n      if (ret !== null && !state.errorEmitted && !state.closeEmitted) {\n        state.dataEmitted = true;\n        this.emit("data"\x2C ret);\n      }\n      return ret;\n    };\n    function onEofChunk(stream\x2C state) {\n      debug("onEofChunk");\n      if (state.ended) {\n        return;\n      }\n      if (state.decoder) {\n        const chunk = state.decoder.end();\n        if (chunk && chunk.length) {\n          state.buffer.push(chunk);\n          state.length += state.objectMode ? 1 : chunk.length;\n        }\n      }\n      state.ended = true;\n      if (state.sync) {\n        emitReadable(stream);\n      } else {\n        state.needReadable = false;\n        state.emittedReadable = true;\n        emitReadable_(stream);\n      }\n    }\n    function emitReadable(stream) {\n      const state = stream._readableState;\n      debug("emitReadable"\x2C state.needReadable\x2C state.emittedReadable);\n      state.needReadable = false;\n      if (!state.emittedReadable) {\n        debug("emitReadable"\x2C state.flowing);\n        state.emittedReadable = true;\n        process.nextTick(emitReadable_\x2C stream);\n      }\n    }\n    function emitReadable_(stream) {\n      const state = stream._readableState;\n      debug("emitReadable_"\x2C state.destroyed\x2C state.length\x2C state.ended);\n      if (!state.destroyed && !state.errored && (state.length || state.ended)) {\n        stream.emit("readable");\n        state.emittedReadable = false;\n      }\n      state.needReadable = !state.flowing && !state.ended &&\n        state.length <= state.highWaterMark;\n      flow(stream);\n    }\n    function maybeReadMore(stream\x2C state) {\n      if (!state.readingMore && state.constructed) {\n        state.readingMore = true;\n        process.nextTick(maybeReadMore_\x2C stream\x2C state);\n      }\n    }\n    function maybeReadMore_(stream\x2C state) {\n      while (\n        !state.reading && !state.ended &&\n        (state.length < state.highWaterMark ||\n          state.flowing && state.length === 0)\n      ) {\n        const len = state.length;\n        debug("maybeReadMore read 0");\n        stream.read(0);\n        if (len === state.length) {\n          break;\n        }\n      }\n      state.readingMore = false;\n    }\n    Readable.prototype._read = function (n) {\n      throw new ERR_METHOD_NOT_IMPLEMENTED("_read()");\n    };\n    Readable.prototype.pipe = function (dest\x2C pipeOpts) {\n      const src = this;\n      const state = this._readableState;\n      if (state.pipes.length === 1) {\n        if (!state.multiAwaitDrain) {\n          state.multiAwaitDrain = true;\n          state.awaitDrainWriters = new SafeSet(\n            state.awaitDrainWriters ? [state.awaitDrainWriters] : []\x2C\n          );\n        }\n      }\n      state.pipes.push(dest);\n      debug("pipe count=%d opts=%j"\x2C state.pipes.length\x2C pipeOpts);\n      const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n        dest !== process.stdout && dest !== process.stderr;\n      const endFn = doEnd ? onend : unpipe;\n      if (state.endEmitted) {\n        process.nextTick(endFn);\n      } else {\n        src.once("end"\x2C endFn);\n      }\n      dest.on("unpipe"\x2C onunpipe);\n      function onunpipe(readable\x2C unpipeInfo) {\n        debug("onunpipe");\n        if (readable === src) {\n          if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n            unpipeInfo.hasUnpiped = true;\n            cleanup();\n          }\n        }\n      }\n      function onend() {\n        debug("onend");\n        dest.end();\n      }\n      let ondrain;\n      let cleanedUp = false;\n      function cleanup() {\n        debug("cleanup");\n        dest.removeListener("close"\x2C onclose);\n        dest.removeListener("finish"\x2C onfinish);\n        if (ondrain) {\n          dest.removeListener("drain"\x2C ondrain);\n        }\n        dest.removeListener("error"\x2C onerror);\n        dest.removeListener("unpipe"\x2C onunpipe);\n        src.removeListener("end"\x2C onend);\n        src.removeListener("end"\x2C unpipe);\n        src.removeListener("data"\x2C ondata);\n        cleanedUp = true;\n        if (\n          ondrain && state.awaitDrainWriters &&\n          (!dest._writableState || dest._writableState.needDrain)\n        ) {\n          ondrain();\n        }\n      }\n      function pause() {\n        if (!cleanedUp) {\n          if (state.pipes.length === 1 && state.pipes[0] === dest) {\n            debug("false write response\x2C pause"\x2C 0);\n            state.awaitDrainWriters = dest;\n            state.multiAwaitDrain = false;\n          } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\n            debug("false write response\x2C pause"\x2C state.awaitDrainWriters.size);\n            state.awaitDrainWriters.add(dest);\n          }\n          src.pause();\n        }\n        if (!ondrain) {\n          ondrain = pipeOnDrain(src\x2C dest);\n          dest.on("drain"\x2C ondrain);\n        }\n      }\n      src.on("data"\x2C ondata);\n      function ondata(chunk) {\n        debug("ondata");\n        const ret = dest.write(chunk);\n        debug("dest.write"\x2C ret);\n        if (ret === false) {\n          pause();\n        }\n      }\n      function onerror(er) {\n        debug("onerror"\x2C er);\n        unpipe();\n        dest.removeListener("error"\x2C onerror);\n        if (dest.listenerCount("error") === 0) {\n          const s = dest._writableState || dest._readableState;\n          if (s && !s.errorEmitted) {\n            errorOrDestroy(dest\x2C er);\n          } else {\n            dest.emit("error"\x2C er);\n          }\n        }\n      }\n      prependListener(dest\x2C "error"\x2C onerror);\n      function onclose() {\n        dest.removeListener("finish"\x2C onfinish);\n        unpipe();\n      }\n      dest.once("close"\x2C onclose);\n      function onfinish() {\n        debug("onfinish");\n        dest.removeListener("close"\x2C onclose);\n        unpipe();\n      }\n      dest.once("finish"\x2C onfinish);\n      function unpipe() {\n        debug("unpipe");\n        src.unpipe(dest);\n      }\n      dest.emit("pipe"\x2C src);\n      if (dest.writableNeedDrain === true) {\n        if (state.flowing) {\n          pause();\n        }\n      } else if (!state.flowing) {\n        debug("pipe resume");\n        src.resume();\n      }\n      return dest;\n    };\n    function pipeOnDrain(src\x2C dest) {\n      return function pipeOnDrainFunctionResult() {\n        const state = src._readableState;\n        if (state.awaitDrainWriters === dest) {\n          debug("pipeOnDrain"\x2C 1);\n          state.awaitDrainWriters = null;\n        } else if (state.multiAwaitDrain) {\n          debug("pipeOnDrain"\x2C state.awaitDrainWriters.size);\n          state.awaitDrainWriters.delete(dest);\n        }\n        if (\n          (!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\n          src.listenerCount("data")\n        ) {\n          src.resume();\n        }\n      };\n    }\n    Readable.prototype.unpipe = function (dest) {\n      const state = this._readableState;\n      const unpipeInfo = {\n        hasUnpiped: false\x2C\n      };\n      if (state.pipes.length === 0) {\n        return this;\n      }\n      if (!dest) {\n        const dests = state.pipes;\n        state.pipes = [];\n        this.pause();\n        for (let i = 0; i < dests.length; i++) {\n          dests[i].emit("unpipe"\x2C this\x2C {\n            hasUnpiped: false\x2C\n          });\n        }\n        return this;\n      }\n      const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\n      if (index === -1) {\n        return this;\n      }\n      state.pipes.splice(index\x2C 1);\n      if (state.pipes.length === 0) {\n        this.pause();\n      }\n      dest.emit("unpipe"\x2C this\x2C unpipeInfo);\n      return this;\n    };\n    Readable.prototype.on = function (ev\x2C fn) {\n      const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\n      const state = this._readableState;\n      if (ev === "data") {\n        state.readableListening = this.listenerCount("readable") > 0;\n        if (state.flowing !== false) {\n          this.resume();\n        }\n      } else if (ev === "readable") {\n        if (!state.endEmitted && !state.readableListening) {\n          state.readableListening = state.needReadable = true;\n          state.flowing = false;\n          state.emittedReadable = false;\n          debug("on readable"\x2C state.length\x2C state.reading);\n          if (state.length) {\n            emitReadable(this);\n          } else if (!state.reading) {\n            process.nextTick(nReadingNextTick\x2C this);\n          }\n        }\n      }\n      return res;\n    };\n    Readable.prototype.addListener = Readable.prototype.on;\n    Readable.prototype.removeListener = function (ev\x2C fn) {\n      const res = Stream.prototype.removeListener.call(this\x2C ev\x2C fn);\n      if (ev === "readable") {\n        process.nextTick(updateReadableListening\x2C this);\n      }\n      return res;\n    };\n    Readable.prototype.off = Readable.prototype.removeListener;\n    Readable.prototype.removeAllListeners = function (ev) {\n      const res = Stream.prototype.removeAllListeners.apply(this\x2C arguments);\n      if (ev === "readable" || ev === void 0) {\n        process.nextTick(updateReadableListening\x2C this);\n      }\n      return res;\n    };\n    function updateReadableListening(self2) {\n      const state = self2._readableState;\n      state.readableListening = self2.listenerCount("readable") > 0;\n      if (state.resumeScheduled && state[kPaused] === false) {\n        state.flowing = true;\n      } else if (self2.listenerCount("data") > 0) {\n        self2.resume();\n      } else if (!state.readableListening) {\n        state.flowing = null;\n      }\n    }\n    function nReadingNextTick(self2) {\n      debug("readable nexttick read 0");\n      self2.read(0);\n    }\n    Readable.prototype.resume = function () {\n      const state = this._readableState;\n      if (!state.flowing) {\n        debug("resume");\n        state.flowing = !state.readableListening;\n        resume(this\x2C state);\n      }\n      state[kPaused] = false;\n      return this;\n    };\n    function resume(stream\x2C state) {\n      if (!state.resumeScheduled) {\n        state.resumeScheduled = true;\n        process.nextTick(resume_\x2C stream\x2C state);\n      }\n    }\n    function resume_(stream\x2C state) {\n      debug("resume"\x2C state.reading);\n      if (!state.reading) {\n        stream.read(0);\n      }\n      state.resumeScheduled = false;\n      stream.emit("resume");\n      flow(stream);\n      if (state.flowing && !state.reading) {\n        stream.read(0);\n      }\n    }\n    Readable.prototype.pause = function () {\n      debug("call pause flowing=%j"\x2C this._readableState.flowing);\n      if (this._readableState.flowing !== false) {\n        debug("pause");\n        this._readableState.flowing = false;\n        this.emit("pause");\n      }\n      this._readableState[kPaused] = true;\n      return this;\n    };\n    function flow(stream) {\n      const state = stream._readableState;\n      debug("flow"\x2C state.flowing);\n      while (state.flowing && stream.read() !== null);\n    }\n    Readable.prototype.wrap = function (stream) {\n      let paused = false;\n      stream.on("data"\x2C (chunk) => {\n        if (!this.push(chunk) && stream.pause) {\n          paused = true;\n          stream.pause();\n        }\n      });\n      stream.on("end"\x2C () => {\n        this.push(null);\n      });\n      stream.on("error"\x2C (err) => {\n        errorOrDestroy(this\x2C err);\n      });\n      stream.on("close"\x2C () => {\n        this.destroy();\n      });\n      stream.on("destroy"\x2C () => {\n        this.destroy();\n      });\n      this._read = () => {\n        if (paused && stream.resume) {\n          paused = false;\n          stream.resume();\n        }\n      };\n      const streamKeys = ObjectKeys(stream);\n      for (let j = 1; j < streamKeys.length; j++) {\n        const i = streamKeys[j];\n        if (this[i] === void 0 && typeof stream[i] === "function") {\n          this[i] = stream[i].bind(stream);\n        }\n      }\n      return this;\n    };\n    Readable.prototype[SymbolAsyncIterator] = function () {\n      return streamToAsyncIterator(this);\n    };\n    Readable.prototype.iterator = function (options) {\n      if (options !== void 0) {\n        validateObject(options\x2C "options");\n      }\n      return streamToAsyncIterator(this\x2C options);\n    };\n    function streamToAsyncIterator(stream\x2C options) {\n      if (typeof stream.read !== "function") {\n        stream = Readable.wrap(stream\x2C {\n          objectMode: true\x2C\n        });\n      }\n      const iter = createAsyncIterator(stream\x2C options);\n      iter.stream = stream;\n      return iter;\n    }\n    async function* createAsyncIterator(stream\x2C options) {\n      let callback = nop;\n      function next(resolve) {\n        if (this === stream) {\n          callback();\n          callback = nop;\n        } else {\n          callback = resolve;\n        }\n      }\n      stream.on("readable"\x2C next);\n      let error;\n      const cleanup = eos(\n        stream\x2C\n        {\n          writable: false\x2C\n        }\x2C\n        (err) => {\n          error = err ? aggregateTwoErrors(error\x2C err) : null;\n          callback();\n          callback = nop;\n        }\x2C\n      );\n      try {\n        while (true) {\n          const chunk = stream.destroyed ? null : stream.read();\n          if (chunk !== null) {\n            yield chunk;\n          } else if (error) {\n            throw error;\n          } else if (error === null) {\n            return;\n          } else {\n            await new Promise2(next);\n          }\n        }\n      } catch (err) {\n        error = aggregateTwoErrors(error\x2C err);\n        throw error;\n      } finally {\n        if (\n          (error ||\n            (options === null || options === void 0\n                ? void 0\n                : options.destroyOnReturn) !== false) &&\n          (error === void 0 || stream._readableState.autoDestroy)\n        ) {\n          destroyImpl.destroyer(stream\x2C null);\n        } else {\n          stream.off("readable"\x2C next);\n          cleanup();\n        }\n      }\n    }\n    ObjectDefineProperties(Readable.prototype\x2C {\n      readable: {\n        __proto__: null\x2C\n        get() {\n          const r = this._readableState;\n          return !!r && r.readable !== false && !r.destroyed &&\n            !r.errorEmitted && !r.endEmitted;\n        }\x2C\n        set(val) {\n          if (this._readableState) {\n            this._readableState.readable = !!val;\n          }\n        }\x2C\n      }\x2C\n      readableDidRead: {\n        __proto__: null\x2C\n        enumerable: false\x2C\n        get: function () {\n          return this._readableState.dataEmitted;\n        }\x2C\n      }\x2C\n      readableAborted: {\n        __proto__: null\x2C\n        enumerable: false\x2C\n        get: function () {\n          return !!(this._readableState.readable !== false &&\n            (this._readableState.destroyed || this._readableState.errored) &&\n            !this._readableState.endEmitted);\n        }\x2C\n      }\x2C\n      readableHighWaterMark: {\n        __proto__: null\x2C\n        enumerable: false\x2C\n        get: function () {\n          return this._readableState.highWaterMark;\n        }\x2C\n      }\x2C\n      readableBuffer: {\n        __proto__: null\x2C\n        enumerable: false\x2C\n        get: function () {\n          return this._readableState && this._readableState.buffer;\n        }\x2C\n      }\x2C\n      readableFlowing: {\n        __proto__: null\x2C\n        enumerable: false\x2C\n        get: function () {\n          return this._readableState.flowing;\n        }\x2C\n        set: function (state) {\n          if (this._readableState) {\n            this._readableState.flowing = state;\n          }\n        }\x2C\n      }\x2C\n      readableLength: {\n        __proto__: null\x2C\n        enumerable: false\x2C\n        get() {\n          return this._readableState.length;\n        }\x2C\n      }\x2C\n      readableObjectMode: {\n        __proto__: null\x2C\n        enumerable: false\x2C\n        get() {\n          return this._readableState ? this._readableState.objectMode : false;\n        }\x2C\n      }\x2C\n      readableEncoding: {\n        __proto__: null\x2C\n        enumerable: false\x2C\n        get() {\n          return this._readableState ? this._readableState.encoding : null;\n        }\x2C\n      }\x2C\n      errored: {\n        __proto__: null\x2C\n        enumerable: false\x2C\n        get() {\n          return this._readableState ? this._readableState.errored : null;\n        }\x2C\n      }\x2C\n      closed: {\n        __proto__: null\x2C\n        get() {\n          return this._readableState ? this._readableState.closed : false;\n        }\x2C\n      }\x2C\n      destroyed: {\n        __proto__: null\x2C\n        enumerable: false\x2C\n        get() {\n          return this._readableState ? this._readableState.destroyed : false;\n        }\x2C\n        set(value) {\n          if (!this._readableState) {\n            return;\n          }\n          this._readableState.destroyed = value;\n        }\x2C\n      }\x2C\n      readableEnded: {\n        __proto__: null\x2C\n        enumerable: false\x2C\n        get() {\n          return this._readableState ? this._readableState.endEmitted : false;\n        }\x2C\n      }\x2C\n    });\n    ObjectDefineProperties(ReadableState.prototype\x2C {\n      // Legacy getter for `pipesCount`.\n      pipesCount: {\n        __proto__: null\x2C\n        get() {\n          return this.pipes.length;\n        }\x2C\n      }\x2C\n      // Legacy property for `paused`.\n      paused: {\n        __proto__: null\x2C\n        get() {\n          return this[kPaused] !== false;\n        }\x2C\n        set(value) {\n          this[kPaused] = !!value;\n        }\x2C\n      }\x2C\n    });\n    Readable._fromList = fromList;\n    function fromList(n\x2C state) {\n      if (state.length === 0) {\n        return null;\n      }\n      let ret;\n      if (state.objectMode) {\n        ret = state.buffer.shift();\n      } else if (!n || n >= state.length) {\n        if (state.decoder) {\n          ret = state.buffer.join("");\n        } else if (state.buffer.length === 1) {\n          ret = state.buffer.first();\n        } else {\n          ret = state.buffer.concat(state.length);\n        }\n        state.buffer.clear();\n      } else {\n        ret = state.buffer.consume(n\x2C state.decoder);\n      }\n      return ret;\n    }\n    function endReadable(stream) {\n      const state = stream._readableState;\n      debug("endReadable"\x2C state.endEmitted);\n      if (!state.endEmitted) {\n        state.ended = true;\n        process.nextTick(endReadableNT\x2C state\x2C stream);\n      }\n    }\n    function endReadableNT(state\x2C stream) {\n      debug("endReadableNT"\x2C state.endEmitted\x2C state.length);\n      if (\n        !state.errored && !state.closeEmitted && !state.endEmitted &&\n        state.length === 0\n      ) {\n        state.endEmitted = true;\n        stream.emit("end");\n        if (stream.writable && stream.allowHalfOpen === false) {\n          process.nextTick(endWritableNT\x2C stream);\n        } else if (state.autoDestroy) {\n          const wState = stream._writableState;\n          const autoDestroy = !wState || wState.autoDestroy && // We don't expect the writable to ever 'finish'\n              // if writable is explicitly set to false.\n              (wState.finished || wState.writable === false);\n          if (autoDestroy) {\n            stream.destroy();\n          }\n        }\n      }\n    }\n    function endWritableNT(stream) {\n      const writable = stream.writable && !stream.writableEnded &&\n        !stream.destroyed;\n      if (writable) {\n        stream.end();\n      }\n    }\n    Readable.from = function (iterable\x2C opts) {\n      return from(Readable\x2C iterable\x2C opts);\n    };\n    var webStreamsAdapters;\n    function lazyWebStreams() {\n      if (webStreamsAdapters === void 0) {\n        webStreamsAdapters = {};\n      }\n      return webStreamsAdapters;\n    }\n    Readable.fromWeb = function (readableStream\x2C options) {\n      return lazyWebStreams().newStreamReadableFromReadableStream(\n        readableStream\x2C\n        options\x2C\n      );\n    };\n    Readable.toWeb = function (streamReadable\x2C options) {\n      return lazyWebStreams().newReadableStreamFromStreamReadable(\n        streamReadable\x2C\n        options\x2C\n      );\n    };\n    Readable.wrap = function (src\x2C options) {\n      var _ref\x2C _src$readableObjectMo;\n      return new Readable({\n        objectMode:\n          (_ref = (_src$readableObjectMo = src.readableObjectMode) !== null &&\n                  _src$readableObjectMo !== void 0\n                ? _src$readableObjectMo\n                : src.objectMode) !== null && _ref !== void 0\n            ? _ref\n            : true\x2C\n        ...options\x2C\n        destroy(err\x2C callback) {\n          destroyImpl.destroyer(src\x2C err);\n          callback(err);\n        }\x2C\n      }).wrap(src);\n    };\n  }\x2C\n});\n\n// lib/internal/streams/writable.js\nvar require_writable = __commonJS({\n  "lib/internal/streams/writable.js"(exports\x2C module) {\n    var process = require_browser2();\n    var {\n      ArrayPrototypeSlice\x2C\n      Error: Error2\x2C\n      FunctionPrototypeSymbolHasInstance\x2C\n      ObjectDefineProperty\x2C\n      ObjectDefineProperties\x2C\n      ObjectSetPrototypeOf\x2C\n      StringPrototypeToLowerCase\x2C\n      Symbol: Symbol2\x2C\n      SymbolHasInstance\x2C\n    } = require_primordials();\n    module.exports = Writable;\n    Writable.WritableState = WritableState;\n    var { EventEmitter: EE } = require_events();\n    var Stream = require_legacy().Stream;\n    var { Buffer: Buffer2 } = require_buffer();\n    var destroyImpl = require_destroy();\n    var { addAbortSignal } = require_add_abort_signal();\n    var { getHighWaterMark\x2C getDefaultHighWaterMark } = require_state();\n    var { errorOrDestroy } = destroyImpl;\n    ObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\n    ObjectSetPrototypeOf(Writable\x2C Stream);\n    function nop() {\n    }\n    var kOnFinished = Symbol2("kOnFinished");\n    function WritableState(options\x2C stream\x2C isDuplex) {\n      if (typeof isDuplex !== "boolean") {\n        isDuplex = stream instanceof require_duplex();\n      }\n      this.objectMode = !!(options && options.objectMode);\n      if (isDuplex) {\n        this.objectMode = this.objectMode ||\n          !!(options && options.writableObjectMode);\n      }\n      this.highWaterMark = options\n        ? getHighWaterMark(this\x2C options\x2C "writableHighWaterMark"\x2C isDuplex)\n        : getDefaultHighWaterMark(false);\n      this.finalCalled = false;\n      this.needDrain = false;\n      this.ending = false;\n      this.ended = false;\n      this.finished = false;\n      this.destroyed = false;\n      const noDecode = !!(options && options.decodeStrings === false);\n      this.decodeStrings = !noDecode;\n      this.defaultEncoding = options && options.defaultEncoding || "utf8";\n      this.length = 0;\n      this.writing = false;\n      this.corked = 0;\n      this.sync = true;\n      this.bufferProcessing = false;\n      this.onwrite = onwrite.bind(void 0\x2C stream);\n      this.writecb = null;\n      this.writelen = 0;\n      this.afterWriteTickInfo = null;\n      resetBuffer(this);\n      this.pendingcb = 0;\n      this.constructed = true;\n      this.prefinished = false;\n      this.errorEmitted = false;\n      this.emitClose = !options || options.emitClose !== false;\n      this.autoDestroy = !options || options.autoDestroy !== false;\n      this.errored = null;\n      this.closed = false;\n      this.closeEmitted = false;\n      this[kOnFinished] = [];\n    }\n    function resetBuffer(state) {\n      state.buffered = [];\n      state.bufferedIndex = 0;\n      state.allBuffers = true;\n      state.allNoop = true;\n    }\n    WritableState.prototype.getBuffer = function getBuffer() {\n      return ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\n    };\n    ObjectDefineProperty(WritableState.prototype\x2C "bufferedRequestCount"\x2C {\n      __proto__: null\x2C\n      get() {\n        return this.buffered.length - this.bufferedIndex;\n      }\x2C\n    });\n    function Writable(options) {\n      const isDuplex = this instanceof require_duplex();\n      if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable\x2C this)) {\n        return new Writable(options);\n      }\n      this._writableState = new WritableState(options\x2C this\x2C isDuplex);\n      if (options) {\n        if (typeof options.write === "function") {\n          this._write = options.write;\n        }\n        if (typeof options.writev === "function") {\n          this._writev = options.writev;\n        }\n        if (typeof options.destroy === "function") {\n          this._destroy = options.destroy;\n        }\n        if (typeof options.final === "function") {\n          this._final = options.final;\n        }\n        if (typeof options.construct === "function") {\n          this._construct = options.construct;\n        }\n        if (options.signal) {\n          addAbortSignal(options.signal\x2C this);\n        }\n      }\n      Stream.call(this\x2C options);\n      destroyImpl.construct(this\x2C () => {\n        const state = this._writableState;\n        if (!state.writing) {\n          clearBuffer(this\x2C state);\n        }\n        finishMaybe(this\x2C state);\n      });\n    }\n    ObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\n      __proto__: null\x2C\n      value: function (object) {\n        if (FunctionPrototypeSymbolHasInstance(this\x2C object)) {\n          return true;\n        }\n        if (this !== Writable) {\n          return false;\n        }\n        return object && object._writableState instanceof WritableState;\n      }\x2C\n    });\n    Writable.prototype.pipe = function () {\n      errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\n    };\n    function _write(stream\x2C chunk\x2C encoding\x2C cb) {\n      const state = stream._writableState;\n      if (typeof encoding === "function") {\n        cb = encoding;\n        encoding = state.defaultEncoding;\n      } else {\n        if (!encoding) {\n          encoding = state.defaultEncoding;\n        } else if (encoding !== "buffer" && !Buffer2.isEncoding(encoding)) {\n          throw new ERR_UNKNOWN_ENCODING(encoding);\n        }\n        if (typeof cb !== "function") {\n          cb = nop;\n        }\n      }\n      if (chunk === null) {\n        throw new ERR_STREAM_NULL_VALUES();\n      } else if (!state.objectMode) {\n        if (typeof chunk === "string") {\n          if (state.decodeStrings !== false) {\n            chunk = Buffer2.from(chunk\x2C encoding);\n            encoding = "buffer";\n          }\n        } else if (chunk instanceof Buffer2) {\n          encoding = "buffer";\n        } else if (Stream._isUint8Array(chunk)) {\n          chunk = Stream._uint8ArrayToBuffer(chunk);\n          encoding = "buffer";\n        } else {\n          throw new ERR_INVALID_ARG_TYPE("chunk"\x2C [\n            "string"\x2C\n            "Buffer"\x2C\n            "Uint8Array"\x2C\n          ]\x2C chunk);\n        }\n      }\n      let err;\n      if (state.ending) {\n        err = new ERR_STREAM_WRITE_AFTER_END();\n      } else if (state.destroyed) {\n        err = new ERR_STREAM_DESTROYED("write");\n      }\n      if (err) {\n        process.nextTick(cb\x2C err);\n        errorOrDestroy(stream\x2C err\x2C true);\n        return err;\n      }\n      state.pendingcb++;\n      return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\n    }\n    Writable.prototype.write = function (chunk\x2C encoding\x2C cb) {\n      return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\n    };\n    Writable.prototype.cork = function () {\n      this._writableState.corked++;\n    };\n    Writable.prototype.uncork = function () {\n      const state = this._writableState;\n      if (state.corked) {\n        state.corked--;\n        if (!state.writing) {\n          clearBuffer(this\x2C state);\n        }\n      }\n    };\n    Writable.prototype.setDefaultEncoding = function setDefaultEncoding(\n      encoding\x2C\n    ) {\n      if (typeof encoding === "string") {\n        encoding = StringPrototypeToLowerCase(encoding);\n      }\n      if (!Buffer2.isEncoding(encoding)) {\n        throw new ERR_UNKNOWN_ENCODING(encoding);\n      }\n      this._writableState.defaultEncoding = encoding;\n      return this;\n    };\n    function writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\n      const len = state.objectMode ? 1 : chunk.length;\n      state.length += len;\n      const ret = state.length < state.highWaterMark;\n      if (!ret) {\n        state.needDrain = true;\n      }\n      if (\n        state.writing || state.corked || state.errored || !state.constructed\n      ) {\n        state.buffered.push({\n          chunk\x2C\n          encoding\x2C\n          callback\x2C\n        });\n        if (state.allBuffers && encoding !== "buffer") {\n          state.allBuffers = false;\n        }\n        if (state.allNoop && callback !== nop) {\n          state.allNoop = false;\n        }\n      } else {\n        state.writelen = len;\n        state.writecb = callback;\n        state.writing = true;\n        state.sync = true;\n        stream._write(chunk\x2C encoding\x2C state.onwrite);\n        state.sync = false;\n      }\n      return ret && !state.errored && !state.destroyed;\n    }\n    function doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\n      state.writelen = len;\n      state.writecb = cb;\n      state.writing = true;\n      state.sync = true;\n      if (state.destroyed) {\n        state.onwrite(new ERR_STREAM_DESTROYED("write"));\n      } else if (writev) {\n        stream._writev(chunk\x2C state.onwrite);\n      } else {\n        stream._write(chunk\x2C encoding\x2C state.onwrite);\n      }\n      state.sync = false;\n    }\n    function onwriteError(stream\x2C state\x2C er\x2C cb) {\n      --state.pendingcb;\n      cb(er);\n      errorBuffer(state);\n      errorOrDestroy(stream\x2C er);\n    }\n    function onwrite(stream\x2C er) {\n      const state = stream._writableState;\n      const sync = state.sync;\n      const cb = state.writecb;\n      if (typeof cb !== "function") {\n        errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\n        return;\n      }\n      state.writing = false;\n      state.writecb = null;\n      state.length -= state.writelen;\n      state.writelen = 0;\n      if (er) {\n        er.stack;\n        if (!state.errored) {\n          state.errored = er;\n        }\n        if (stream._readableState && !stream._readableState.errored) {\n          stream._readableState.errored = er;\n        }\n        if (sync) {\n          process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\n        } else {\n          onwriteError(stream\x2C state\x2C er\x2C cb);\n        }\n      } else {\n        if (state.buffered.length > state.bufferedIndex) {\n          clearBuffer(stream\x2C state);\n        }\n        if (sync) {\n          if (\n            state.afterWriteTickInfo !== null &&\n            state.afterWriteTickInfo.cb === cb\n          ) {\n            state.afterWriteTickInfo.count++;\n          } else {\n            state.afterWriteTickInfo = {\n              count: 1\x2C\n              cb\x2C\n              stream\x2C\n              state\x2C\n            };\n            process.nextTick(afterWriteTick\x2C state.afterWriteTickInfo);\n          }\n        } else {\n          afterWrite(stream\x2C state\x2C 1\x2C cb);\n        }\n      }\n    }\n    function afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\n      state.afterWriteTickInfo = null;\n      return afterWrite(stream\x2C state\x2C count\x2C cb);\n    }\n    function afterWrite(stream\x2C state\x2C count\x2C cb) {\n      const needDrain = !state.ending && !stream.destroyed &&\n        state.length === 0 && state.needDrain;\n      if (needDrain) {\n        state.needDrain = false;\n        stream.emit("drain");\n      }\n      while (count-- > 0) {\n        state.pendingcb--;\n        cb();\n      }\n      if (state.destroyed) {\n        errorBuffer(state);\n      }\n      finishMaybe(stream\x2C state);\n    }\n    function errorBuffer(state) {\n      if (state.writing) {\n        return;\n      }\n      for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\n        var _state$errored;\n        const { chunk\x2C callback } = state.buffered[n];\n        const len = state.objectMode ? 1 : chunk.length;\n        state.length -= len;\n        callback(\n          (_state$errored = state.errored) !== null && _state$errored !== void 0\n            ? _state$errored\n            : new ERR_STREAM_DESTROYED("write")\x2C\n        );\n      }\n      const onfinishCallbacks = state[kOnFinished].splice(0);\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\n        var _state$errored2;\n        onfinishCallbacks[i](\n          (_state$errored2 = state.errored) !== null &&\n            _state$errored2 !== void 0\n            ? _state$errored2\n            : new ERR_STREAM_DESTROYED("end")\x2C\n        );\n      }\n      resetBuffer(state);\n    }\n    function clearBuffer(stream\x2C state) {\n      if (\n        state.corked || state.bufferProcessing || state.destroyed ||\n        !state.constructed\n      ) {\n        return;\n      }\n      const { buffered\x2C bufferedIndex\x2C objectMode } = state;\n      const bufferedLength = buffered.length - bufferedIndex;\n      if (!bufferedLength) {\n        return;\n      }\n      let i = bufferedIndex;\n      state.bufferProcessing = true;\n      if (bufferedLength > 1 && stream._writev) {\n        state.pendingcb -= bufferedLength - 1;\n        const callback = state.allNoop ? nop : (err) => {\n          for (let n = i; n < buffered.length; ++n) {\n            buffered[n].callback(err);\n          }\n        };\n        const chunks = state.allNoop && i === 0\n          ? buffered\n          : ArrayPrototypeSlice(buffered\x2C i);\n        chunks.allBuffers = state.allBuffers;\n        doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ""\x2C callback);\n        resetBuffer(state);\n      } else {\n        do {\n          const { chunk\x2C encoding\x2C callback } = buffered[i];\n          buffered[i++] = null;\n          const len = objectMode ? 1 : chunk.length;\n          doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\n        } while (i < buffered.length && !state.writing);\n        if (i === buffered.length) {\n          resetBuffer(state);\n        } else if (i > 256) {\n          buffered.splice(0\x2C i);\n          state.bufferedIndex = 0;\n        } else {\n          state.bufferedIndex = i;\n        }\n      }\n      state.bufferProcessing = false;\n    }\n    Writable.prototype._write = function (chunk\x2C encoding\x2C cb) {\n      if (this._writev) {\n        this._writev(\n          [\n            {\n              chunk\x2C\n              encoding\x2C\n            }\x2C\n          ]\x2C\n          cb\x2C\n        );\n      } else {\n        throw new ERR_METHOD_NOT_IMPLEMENTED("_write()");\n      }\n    };\n    Writable.prototype._writev = null;\n    Writable.prototype.end = function (chunk\x2C encoding\x2C cb) {\n      const state = this._writableState;\n      if (typeof chunk === "function") {\n        cb = chunk;\n        chunk = null;\n        encoding = null;\n      } else if (typeof encoding === "function") {\n        cb = encoding;\n        encoding = null;\n      }\n      let err;\n      if (chunk !== null && chunk !== void 0) {\n        const ret = _write(this\x2C chunk\x2C encoding);\n        if (ret instanceof Error2) {\n          err = ret;\n        }\n      }\n      if (state.corked) {\n        state.corked = 1;\n        this.uncork();\n      }\n      if (err) {\n      } else if (!state.errored && !state.ending) {\n        state.ending = true;\n        finishMaybe(this\x2C state\x2C true);\n        state.ended = true;\n      } else if (state.finished) {\n        err = new ERR_STREAM_ALREADY_FINISHED("end");\n      } else if (state.destroyed) {\n        err = new ERR_STREAM_DESTROYED("end");\n      }\n      if (typeof cb === "function") {\n        if (err || state.finished) {\n          process.nextTick(cb\x2C err);\n        } else {\n          state[kOnFinished].push(cb);\n        }\n      }\n      return this;\n    };\n    function needFinish(state) {\n      return state.ending && !state.destroyed && state.constructed &&\n        state.length === 0 && !state.errored && state.buffered.length === 0 &&\n        !state.finished && !state.writing && !state.errorEmitted &&\n        !state.closeEmitted;\n    }\n    function callFinal(stream\x2C state) {\n      let called = false;\n      function onFinish(err) {\n        if (called) {\n          errorOrDestroy(\n            stream\x2C\n            err !== null && err !== void 0 ? err : ERR_MULTIPLE_CALLBACK()\x2C\n          );\n          return;\n        }\n        called = true;\n        state.pendingcb--;\n        if (err) {\n          const onfinishCallbacks = state[kOnFinished].splice(0);\n          for (let i = 0; i < onfinishCallbacks.length; i++) {\n            onfinishCallbacks[i](err);\n          }\n          errorOrDestroy(stream\x2C err\x2C state.sync);\n        } else if (needFinish(state)) {\n          state.prefinished = true;\n          stream.emit("prefinish");\n          state.pendingcb++;\n          process.nextTick(finish\x2C stream\x2C state);\n        }\n      }\n      state.sync = true;\n      state.pendingcb++;\n      try {\n        stream._final(onFinish);\n      } catch (err) {\n        onFinish(err);\n      }\n      state.sync = false;\n    }\n    function prefinish(stream\x2C state) {\n      if (!state.prefinished && !state.finalCalled) {\n        if (typeof stream._final === "function" && !state.destroyed) {\n          state.finalCalled = true;\n          callFinal(stream\x2C state);\n        } else {\n          state.prefinished = true;\n          stream.emit("prefinish");\n        }\n      }\n    }\n    function finishMaybe(stream\x2C state\x2C sync) {\n      if (needFinish(state)) {\n        prefinish(stream\x2C state);\n        if (state.pendingcb === 0) {\n          if (sync) {\n            state.pendingcb++;\n            process.nextTick(\n              (stream2\x2C state2) => {\n                if (needFinish(state2)) {\n                  finish(stream2\x2C state2);\n                } else {\n                  state2.pendingcb--;\n                }\n              }\x2C\n              stream\x2C\n              state\x2C\n            );\n          } else if (needFinish(state)) {\n            state.pendingcb++;\n            finish(stream\x2C state);\n          }\n        }\n      }\n    }\n    function finish(stream\x2C state) {\n      state.pendingcb--;\n      state.finished = true;\n      const onfinishCallbacks = state[kOnFinished].splice(0);\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\n        onfinishCallbacks[i]();\n      }\n      stream.emit("finish");\n      if (state.autoDestroy) {\n        const rState = stream._readableState;\n        const autoDestroy = !rState || rState.autoDestroy && // We don't expect the readable to ever 'end'\n            // if readable is explicitly set to false.\n            (rState.endEmitted || rState.readable === false);\n        if (autoDestroy) {\n          stream.destroy();\n        }\n      }\n    }\n    ObjectDefineProperties(Writable.prototype\x2C {\n      closed: {\n        __proto__: null\x2C\n        get() {\n          return this._writableState ? this._writableState.closed : false;\n        }\x2C\n      }\x2C\n      destroyed: {\n        __proto__: null\x2C\n        get() {\n          return this._writableState ? this._writableState.destroyed : false;\n        }\x2C\n        set(value) {\n          if (this._writableState) {\n            this._writableState.destroyed = value;\n          }\n        }\x2C\n      }\x2C\n      writable: {\n        __proto__: null\x2C\n        get() {\n          const w = this._writableState;\n          return !!w && w.writable !== false && !w.destroyed && !w.errored &&\n            !w.ending && !w.ended;\n        }\x2C\n        set(val) {\n          if (this._writableState) {\n            this._writableState.writable = !!val;\n          }\n        }\x2C\n      }\x2C\n      writableFinished: {\n        __proto__: null\x2C\n        get() {\n          return this._writableState ? this._writableState.finished : false;\n        }\x2C\n      }\x2C\n      writableObjectMode: {\n        __proto__: null\x2C\n        get() {\n          return this._writableState ? this._writableState.objectMode : false;\n        }\x2C\n      }\x2C\n      writableBuffer: {\n        __proto__: null\x2C\n        get() {\n          return this._writableState && this._writableState.getBuffer();\n        }\x2C\n      }\x2C\n      writableEnded: {\n        __proto__: null\x2C\n        get() {\n          return this._writableState ? this._writableState.ending : false;\n        }\x2C\n      }\x2C\n      writableNeedDrain: {\n        __proto__: null\x2C\n        get() {\n          const wState = this._writableState;\n          if (!wState) {\n            return false;\n          }\n          return !wState.destroyed && !wState.ending && wState.needDrain;\n        }\x2C\n      }\x2C\n      writableHighWaterMark: {\n        __proto__: null\x2C\n        get() {\n          return this._writableState && this._writableState.highWaterMark;\n        }\x2C\n      }\x2C\n      writableCorked: {\n        __proto__: null\x2C\n        get() {\n          return this._writableState ? this._writableState.corked : 0;\n        }\x2C\n      }\x2C\n      writableLength: {\n        __proto__: null\x2C\n        get() {\n          return this._writableState && this._writableState.length;\n        }\x2C\n      }\x2C\n      errored: {\n        __proto__: null\x2C\n        enumerable: false\x2C\n        get() {\n          return this._writableState ? this._writableState.errored : null;\n        }\x2C\n      }\x2C\n      writableAborted: {\n        __proto__: null\x2C\n        enumerable: false\x2C\n        get: function () {\n          return !!(this._writableState.writable !== false &&\n            (this._writableState.destroyed || this._writableState.errored) &&\n            !this._writableState.finished);\n        }\x2C\n      }\x2C\n    });\n    var destroy = destroyImpl.destroy;\n    Writable.prototype.destroy = function (err\x2C cb) {\n      const state = this._writableState;\n      if (\n        !state.destroyed &&\n        (state.bufferedIndex < state.buffered.length ||\n          state[kOnFinished].length)\n      ) {\n        process.nextTick(errorBuffer\x2C state);\n      }\n      destroy.call(this\x2C err\x2C cb);\n      return this;\n    };\n    Writable.prototype._undestroy = destroyImpl.undestroy;\n    Writable.prototype._destroy = function (err\x2C cb) {\n      cb(err);\n    };\n    Writable.prototype[EE.captureRejectionSymbol] = function (err) {\n      this.destroy(err);\n    };\n    var webStreamsAdapters;\n    function lazyWebStreams() {\n      if (webStreamsAdapters === void 0) {\n        webStreamsAdapters = {};\n      }\n      return webStreamsAdapters;\n    }\n    Writable.fromWeb = function (writableStream\x2C options) {\n      return lazyWebStreams().newStreamWritableFromWritableStream(\n        writableStream\x2C\n        options\x2C\n      );\n    };\n    Writable.toWeb = function (streamWritable) {\n      return lazyWebStreams().newWritableStreamFromStreamWritable(\n        streamWritable\x2C\n      );\n    };\n  }\x2C\n});\n\n// lib/internal/streams/duplexify.js\nvar require_duplexify = __commonJS({\n  "lib/internal/streams/duplexify.js"(exports\x2C module) {\n    var process = require_browser2();\n    var bufferModule = require_buffer();\n    var {\n      isReadable\x2C\n      isWritable\x2C\n      isIterable\x2C\n      isNodeStream\x2C\n      isReadableNodeStream\x2C\n      isWritableNodeStream\x2C\n      isDuplexNodeStream\x2C\n    } = require_utils();\n    var eos = require_end_of_stream();\n    var { destroyer } = require_destroy();\n    var Duplex = require_duplex();\n    var Readable = require_readable();\n    var from = require_from();\n    var isBlob = typeof Blob !== "undefined"\n      ? function isBlob2(b) {\n        return b instanceof Blob;\n      }\n      : function isBlob2(b) {\n        return false;\n      };\n    var { FunctionPrototypeCall } = require_primordials();\n    var Duplexify = class extends Duplex {\n      constructor(options) {\n        super(options);\n        if (\n          (options === null || options === void 0\n            ? void 0\n            : options.readable) === false\n        ) {\n          this._readableState.readable = false;\n          this._readableState.ended = true;\n          this._readableState.endEmitted = true;\n        }\n        if (\n          (options === null || options === void 0\n            ? void 0\n            : options.writable) === false\n        ) {\n          this._writableState.writable = false;\n          this._writableState.ending = true;\n          this._writableState.ended = true;\n          this._writableState.finished = true;\n        }\n      }\n    };\n    module.exports = function duplexify(body\x2C name) {\n      if (isDuplexNodeStream(body)) {\n        return body;\n      }\n      if (isReadableNodeStream(body)) {\n        return _duplexify({\n          readable: body\x2C\n        });\n      }\n      if (isWritableNodeStream(body)) {\n        return _duplexify({\n          writable: body\x2C\n        });\n      }\n      if (isNodeStream(body)) {\n        return _duplexify({\n          writable: false\x2C\n          readable: false\x2C\n        });\n      }\n\n      if (typeof body === "function") {\n        const { value\x2C write\x2C final\x2C destroy } = fromAsyncGen(body);\n        if (isIterable(value)) {\n          return from(Duplexify\x2C value\x2C {\n            // TODO (ronag): highWaterMark?\n            objectMode: true\x2C\n            write\x2C\n            final\x2C\n            destroy\x2C\n          });\n        }\n        const then2 = value === null || value === void 0 ? void 0 : value.then;\n        if (typeof then2 === "function") {\n          let d;\n          const promise = FunctionPrototypeCall(\n            then2\x2C\n            value\x2C\n            (val) => {\n              if (val != null) {\n                throw new ERR_INVALID_RETURN_VALUE("nully"\x2C "body"\x2C val);\n              }\n            }\x2C\n            (err) => {\n              destroyer(d\x2C err);\n            }\x2C\n          );\n          return d = new Duplexify({\n            // TODO (ronag): highWaterMark?\n            objectMode: true\x2C\n            readable: false\x2C\n            write\x2C\n            final(cb) {\n              final(async () => {\n                try {\n                  await promise;\n                  process.nextTick(cb\x2C null);\n                } catch (err) {\n                  process.nextTick(cb\x2C err);\n                }\n              });\n            }\x2C\n            destroy\x2C\n          });\n        }\n        throw new ERR_INVALID_RETURN_VALUE(\n          "Iterable\x2C AsyncIterable or AsyncFunction"\x2C\n          name\x2C\n          value\x2C\n        );\n      }\n      if (isBlob(body)) {\n        return duplexify(body.arrayBuffer());\n      }\n      if (isIterable(body)) {\n        return from(Duplexify\x2C body\x2C {\n          // TODO (ronag): highWaterMark?\n          objectMode: true\x2C\n          writable: false\x2C\n        });\n      }\n      if (\n        typeof (body === null || body === void 0 ? void 0 : body.writable) ===\n          "object" ||\n        typeof (body === null || body === void 0 ? void 0 : body.readable) ===\n          "object"\n      ) {\n        const readable = body !== null && body !== void 0 && body.readable\n          ? isReadableNodeStream(\n              body === null || body === void 0 ? void 0 : body.readable\x2C\n            )\n            ? body === null || body === void 0 ? void 0 : body.readable\n            : duplexify(body.readable)\n          : void 0;\n        const writable = body !== null && body !== void 0 && body.writable\n          ? isWritableNodeStream(\n              body === null || body === void 0 ? void 0 : body.writable\x2C\n            )\n            ? body === null || body === void 0 ? void 0 : body.writable\n            : duplexify(body.writable)\n          : void 0;\n        return _duplexify({\n          readable\x2C\n          writable\x2C\n        });\n      }\n      const then = body === null || body === void 0 ? void 0 : body.then;\n      if (typeof then === "function") {\n        let d;\n        FunctionPrototypeCall(\n          then\x2C\n          body\x2C\n          (val) => {\n            if (val != null) {\n              d.push(val);\n            }\n            d.push(null);\n          }\x2C\n          (err) => {\n            destroyer(d\x2C err);\n          }\x2C\n        );\n        return d = new Duplexify({\n          objectMode: true\x2C\n          writable: false\x2C\n          read() {\n          }\x2C\n        });\n      }\n      throw new ERR_INVALID_ARG_TYPE(\n        name\x2C\n        [\n          "Blob"\x2C\n          "ReadableStream"\x2C\n          "WritableStream"\x2C\n          "Stream"\x2C\n          "Iterable"\x2C\n          "AsyncIterable"\x2C\n          "Function"\x2C\n          "{ readable\x2C writable } pair"\x2C\n          "Promise"\x2C\n        ]\x2C\n        body\x2C\n      );\n    };\n    function fromAsyncGen(fn) {\n      let { promise\x2C resolve } = createDeferredPromise();\n      const ac = new AbortController();\n      const signal = ac.signal;\n      const value = fn(\n        async function* () {\n          while (true) {\n            const _promise = promise;\n            promise = null;\n            const { chunk\x2C done\x2C cb } = await _promise;\n            process.nextTick(cb);\n            if (done) {\n              return;\n            }\n            if (signal.aborted) {\n              throw new AbortError(void 0\x2C {\n                cause: signal.reason\x2C\n              });\n            }\n            ({ promise\x2C resolve } = createDeferredPromise());\n            yield chunk;\n          }\n        }()\x2C\n        {\n          signal\x2C\n        }\x2C\n      );\n      return {\n        value\x2C\n        write(chunk\x2C encoding\x2C cb) {\n          const _resolve = resolve;\n          resolve = null;\n          _resolve({\n            chunk\x2C\n            done: false\x2C\n            cb\x2C\n          });\n        }\x2C\n        final(cb) {\n          const _resolve = resolve;\n          resolve = null;\n          _resolve({\n            done: true\x2C\n            cb\x2C\n          });\n        }\x2C\n        destroy(err\x2C cb) {\n          ac.abort();\n          cb(err);\n        }\x2C\n      };\n    }\n    function _duplexify(pair) {\n      const r = pair.readable && typeof pair.readable.read !== "function"\n        ? Readable.wrap(pair.readable)\n        : pair.readable;\n      const w = pair.writable;\n      let readable = !!isReadable(r);\n      let writable = !!isWritable(w);\n      let ondrain;\n      let onfinish;\n      let onreadable;\n      let onclose;\n      let d;\n      function onfinished(err) {\n        const cb = onclose;\n        onclose = null;\n        if (cb) {\n          cb(err);\n        } else if (err) {\n          d.destroy(err);\n        }\n      }\n      d = new Duplexify({\n        // TODO (ronag): highWaterMark?\n        readableObjectMode:\n          !!(r !== null && r !== void 0 && r.readableObjectMode)\x2C\n        writableObjectMode:\n          !!(w !== null && w !== void 0 && w.writableObjectMode)\x2C\n        readable\x2C\n        writable\x2C\n      });\n      if (writable) {\n        eos(w\x2C (err) => {\n          writable = false;\n          if (err) {\n            destroyer(r\x2C err);\n          }\n          onfinished(err);\n        });\n        d._write = function (chunk\x2C encoding\x2C callback) {\n          if (w.write(chunk\x2C encoding)) {\n            callback();\n          } else {\n            ondrain = callback;\n          }\n        };\n        d._final = function (callback) {\n          w.end();\n          onfinish = callback;\n        };\n        w.on("drain"\x2C function () {\n          if (ondrain) {\n            const cb = ondrain;\n            ondrain = null;\n            cb();\n          }\n        });\n        w.on("finish"\x2C function () {\n          if (onfinish) {\n            const cb = onfinish;\n            onfinish = null;\n            cb();\n          }\n        });\n      }\n      if (readable) {\n        eos(r\x2C (err) => {\n          readable = false;\n          if (err) {\n            destroyer(r\x2C err);\n          }\n          onfinished(err);\n        });\n        r.on("readable"\x2C function () {\n          if (onreadable) {\n            const cb = onreadable;\n            onreadable = null;\n            cb();\n          }\n        });\n        r.on("end"\x2C function () {\n          d.push(null);\n        });\n        d._read = function () {\n          while (true) {\n            const buf = r.read();\n            if (buf === null) {\n              onreadable = d._read;\n              return;\n            }\n            if (!d.push(buf)) {\n              return;\n            }\n          }\n        };\n      }\n      d._destroy = function (err\x2C callback) {\n        if (!err && onclose !== null) {\n          err = new AbortError();\n        }\n        onreadable = null;\n        ondrain = null;\n        onfinish = null;\n        if (onclose === null) {\n          callback(err);\n        } else {\n          onclose = callback;\n          destroyer(w\x2C err);\n          destroyer(r\x2C err);\n        }\n      };\n      return d;\n    }\n  }\x2C\n});\n\n// lib/internal/streams/duplex.js\nvar require_duplex = __commonJS({\n  "lib/internal/streams/duplex.js"(exports\x2C module) {\n    "use strict";\n    var {\n      ObjectDefineProperties\x2C\n      ObjectGetOwnPropertyDescriptor\x2C\n      ObjectKeys\x2C\n      ObjectSetPrototypeOf\x2C\n    } = require_primordials();\n    module.exports = Duplex;\n    var Readable = require_readable();\n    var Writable = require_writable();\n    ObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\n    ObjectSetPrototypeOf(Duplex\x2C Readable);\n    {\n      const keys = ObjectKeys(Writable.prototype);\n      for (let i = 0; i < keys.length; i++) {\n        const method = keys[i];\n        if (!Duplex.prototype[method]) {\n          Duplex.prototype[method] = Writable.prototype[method];\n        }\n      }\n    }\n    function Duplex(options) {\n      if (!(this instanceof Duplex)) {\n        return new Duplex(options);\n      }\n      Readable.call(this\x2C options);\n      Writable.call(this\x2C options);\n      if (options) {\n        this.allowHalfOpen = options.allowHalfOpen !== false;\n        if (options.readable === false) {\n          this._readableState.readable = false;\n          this._readableState.ended = true;\n          this._readableState.endEmitted = true;\n        }\n        if (options.writable === false) {\n          this._writableState.writable = false;\n          this._writableState.ending = true;\n          this._writableState.ended = true;\n          this._writableState.finished = true;\n        }\n      } else {\n        this.allowHalfOpen = true;\n      }\n    }\n    ObjectDefineProperties(Duplex.prototype\x2C {\n      writable: {\n        __proto__: null\x2C\n        ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C "writable")\x2C\n      }\x2C\n      writableHighWaterMark: {\n        __proto__: null\x2C\n        ...ObjectGetOwnPropertyDescriptor(\n          Writable.prototype\x2C\n          "writableHighWaterMark"\x2C\n        )\x2C\n      }\x2C\n      writableObjectMode: {\n        __proto__: null\x2C\n        ...ObjectGetOwnPropertyDescriptor(\n          Writable.prototype\x2C\n          "writableObjectMode"\x2C\n        )\x2C\n      }\x2C\n      writableBuffer: {\n        __proto__: null\x2C\n        ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C "writableBuffer")\x2C\n      }\x2C\n      writableLength: {\n        __proto__: null\x2C\n        ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C "writableLength")\x2C\n      }\x2C\n      writableFinished: {\n        __proto__: null\x2C\n        ...ObjectGetOwnPropertyDescriptor(\n          Writable.prototype\x2C\n          "writableFinished"\x2C\n        )\x2C\n      }\x2C\n      writableCorked: {\n        __proto__: null\x2C\n        ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C "writableCorked")\x2C\n      }\x2C\n      writableEnded: {\n        __proto__: null\x2C\n        ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C "writableEnded")\x2C\n      }\x2C\n      writableNeedDrain: {\n        __proto__: null\x2C\n        ...ObjectGetOwnPropertyDescriptor(\n          Writable.prototype\x2C\n          "writableNeedDrain"\x2C\n        )\x2C\n      }\x2C\n      destroyed: {\n        __proto__: null\x2C\n        get() {\n          if (\n            this._readableState === void 0 || this._writableState === void 0\n          ) {\n            return false;\n          }\n          return this._readableState.destroyed && this._writableState.destroyed;\n        }\x2C\n        set(value) {\n          if (this._readableState && this._writableState) {\n            this._readableState.destroyed = value;\n            this._writableState.destroyed = value;\n          }\n        }\x2C\n      }\x2C\n    });\n    var webStreamsAdapters;\n    function lazyWebStreams() {\n      if (webStreamsAdapters === void 0) {\n        webStreamsAdapters = {};\n      }\n      return webStreamsAdapters;\n    }\n    Duplex.fromWeb = function (pair\x2C options) {\n      return lazyWebStreams().newStreamDuplexFromReadableWritablePair(\n        pair\x2C\n        options\x2C\n      );\n    };\n    Duplex.toWeb = function (duplex) {\n      return lazyWebStreams().newReadableWritablePairFromDuplex(duplex);\n    };\n    var duplexify;\n    Duplex.from = function (body) {\n      if (!duplexify) {\n        duplexify = require_duplexify();\n      }\n      return duplexify(body\x2C "body");\n    };\n  }\x2C\n});\n\n// lib/internal/streams/transform.js\nvar require_transform = __commonJS({\n  "lib/internal/streams/transform.js"(exports\x2C module) {\n    "use strict";\n    var { ObjectSetPrototypeOf\x2C Symbol: Symbol2 } = require_primordials();\n    module.exports = Transform;\n    var Duplex = require_duplex();\n    var { getHighWaterMark } = require_state();\n    ObjectSetPrototypeOf(Transform.prototype\x2C Duplex.prototype);\n    ObjectSetPrototypeOf(Transform\x2C Duplex);\n    var kCallback = Symbol2("kCallback");\n    function Transform(options) {\n      if (!(this instanceof Transform)) {\n        return new Transform(options);\n      }\n      const readableHighWaterMark = options\n        ? getHighWaterMark(this\x2C options\x2C "readableHighWaterMark"\x2C true)\n        : null;\n      if (readableHighWaterMark === 0) {\n        options = {\n          ...options\x2C\n          highWaterMark: null\x2C\n          readableHighWaterMark\x2C\n          // TODO (ronag): 0 is not optimal since we have\n          // a "bug" where we check needDrain before calling _write and not after.\n          // Refs: https://github.com/nodejs/node/pull/32887\n          // Refs: https://github.com/nodejs/node/pull/35941\n          writableHighWaterMark: options.writableHighWaterMark || 0\x2C\n        };\n      }\n      Duplex.call(this\x2C options);\n      this._readableState.sync = false;\n      this[kCallback] = null;\n      if (options) {\n        if (typeof options.transform === "function") {\n          this._transform = options.transform;\n        }\n        if (typeof options.flush === "function") {\n          this._flush = options.flush;\n        }\n      }\n      this.on("prefinish"\x2C prefinish);\n    }\n    function final(cb) {\n      if (typeof this._flush === "function" && !this.destroyed) {\n        this._flush((er\x2C data) => {\n          if (er) {\n            if (cb) {\n              cb(er);\n            } else {\n              this.destroy(er);\n            }\n            return;\n          }\n          if (data != null) {\n            this.push(data);\n          }\n          this.push(null);\n          if (cb) {\n            cb();\n          }\n        });\n      } else {\n        this.push(null);\n        if (cb) {\n          cb();\n        }\n      }\n    }\n    function prefinish() {\n      if (this._final !== final) {\n        final.call(this);\n      }\n    }\n    Transform.prototype._final = final;\n    Transform.prototype._transform = function (chunk\x2C encoding\x2C callback) {\n      throw new ERR_METHOD_NOT_IMPLEMENTED("_transform()");\n    };\n    Transform.prototype._write = function (chunk\x2C encoding\x2C callback) {\n      const rState = this._readableState;\n      const wState = this._writableState;\n      const length = rState.length;\n      this._transform(chunk\x2C encoding\x2C (err\x2C val) => {\n        if (err) {\n          callback(err);\n          return;\n        }\n        if (val != null) {\n          this.push(val);\n        }\n        if (\n          wState.ended || // Backwards compat.\n          length === rState.length || // Backwards compat.\n          rState.length < rState.highWaterMark\n        ) {\n          callback();\n        } else {\n          this[kCallback] = callback;\n        }\n      });\n    };\n    Transform.prototype._read = function () {\n      if (this[kCallback]) {\n        const callback = this[kCallback];\n        this[kCallback] = null;\n        callback();\n      }\n    };\n  }\x2C\n});\n\n// lib/internal/streams/passthrough.js\nvar require_passthrough = __commonJS({\n  "lib/internal/streams/passthrough.js"(exports\x2C module) {\n    "use strict";\n    var { ObjectSetPrototypeOf } = require_primordials();\n    module.exports = PassThrough;\n    var Transform = require_transform();\n    ObjectSetPrototypeOf(PassThrough.prototype\x2C Transform.prototype);\n    ObjectSetPrototypeOf(PassThrough\x2C Transform);\n    function PassThrough(options) {\n      if (!(this instanceof PassThrough)) {\n        return new PassThrough(options);\n      }\n      Transform.call(this\x2C options);\n    }\n    PassThrough.prototype._transform = function (chunk\x2C encoding\x2C cb) {\n      cb(null\x2C chunk);\n    };\n  }\x2C\n});\n\n// lib/internal/streams/pipeline.js\nvar require_pipeline = __commonJS({\n  "lib/internal/streams/pipeline.js"(exports\x2C module) {\n    var process = require_browser2();\n    var { ArrayIsArray\x2C Promise: Promise2\x2C SymbolAsyncIterator } =\n      require_primordials();\n    var eos = require_end_of_stream();\n    var destroyImpl = require_destroy();\n    var Duplex = require_duplex();\n    var { validateFunction\x2C validateAbortSignal } = require_validators();\n    var { isIterable\x2C isReadable\x2C isReadableNodeStream\x2C isNodeStream } =\n      require_utils();\n    var PassThrough;\n    var Readable;\n    function destroyer(stream\x2C reading\x2C writing) {\n      let finished = false;\n      stream.on("close"\x2C () => {\n        finished = true;\n      });\n      const cleanup = eos(\n        stream\x2C\n        {\n          readable: reading\x2C\n          writable: writing\x2C\n        }\x2C\n        (err) => {\n          finished = !err;\n        }\x2C\n      );\n      return {\n        destroy: (err) => {\n          if (finished) {\n            return;\n          }\n          finished = true;\n          destroyImpl.destroyer(\n            stream\x2C\n            err || new ERR_STREAM_DESTROYED("pipe")\x2C\n          );\n        }\x2C\n        cleanup\x2C\n      };\n    }\n    function popCallback(streams) {\n      validateFunction(\n        streams[streams.length - 1]\x2C\n        "streams[stream.length - 1]"\x2C\n      );\n      return streams.pop();\n    }\n    function makeAsyncIterable(val) {\n      if (isIterable(val)) {\n        return val;\n      } else if (isReadableNodeStream(val)) {\n        return fromReadable(val);\n      }\n      throw new ERR_INVALID_ARG_TYPE("val"\x2C [\n        "Readable"\x2C\n        "Iterable"\x2C\n        "AsyncIterable"\x2C\n      ]\x2C val);\n    }\n    async function* fromReadable(val) {\n      if (!Readable) {\n        Readable = require_readable();\n      }\n      yield* Readable.prototype[SymbolAsyncIterator].call(val);\n    }\n    async function pump(iterable\x2C writable\x2C finish\x2C { end }) {\n      let error;\n      let onresolve = null;\n      const resume = (err) => {\n        if (err) {\n          error = err;\n        }\n        if (onresolve) {\n          const callback = onresolve;\n          onresolve = null;\n          callback();\n        }\n      };\n      const wait = () =>\n        new Promise2((resolve\x2C reject) => {\n          if (error) {\n            reject(error);\n          } else {\n            onresolve = () => {\n              if (error) {\n                reject(error);\n              } else {\n                resolve();\n              }\n            };\n          }\n        });\n      writable.on("drain"\x2C resume);\n      const cleanup = eos(\n        writable\x2C\n        {\n          readable: false\x2C\n        }\x2C\n        resume\x2C\n      );\n      try {\n        if (writable.writableNeedDrain) {\n          await wait();\n        }\n        for await (const chunk of iterable) {\n          if (!writable.write(chunk)) {\n            await wait();\n          }\n        }\n        if (end) {\n          writable.end();\n        }\n        await wait();\n        finish();\n      } catch (err) {\n        finish(error !== err ? aggregateTwoErrors(error\x2C err) : err);\n      } finally {\n        cleanup();\n        writable.off("drain"\x2C resume);\n      }\n    }\n    function pipeline(...streams) {\n      return pipelineImpl(streams\x2C once(popCallback(streams)));\n    }\n    function pipelineImpl(streams\x2C callback\x2C opts) {\n      if (streams.length === 1 && ArrayIsArray(streams[0])) {\n        streams = streams[0];\n      }\n      if (streams.length < 2) {\n        throw new ERR_MISSING_ARGS("streams");\n      }\n      const ac = new AbortController();\n      const signal = ac.signal;\n      const outerSignal = opts === null || opts === void 0\n        ? void 0\n        : opts.signal;\n      const lastStreamCleanup = [];\n      validateAbortSignal(outerSignal\x2C "options.signal");\n      function abort() {\n        finishImpl(new AbortError());\n      }\n      outerSignal === null || outerSignal === void 0\n        ? void 0\n        : outerSignal.addEventListener("abort"\x2C abort);\n      let error;\n      let value;\n      const destroys = [];\n      let finishCount = 0;\n      function finish(err) {\n        finishImpl(err\x2C --finishCount === 0);\n      }\n      function finishImpl(err\x2C final) {\n        if (err && (!error || error.code === "ERR_STREAM_PREMATURE_CLOSE")) {\n          error = err;\n        }\n        if (!error && !final) {\n          return;\n        }\n        while (destroys.length) {\n          destroys.shift()(error);\n        }\n        outerSignal === null || outerSignal === void 0\n          ? void 0\n          : outerSignal.removeEventListener("abort"\x2C abort);\n        ac.abort();\n        if (final) {\n          if (!error) {\n            lastStreamCleanup.forEach((fn) => fn());\n          }\n          process.nextTick(callback\x2C error\x2C value);\n        }\n      }\n      let ret;\n      for (let i = 0; i < streams.length; i++) {\n        const stream = streams[i];\n        const reading = i < streams.length - 1;\n        const writing = i > 0;\n        const end = reading ||\n          (opts === null || opts === void 0 ? void 0 : opts.end) !== false;\n        const isLastStream = i === streams.length - 1;\n        if (isNodeStream(stream)) {\n          let onError2 = function (err) {\n            if (\n              err && err.name !== "AbortError" &&\n              err.code !== "ERR_STREAM_PREMATURE_CLOSE"\n            ) {\n              finish(err);\n            }\n          };\n          var onError = onError2;\n          if (end) {\n            const { destroy\x2C cleanup } = destroyer(stream\x2C reading\x2C writing);\n            destroys.push(destroy);\n            if (isReadable(stream) && isLastStream) {\n              lastStreamCleanup.push(cleanup);\n            }\n          }\n          stream.on("error"\x2C onError2);\n          if (isReadable(stream) && isLastStream) {\n            lastStreamCleanup.push(() => {\n              stream.removeListener("error"\x2C onError2);\n            });\n          }\n        }\n        if (i === 0) {\n          if (typeof stream === "function") {\n            ret = stream({\n              signal\x2C\n            });\n            if (!isIterable(ret)) {\n              throw new ERR_INVALID_RETURN_VALUE(\n                "Iterable\x2C AsyncIterable or Stream"\x2C\n                "source"\x2C\n                ret\x2C\n              );\n            }\n          } else if (isIterable(stream) || isReadableNodeStream(stream)) {\n            ret = stream;\n          } else {\n            ret = Duplex.from(stream);\n          }\n        } else if (typeof stream === "function") {\n          ret = makeAsyncIterable(ret);\n          ret = stream(ret\x2C {\n            signal\x2C\n          });\n          if (reading) {\n            if (!isIterable(ret\x2C true)) {\n              throw new ERR_INVALID_RETURN_VALUE(\n                "AsyncIterable"\x2C\n                `transform[${i - 1}]`\x2C\n                ret\x2C\n              );\n            }\n          } else {\n            var _ret;\n            if (!PassThrough) {\n              PassThrough = require_passthrough();\n            }\n            const pt = new PassThrough({\n              objectMode: true\x2C\n            });\n            const then = (_ret = ret) === null || _ret === void 0\n              ? void 0\n              : _ret.then;\n            if (typeof then === "function") {\n              finishCount++;\n              then.call(\n                ret\x2C\n                (val) => {\n                  value = val;\n                  if (val != null) {\n                    pt.write(val);\n                  }\n                  if (end) {\n                    pt.end();\n                  }\n                  process.nextTick(finish);\n                }\x2C\n                (err) => {\n                  pt.destroy(err);\n                  process.nextTick(finish\x2C err);\n                }\x2C\n              );\n            } else if (isIterable(ret\x2C true)) {\n              finishCount++;\n              pump(ret\x2C pt\x2C finish\x2C {\n                end\x2C\n              });\n            } else {\n              throw new ERR_INVALID_RETURN_VALUE(\n                "AsyncIterable or Promise"\x2C\n                "destination"\x2C\n                ret\x2C\n              );\n            }\n            ret = pt;\n            const { destroy\x2C cleanup } = destroyer(ret\x2C false\x2C true);\n            destroys.push(destroy);\n            if (isLastStream) {\n              lastStreamCleanup.push(cleanup);\n            }\n          }\n        } else if (isNodeStream(stream)) {\n          if (isReadableNodeStream(ret)) {\n            finishCount += 2;\n            const cleanup = pipe(ret\x2C stream\x2C finish\x2C {\n              end\x2C\n            });\n            if (isReadable(stream) && isLastStream) {\n              lastStreamCleanup.push(cleanup);\n            }\n          } else if (isIterable(ret)) {\n            finishCount++;\n            pump(ret\x2C stream\x2C finish\x2C {\n              end\x2C\n            });\n          } else {\n            throw new ERR_INVALID_ARG_TYPE("val"\x2C [\n              "Readable"\x2C\n              "Iterable"\x2C\n              "AsyncIterable"\x2C\n            ]\x2C ret);\n          }\n          ret = stream;\n        } else {\n          ret = Duplex.from(stream);\n        }\n      }\n      if (\n        signal !== null && signal !== void 0 && signal.aborted ||\n        outerSignal !== null && outerSignal !== void 0 && outerSignal.aborted\n      ) {\n        process.nextTick(abort);\n      }\n      return ret;\n    }\n    function pipe(src\x2C dst\x2C finish\x2C { end }) {\n      let ended = false;\n      dst.on("close"\x2C () => {\n        if (!ended) {\n          finish(new ERR_STREAM_PREMATURE_CLOSE());\n        }\n      });\n      src.pipe(dst\x2C {\n        end\x2C\n      });\n      if (end) {\n        src.once("end"\x2C () => {\n          ended = true;\n          dst.end();\n        });\n      } else {\n        finish();\n      }\n      eos(\n        src\x2C\n        {\n          readable: true\x2C\n          writable: false\x2C\n        }\x2C\n        (err) => {\n          const rState = src._readableState;\n          if (\n            err && err.code === "ERR_STREAM_PREMATURE_CLOSE" && rState &&\n            rState.ended && !rState.errored && !rState.errorEmitted\n          ) {\n            src.once("end"\x2C finish).once("error"\x2C finish);\n          } else {\n            finish(err);\n          }\n        }\x2C\n      );\n      return eos(\n        dst\x2C\n        {\n          readable: false\x2C\n          writable: true\x2C\n        }\x2C\n        finish\x2C\n      );\n    }\n    module.exports = {\n      pipelineImpl\x2C\n      pipeline\x2C\n    };\n  }\x2C\n});\n\n// lib/internal/streams/compose.js\nvar require_compose = __commonJS({\n  "lib/internal/streams/compose.js"(exports\x2C module) {\n    "use strict";\n    var { pipeline } = require_pipeline();\n    var Duplex = require_duplex();\n    var { destroyer } = require_destroy();\n    var { isNodeStream\x2C isReadable\x2C isWritable } = require_utils();\n    module.exports = function compose(...streams) {\n      if (streams.length === 0) {\n        throw new ERR_MISSING_ARGS("streams");\n      }\n      if (streams.length === 1) {\n        return Duplex.from(streams[0]);\n      }\n      const orgStreams = [...streams];\n      if (typeof streams[0] === "function") {\n        streams[0] = Duplex.from(streams[0]);\n      }\n      if (typeof streams[streams.length - 1] === "function") {\n        const idx = streams.length - 1;\n        streams[idx] = Duplex.from(streams[idx]);\n      }\n      for (let n = 0; n < streams.length; ++n) {\n        if (!isNodeStream(streams[n])) {\n          continue;\n        }\n        if (n < streams.length - 1 && !isReadable(streams[n])) {\n          throw new ERR_INVALID_ARG_VALUE(\n            `streams[${n}]`\x2C\n            orgStreams[n]\x2C\n            "must be readable"\x2C\n          );\n        }\n        if (n > 0 && !isWritable(streams[n])) {\n          throw new ERR_INVALID_ARG_VALUE(\n            `streams[${n}]`\x2C\n            orgStreams[n]\x2C\n            "must be writable"\x2C\n          );\n        }\n      }\n      let ondrain;\n      let onfinish;\n      let onreadable;\n      let onclose;\n      let d;\n      function onfinished(err) {\n        const cb = onclose;\n        onclose = null;\n        if (cb) {\n          cb(err);\n        } else if (err) {\n          d.destroy(err);\n        } else if (!readable && !writable) {\n          d.destroy();\n        }\n      }\n      const head = streams[0];\n      const tail = pipeline(streams\x2C onfinished);\n      const writable = !!isWritable(head);\n      const readable = !!isReadable(tail);\n      d = new Duplex({\n        // TODO (ronag): highWaterMark?\n        writableObjectMode:\n          !!(head !== null && head !== void 0 && head.writableObjectMode)\x2C\n        readableObjectMode:\n          !!(tail !== null && tail !== void 0 && tail.writableObjectMode)\x2C\n        writable\x2C\n        readable\x2C\n      });\n      if (writable) {\n        d._write = function (chunk\x2C encoding\x2C callback) {\n          if (head.write(chunk\x2C encoding)) {\n            callback();\n          } else {\n            ondrain = callback;\n          }\n        };\n        d._final = function (callback) {\n          head.end();\n          onfinish = callback;\n        };\n        head.on("drain"\x2C function () {\n          if (ondrain) {\n            const cb = ondrain;\n            ondrain = null;\n            cb();\n          }\n        });\n        tail.on("finish"\x2C function () {\n          if (onfinish) {\n            const cb = onfinish;\n            onfinish = null;\n            cb();\n          }\n        });\n      }\n      if (readable) {\n        tail.on("readable"\x2C function () {\n          if (onreadable) {\n            const cb = onreadable;\n            onreadable = null;\n            cb();\n          }\n        });\n        tail.on("end"\x2C function () {\n          d.push(null);\n        });\n        d._read = function () {\n          while (true) {\n            const buf = tail.read();\n            if (buf === null) {\n              onreadable = d._read;\n              return;\n            }\n            if (!d.push(buf)) {\n              return;\n            }\n          }\n        };\n      }\n      d._destroy = function (err\x2C callback) {\n        if (!err && onclose !== null) {\n          err = new AbortError();\n        }\n        onreadable = null;\n        ondrain = null;\n        onfinish = null;\n        if (onclose === null) {\n          callback(err);\n        } else {\n          onclose = callback;\n          destroyer(tail\x2C err);\n        }\n      };\n      return d;\n    };\n  }\x2C\n});\n\n// lib/stream/promises.js\nvar require_promises = __commonJS({\n  "lib/stream/promises.js"(exports\x2C module) {\n    "use strict";\n    var { ArrayPrototypePop\x2C Promise: Promise2 } = require_primordials();\n    var { isIterable\x2C isNodeStream } = require_utils();\n    var { pipelineImpl: pl } = require_pipeline();\n    var { finished } = require_end_of_stream();\n    function pipeline(...streams) {\n      return new Promise2((resolve\x2C reject) => {\n        let signal;\n        let end;\n        const lastArg = streams[streams.length - 1];\n        if (\n          lastArg && typeof lastArg === "object" && !isNodeStream(lastArg) &&\n          !isIterable(lastArg)\n        ) {\n          const options = ArrayPrototypePop(streams);\n          signal = options.signal;\n          end = options.end;\n        }\n        pl(\n          streams\x2C\n          (err\x2C value) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(value);\n            }\n          }\x2C\n          {\n            signal\x2C\n            end\x2C\n          }\x2C\n        );\n      });\n    }\n    module.exports = {\n      finished\x2C\n      pipeline\x2C\n    };\n  }\x2C\n});\n\n// lib/stream.js\nvar require_stream = __commonJS({\n  "lib/stream.js"(exports\x2C module) {\n    var { Buffer: Buffer2 } = require_buffer();\n    var { ObjectDefineProperty\x2C ObjectKeys\x2C ReflectApply } =\n      require_primordials();\n    var { streamReturningOperators\x2C promiseReturningOperators } =\n      require_operators();\n    var compose = require_compose();\n    var { pipeline } = require_pipeline();\n    var { destroyer } = require_destroy();\n    var eos = require_end_of_stream();\n    var promises = require_promises();\n    var utils = require_utils();\n    var Stream = module.exports = require_legacy().Stream;\n    Stream.isDisturbed = utils.isDisturbed;\n    Stream.isErrored = utils.isErrored;\n    Stream.isReadable = utils.isReadable;\n    Stream.Readable = require_readable();\n    for (const key of ObjectKeys(streamReturningOperators)) {\n      let fn2 = function (...args) {\n        if (new.target) {\n          throw ERR_ILLEGAL_CONSTRUCTOR();\n        }\n        return Stream.Readable.from(ReflectApply(op\x2C this\x2C args));\n      };\n      fn = fn2;\n      const op = streamReturningOperators[key];\n      ObjectDefineProperty(fn2\x2C "name"\x2C {\n        __proto__: null\x2C\n        value: op.name\x2C\n      });\n      ObjectDefineProperty(fn2\x2C "length"\x2C {\n        __proto__: null\x2C\n        value: op.length\x2C\n      });\n      ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\n        __proto__: null\x2C\n        value: fn2\x2C\n        enumerable: false\x2C\n        configurable: true\x2C\n        writable: true\x2C\n      });\n    }\n    var fn;\n    for (const key of ObjectKeys(promiseReturningOperators)) {\n      let fn2 = function (...args) {\n        if (new.target) {\n          throw ERR_ILLEGAL_CONSTRUCTOR();\n        }\n        return ReflectApply(op\x2C this\x2C args);\n      };\n      fn = fn2;\n      const op = promiseReturningOperators[key];\n      ObjectDefineProperty(fn2\x2C "name"\x2C {\n        __proto__: null\x2C\n        value: op.name\x2C\n      });\n      ObjectDefineProperty(fn2\x2C "length"\x2C {\n        __proto__: null\x2C\n        value: op.length\x2C\n      });\n      ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\n        __proto__: null\x2C\n        value: fn2\x2C\n        enumerable: false\x2C\n        configurable: true\x2C\n        writable: true\x2C\n      });\n    }\n    var fn;\n    Stream.Writable = require_writable();\n    Stream.Duplex = require_duplex();\n    Stream.Transform = require_transform();\n    Stream.PassThrough = require_passthrough();\n    Stream.pipeline = pipeline;\n    var { addAbortSignal } = require_add_abort_signal();\n    Stream.addAbortSignal = addAbortSignal;\n    Stream.finished = eos;\n    Stream.destroy = destroyer;\n    Stream.compose = compose;\n    ObjectDefineProperty(Stream\x2C "promises"\x2C {\n      __proto__: null\x2C\n      configurable: true\x2C\n      enumerable: true\x2C\n      get() {\n        return promises;\n      }\x2C\n    });\n    ObjectDefineProperty(pipeline\x2C promisify\x2C {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      get() {\n        return promises.pipeline;\n      }\x2C\n    });\n    ObjectDefineProperty(eos\x2C promisify\x2C {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      get() {\n        return promises.finished;\n      }\x2C\n    });\n    Stream.Stream = Stream;\n    Stream._isUint8Array = function isUint8Array(value) {\n      return value instanceof Uint8Array;\n    };\n    Stream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\n      return Buffer2.from(chunk.buffer\x2C chunk.byteOffset\x2C chunk.byteLength);\n    };\n  }\x2C\n});\n/* End esm.sh bundle */\n\n// The following code implements Readable.fromWeb()\x2C Writable.fromWeb()\x2C and\n// Duplex.fromWeb(). These functions are not properly implemented in the\n// readable-stream module yet. This can be removed once the following upstream\n// issue is resolved: https://github.com/nodejs/readable-stream/issues/482\n\nimport { destroy } from "ext:deno_node/internal/streams/destroy.mjs";\nimport finished from "ext:deno_node/internal/streams/end-of-stream.mjs";\nimport {\n  isDestroyed\x2C\n  isReadable\x2C\n  isReadableEnded\x2C\n  isWritable\x2C\n  isWritableEnded\x2C\n} from "ext:deno_node/internal/streams/utils.mjs";\nimport { ReadableStream\x2C WritableStream } from "node:stream/web";\nimport {\n  validateBoolean\x2C\n  validateObject\x2C\n} from "ext:deno_node/internal/validators.mjs";\n\nconst CustomStream = require_stream();\nconst process = __process$;\nconst { Buffer } = __buffer$;\n\nexport const Readable = CustomStream.Readable;\nexport const Writable = CustomStream.Writable;\nexport const Duplex = CustomStream.Duplex;\nexport const PassThrough = CustomStream.PassThrough;\nexport const Stream = CustomStream.Stream;\nexport const Transform = CustomStream.Transform;\nexport const _isUint8Array = CustomStream._isUint8Array;\nexport const _uint8ArrayToBuffer = CustomStream._uint8ArrayToBuffer;\nexport const addAbortSignal = CustomStream.addAbortSignal;\nexport const pipeline = CustomStream.pipeline;\nexport { finished };\n\nfunction isWritableStream(object) {\n  return object instanceof WritableStream;\n}\n\nfunction isReadableStream(object) {\n  return object instanceof ReadableStream;\n}\n\nReadable.fromWeb = function (\n  readableStream\x2C\n  options = kEmptyObject\x2C\n) {\n  if (!isReadableStream(readableStream)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      "readableStream"\x2C\n      "ReadableStream"\x2C\n      readableStream\x2C\n    );\n  }\n\n  validateObject(options\x2C "options");\n  const {\n    highWaterMark\x2C\n    encoding\x2C\n    objectMode = false\x2C\n    signal\x2C\n  } = options;\n\n  if (encoding !== undefined && !Buffer.isEncoding(encoding)) {\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C "options.encoding");\n  }\n  validateBoolean(objectMode\x2C "options.objectMode");\n\n  const reader = readableStream.getReader();\n  let closed = false;\n\n  const readable = new Readable({\n    objectMode\x2C\n    highWaterMark\x2C\n    encoding\x2C\n    signal\x2C\n\n    read() {\n      reader.read().then(\n        (chunk) => {\n          if (chunk.done) {\n            readable.push(null);\n          } else {\n            readable.push(chunk.value);\n          }\n        }\x2C\n        (error) => destroy.call(readable\x2C error)\x2C\n      );\n    }\x2C\n\n    destroy(error\x2C callback) {\n      function done() {\n        try {\n          callback(error);\n        } catch (error) {\n          // In a next tick because this is happening within\n          // a promise context\x2C and if there are any errors\n          // thrown we don't want those to cause an unhandled\n          // rejection. Let's just escape the promise and\n          // handle it separately.\n          process.nextTick(() => {\n            throw error;\n          });\n        }\n      }\n\n      if (!closed) {\n        reader.cancel(error).then(done\x2C done);\n        return;\n      }\n\n      done();\n    }\x2C\n  });\n\n  reader.closed.then(\n    () => {\n      closed = true;\n      if (!isReadableEnded(readable)) {\n        readable.push(null);\n      }\n    }\x2C\n    (error) => {\n      closed = true;\n      destroy.call(readable\x2C error);\n    }\x2C\n  );\n\n  return readable;\n};\n\nWritable.fromWeb = function (\n  writableStream\x2C\n  options = kEmptyObject\x2C\n) {\n  if (!isWritableStream(writableStream)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      "writableStream"\x2C\n      "WritableStream"\x2C\n      writableStream\x2C\n    );\n  }\n\n  validateObject(options\x2C "options");\n  const {\n    highWaterMark\x2C\n    decodeStrings = true\x2C\n    objectMode = false\x2C\n    signal\x2C\n  } = options;\n\n  validateBoolean(objectMode\x2C "options.objectMode");\n  validateBoolean(decodeStrings\x2C "options.decodeStrings");\n\n  const writer = writableStream.getWriter();\n  let closed = false;\n\n  const writable = new Writable({\n    highWaterMark\x2C\n    objectMode\x2C\n    decodeStrings\x2C\n    signal\x2C\n\n    writev(chunks\x2C callback) {\n      function done(error) {\n        error = error.filter((e) => e);\n        try {\n          callback(error.length === 0 ? undefined : error);\n        } catch (error) {\n          // In a next tick because this is happening within\n          // a promise context\x2C and if there are any errors\n          // thrown we don't want those to cause an unhandled\n          // rejection. Let's just escape the promise and\n          // handle it separately.\n          process.nextTick(() => destroy.call(writable\x2C error));\n        }\n      }\n\n      writer.ready.then(\n        () =>\n          Promise.all(\n            chunks.map((data) => writer.write(data.chunk))\x2C\n          ).then(done\x2C done)\x2C\n        done\x2C\n      );\n    }\x2C\n\n    write(chunk\x2C encoding\x2C callback) {\n      if (typeof chunk === "string" && decodeStrings && !objectMode) {\n        chunk = Buffer.from(chunk\x2C encoding);\n        chunk = new Uint8Array(\n          chunk.buffer\x2C\n          chunk.byteOffset\x2C\n          chunk.byteLength\x2C\n        );\n      }\n\n      function done(error) {\n        try {\n          callback(error);\n        } catch (error) {\n          destroy(this\x2C duplex\x2C error);\n        }\n      }\n\n      writer.ready.then(\n        () => writer.write(chunk).then(done\x2C done)\x2C\n        done\x2C\n      );\n    }\x2C\n\n    destroy(error\x2C callback) {\n      function done() {\n        try {\n          callback(error);\n        } catch (error) {\n          // In a next tick because this is happening within\n          // a promise context\x2C and if there are any errors\n          // thrown we don't want those to cause an unhandled\n          // rejection. Let's just escape the promise and\n          // handle it separately.\n          process.nextTick(() => {\n            throw error;\n          });\n        }\n      }\n\n      if (!closed) {\n        if (error != null) {\n          writer.abort(error).then(done\x2C done);\n        } else {\n          writer.close().then(done\x2C done);\n        }\n        return;\n      }\n\n      done();\n    }\x2C\n\n    final(callback) {\n      function done(error) {\n        try {\n          callback(error);\n        } catch (error) {\n          // In a next tick because this is happening within\n          // a promise context\x2C and if there are any errors\n          // thrown we don't want those to cause an unhandled\n          // rejection. Let's just escape the promise and\n          // handle it separately.\n          process.nextTick(() => destroy.call(writable\x2C error));\n        }\n      }\n\n      if (!closed) {\n        writer.close().then(done\x2C done);\n      }\n    }\x2C\n  });\n\n  writer.closed.then(\n    () => {\n      closed = true;\n      if (!isWritableEnded(writable)) {\n        destroy.call(writable\x2C new ERR_STREAM_PREMATURE_CLOSE());\n      }\n    }\x2C\n    (error) => {\n      closed = true;\n      destroy.call(writable\x2C error);\n    }\x2C\n  );\n\n  return writable;\n};\n\nDuplex.fromWeb = function (pair\x2C options = kEmptyObject) {\n  validateObject(pair\x2C "pair");\n  const {\n    readable: readableStream\x2C\n    writable: writableStream\x2C\n  } = pair;\n\n  if (!isReadableStream(readableStream)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      "pair.readable"\x2C\n      "ReadableStream"\x2C\n      readableStream\x2C\n    );\n  }\n  if (!isWritableStream(writableStream)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      "pair.writable"\x2C\n      "WritableStream"\x2C\n      writableStream\x2C\n    );\n  }\n\n  validateObject(options\x2C "options");\n  const {\n    allowHalfOpen = false\x2C\n    objectMode = false\x2C\n    encoding\x2C\n    decodeStrings = true\x2C\n    highWaterMark\x2C\n    signal\x2C\n  } = options;\n\n  validateBoolean(objectMode\x2C "options.objectMode");\n  if (encoding !== undefined && !Buffer.isEncoding(encoding)) {\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C "options.encoding");\n  }\n\n  const writer = writableStream.getWriter();\n  const reader = readableStream.getReader();\n  let writableClosed = false;\n  let readableClosed = false;\n\n  const duplex = new Duplex({\n    allowHalfOpen\x2C\n    highWaterMark\x2C\n    objectMode\x2C\n    encoding\x2C\n    decodeStrings\x2C\n    signal\x2C\n\n    writev(chunks\x2C callback) {\n      function done(error) {\n        error = error.filter((e) => e);\n        try {\n          callback(error.length === 0 ? undefined : error);\n        } catch (error) {\n          // In a next tick because this is happening within\n          // a promise context\x2C and if there are any errors\n          // thrown we don't want those to cause an unhandled\n          // rejection. Let's just escape the promise and\n          // handle it separately.\n          process.nextTick(() => destroy(duplex\x2C error));\n        }\n      }\n\n      writer.ready.then(\n        () =>\n          Promise.all(\n            chunks.map((data) => writer.write(data.chunk))\x2C\n          ).then(done\x2C done)\x2C\n        done\x2C\n      );\n    }\x2C\n\n    write(chunk\x2C encoding\x2C callback) {\n      if (typeof chunk === "string" && decodeStrings && !objectMode) {\n        chunk = Buffer.from(chunk\x2C encoding);\n        chunk = new Uint8Array(\n          chunk.buffer\x2C\n          chunk.byteOffset\x2C\n          chunk.byteLength\x2C\n        );\n      }\n\n      function done(error) {\n        try {\n          callback(error);\n        } catch (error) {\n          destroy(duplex\x2C error);\n        }\n      }\n\n      writer.ready.then(\n        () => writer.write(chunk).then(done\x2C done)\x2C\n        done\x2C\n      );\n    }\x2C\n\n    final(callback) {\n      function done(error) {\n        try {\n          callback(error);\n        } catch (error) {\n          // In a next tick because this is happening within\n          // a promise context\x2C and if there are any errors\n          // thrown we don't want those to cause an unhandled\n          // rejection. Let's just escape the promise and\n          // handle it separately.\n          process.nextTick(() => destroy(duplex\x2C error));\n        }\n      }\n\n      if (!writableClosed) {\n        writer.close().then(done\x2C done);\n      }\n    }\x2C\n\n    read() {\n      reader.read().then(\n        (chunk) => {\n          if (chunk.done) {\n            duplex.push(null);\n          } else {\n            duplex.push(chunk.value);\n          }\n        }\x2C\n        (error) => destroy(duplex\x2C error)\x2C\n      );\n    }\x2C\n\n    destroy(error\x2C callback) {\n      function done() {\n        try {\n          callback(error);\n        } catch (error) {\n          // In a next tick because this is happening within\n          // a promise context\x2C and if there are any errors\n          // thrown we don't want those to cause an unhandled\n          // rejection. Let's just escape the promise and\n          // handle it separately.\n          process.nextTick(() => {\n            throw error;\n          });\n        }\n      }\n\n      async function closeWriter() {\n        if (!writableClosed) {\n          await writer.abort(error);\n        }\n      }\n\n      async function closeReader() {\n        if (!readableClosed) {\n          await reader.cancel(error);\n        }\n      }\n\n      if (!writableClosed || !readableClosed) {\n        Promise.all([\n          closeWriter()\x2C\n          closeReader()\x2C\n        ]).then(done\x2C done);\n        return;\n      }\n\n      done();\n    }\x2C\n  });\n\n  writer.closed.then(\n    () => {\n      writableClosed = true;\n      if (!isWritableEnded(duplex)) {\n        destroy(duplex\x2C new ERR_STREAM_PREMATURE_CLOSE());\n      }\n    }\x2C\n    (error) => {\n      writableClosed = true;\n      readableClosed = true;\n      destroy(duplex\x2C error);\n    }\x2C\n  );\n\n  reader.closed.then(\n    () => {\n      readableClosed = true;\n      if (!isReadableEnded(duplex)) {\n        duplex.push(null);\n      }\n    }\x2C\n    (error) => {\n      writableClosed = true;\n      readableClosed = true;\n      destroy(duplex\x2C error);\n    }\x2C\n  );\n\n  return duplex;\n};\n\n// readable-stream attaches these to Readable\x2C but Node.js core does not.\n// Delete them here to better match Node.js core. These can be removed once\n// https://github.com/nodejs/readable-stream/issues/485 is resolved.\ndelete Readable.Duplex;\ndelete Readable.PassThrough;\ndelete Readable.Readable;\ndelete Readable.Stream;\ndelete Readable.Transform;\ndelete Readable.Writable;\ndelete Readable._isUint8Array;\ndelete Readable._uint8ArrayToBuffer;\ndelete Readable.addAbortSignal;\ndelete Readable.compose;\ndelete Readable.destroy;\ndelete Readable.finished;\ndelete Readable.isDisturbed;\ndelete Readable.isErrored;\ndelete Readable.isReadable;\ndelete Readable.pipeline;\n\n// The following code implements Readable.toWeb()\x2C Writable.toWeb()\x2C and\n// Duplex.toWeb(). These functions are not properly implemented in the\n// readable-stream module yet. This can be removed once the following upstream\n// issue is resolved: https://github.com/nodejs/readable-stream/issues/482\nfunction newReadableStreamFromStreamReadable(\n  streamReadable\x2C\n  options = kEmptyObject\x2C\n) {\n  // Not using the internal/streams/utils isReadableNodeStream utility\n  // here because it will return false if streamReadable is a Duplex\n  // whose readable option is false. For a Duplex that is not readable\x2C\n  // we want it to pass this check but return a closed ReadableStream.\n  if (typeof streamReadable?._readableState !== "object") {\n    throw new ERR_INVALID_ARG_TYPE(\n      "streamReadable"\x2C\n      "stream.Readable"\x2C\n      streamReadable\x2C\n    );\n  }\n\n  if (isDestroyed(streamReadable) || !isReadable(streamReadable)) {\n    const readable = new ReadableStream();\n    readable.cancel();\n    return readable;\n  }\n\n  const objectMode = streamReadable.readableObjectMode;\n  const highWaterMark = streamReadable.readableHighWaterMark;\n\n  const evaluateStrategyOrFallback = (strategy) => {\n    // If there is a strategy available\x2C use it\n    if (strategy) {\n      return strategy;\n    }\n\n    if (objectMode) {\n      // When running in objectMode explicitly but no strategy\x2C we just fall\n      // back to CountQueuingStrategy\n      return new CountQueuingStrategy({ highWaterMark });\n    }\n\n    // When not running in objectMode explicitly\x2C we just fall\n    // back to a minimal strategy that just specifies the highWaterMark\n    // and no size algorithm. Using a ByteLengthQueuingStrategy here\n    // is unnecessary.\n    return { highWaterMark };\n  };\n\n  const strategy = evaluateStrategyOrFallback(options?.strategy);\n\n  let controller;\n\n  function onData(chunk) {\n    // Copy the Buffer to detach it from the pool.\n    if (Buffer.isBuffer(chunk) && !objectMode) {\n      chunk = new Uint8Array(chunk);\n    }\n    controller.enqueue(chunk);\n    if (controller.desiredSize <= 0) {\n      streamReadable.pause();\n    }\n  }\n\n  streamReadable.pause();\n\n  const cleanup = finished(streamReadable\x2C (error) => {\n    if (error?.code === "ERR_STREAM_PREMATURE_CLOSE") {\n      const err = new AbortError(undefined\x2C { cause: error });\n      error = err;\n    }\n\n    cleanup();\n    // This is a protection against non-standard\x2C legacy streams\n    // that happen to emit an error event again after finished is called.\n    streamReadable.on("error"\x2C () => {});\n    if (error) {\n      return controller.error(error);\n    }\n    controller.close();\n  });\n\n  streamReadable.on("data"\x2C onData);\n\n  return new ReadableStream({\n    start(c) {\n      controller = c;\n    }\x2C\n\n    pull() {\n      streamReadable.resume();\n    }\x2C\n\n    cancel(reason) {\n      destroy(streamReadable\x2C reason);\n    }\x2C\n  }\x2C strategy);\n}\n\nfunction newWritableStreamFromStreamWritable(streamWritable) {\n  // Not using the internal/streams/utils isWritableNodeStream utility\n  // here because it will return false if streamWritable is a Duplex\n  // whose writable option is false. For a Duplex that is not writable\x2C\n  // we want it to pass this check but return a closed WritableStream.\n  if (typeof streamWritable?._writableState !== "object") {\n    throw new ERR_INVALID_ARG_TYPE(\n      "streamWritable"\x2C\n      "stream.Writable"\x2C\n      streamWritable\x2C\n    );\n  }\n\n  if (isDestroyed(streamWritable) || !isWritable(streamWritable)) {\n    const writable = new WritableStream();\n    writable.close();\n    return writable;\n  }\n\n  const highWaterMark = streamWritable.writableHighWaterMark;\n  const strategy = streamWritable.writableObjectMode\n    ? new CountQueuingStrategy({ highWaterMark })\n    : { highWaterMark };\n\n  let controller;\n  let backpressurePromise;\n  let closed;\n\n  function onDrain() {\n    if (backpressurePromise !== undefined) {\n      backpressurePromise.resolve();\n    }\n  }\n\n  const cleanup = finished(streamWritable\x2C (error) => {\n    if (error?.code === "ERR_STREAM_PREMATURE_CLOSE") {\n      const err = new AbortError(undefined\x2C { cause: error });\n      error = err;\n    }\n\n    cleanup();\n    // This is a protection against non-standard\x2C legacy streams\n    // that happen to emit an error event again after finished is called.\n    streamWritable.on("error"\x2C () => {});\n    if (error != null) {\n      if (backpressurePromise !== undefined) {\n        backpressurePromise.reject(error);\n      }\n      // If closed is not undefined\x2C the error is happening\n      // after the WritableStream close has already started.\n      // We need to reject it here.\n      if (closed !== undefined) {\n        closed.reject(error);\n        closed = undefined;\n      }\n      controller.error(error);\n      controller = undefined;\n      return;\n    }\n\n    if (closed !== undefined) {\n      closed.resolve();\n      closed = undefined;\n      return;\n    }\n    controller.error(new AbortError());\n    controller = undefined;\n  });\n\n  streamWritable.on("drain"\x2C onDrain);\n\n  return new WritableStream({\n    start(c) {\n      controller = c;\n    }\x2C\n\n    async write(chunk) {\n      if (streamWritable.writableNeedDrain || !streamWritable.write(chunk)) {\n        backpressurePromise = createDeferredPromise();\n        return backpressurePromise.promise.finally(() => {\n          backpressurePromise = undefined;\n        });\n      }\n    }\x2C\n\n    abort(reason) {\n      destroy(streamWritable\x2C reason);\n    }\x2C\n\n    close() {\n      if (closed === undefined && !isWritableEnded(streamWritable)) {\n        closed = createDeferredPromise();\n        streamWritable.end();\n        return closed.promise;\n      }\n\n      controller = undefined;\n      return Promise.resolve();\n    }\x2C\n  }\x2C strategy);\n}\n\nfunction newReadableWritablePairFromDuplex(duplex) {\n  // Not using the internal/streams/utils isWritableNodeStream and\n  // isReadableNodestream utilities here because they will return false\n  // if the duplex was created with writable or readable options set to\n  // false. Instead\x2C we'll check the readable and writable state after\n  // and return closed WritableStream or closed ReadableStream as\n  // necessary.\n  if (\n    typeof duplex?._writableState !== "object" ||\n    typeof duplex?._readableState !== "object"\n  ) {\n    throw new ERR_INVALID_ARG_TYPE("duplex"\x2C "stream.Duplex"\x2C duplex);\n  }\n\n  if (isDestroyed(duplex)) {\n    const writable = new WritableStream();\n    const readable = new ReadableStream();\n    writable.close();\n    readable.cancel();\n    return { readable\x2C writable };\n  }\n\n  const writable = isWritable(duplex)\n    ? newWritableStreamFromStreamWritable(duplex)\n    : new WritableStream();\n\n  if (!isWritable(duplex)) {\n    writable.close();\n  }\n\n  const readable = isReadable(duplex)\n    ? newReadableStreamFromStreamReadable(duplex)\n    : new ReadableStream();\n\n  if (!isReadable(duplex)) {\n    readable.cancel();\n  }\n\n  return { writable\x2C readable };\n}\n\nReadable.toWeb = newReadableStreamFromStreamReadable;\nWritable.toWeb = newWritableStreamFromStreamWritable;\nDuplex.toWeb = newReadableWritablePairFromDuplex;\n
code-source-info,0x1123fa482848,153,145255,145997,C0O145273C2O145284C7O145314C12O145321C17O145341C18O145356C21O145365C26O145365C32O145392C35O145401C40O145401C46O145428C50O145480C58O145494C59O145470C63O145525C73O145562C79O145586C83O145610C89O145631C93O145654C99O145680C103O145718C113O145755C119O145779C123O145803C129O145825C133O145848C139O145869C143O145892C149O145916C155O145957C156O145976C161O145996,,
tick,0x1059964dc,79833,0,0x0,3,0x1123fa4826d9,0x1123fa482452,0x1123fa4821b7,0x1123fa481fbe,0x1123fa481c26,0x1123fa481530
tick,0x185259744,79833,0,0x0,3,0x1123fa4826d9,0x1123fa482452,0x1123fa4821b7,0x1123fa481fbe,0x1123fa481c26,0x1123fa481530
tick,0x185256254,79833,0,0x0,3,0x1123fa4826d9,0x1123fa482452,0x1123fa4821b7,0x1123fa481fbe,0x1123fa481c26,0x1123fa481530
tick,0x1059964bc,79833,0,0x0,3,0x1123fa4826d9,0x1123fa482452,0x1123fa4821b7,0x1123fa481fbe,0x1123fa481c26,0x1123fa481530
tick,0x185256254,79833,0,0x0,3,0x1123fa4826d9,0x1123fa482452,0x1123fa4821b7,0x1123fa481fbe,0x1123fa481c26,0x1123fa481530
code-creation,JS,10,79833,0x1123fa482930,211,Readable ext:deno_node/_stream.mjs:2758:22,0xb815c256478,~
code-source-info,0x1123fa482930,153,84566,85440,C0O84566C9O84584C16O84595C21O84627C28O84634C33O84656C34O84688C42O84704C45O84693C49O84728C68O84750C73O84748C77O84800C81O84842C89O84875C92O84896C96O84886C100O84939C108O84975C111O84999C115O84989C119O85045C127O85083C130O85109C134O85099C138O85150C146O85161C148O85183C153O85206C161O85183C166O85245C171O85252C179O85252C185O85279C190O85291C203O85291C210O85439,,
code-creation,JS,10,79875,0x1123fa482a48,16,Stream ext:deno_node/_stream.mjs:2169:20,0xb815c254400,~
code-source-info,0x1123fa482a48,153,67034,67075,C0O67049C3O67052C8O67052C15O67074,,
code-creation,JS,10,79875,0x1123fa482a98,20,EventEmitter ext:deno_node/_stream.mjs:1761:26,0xb815c253450,~
code-source-info,0x1123fa482a98,153,54081,54127,C0O54092C3O54105C8O54110C13O54110C19O54126,,
code-creation,JS,10,79958,0x1123fa482af0,342,ReadableState ext:deno_node/_stream.mjs:2713:27,0xb815c256420,~
code-source-info,0x1123fa482af
code-creation,JS,10,80000,0x1123fa482c88,95,getHighWaterMark ext:deno_node/_stream.mjs:2495:30,0xb815c255788,~
code-source-info,0x1123fa482c88,153,76300,76752,C0O76358C12O76358C18O76413C21O76440C24O76445C31O76473C36O76503C45O76537C54O76598C68O76604C73O76598C74O76660C77O76667C81O76682C82O76697C85O76734C90O76704C94O76746,,
code-creation,JS,10,80042,0x1123fa482d28,26,highWaterMarkFrom ext:deno_node/_stream.mjs:2485:31,0xb815c2556d8,~
code-source-info,0x1123fa482d28,153,75994,76171,C0O76048C7O76088C15O76112C19O76138C25O76165,,
code-creation,JS,10,80208,0x1123fa482d88,17,BufferList ext:deno_node/_stream.mjs:2307:18,0xb815c255020,~
code-source-info,0x1123fa482d88,153,71284,71373,C0O71297C1O71307C5O71323C6O71333C10O71349C11O71361C16O71372,,
code-creation,JS,10,80292,0x1123fa482de0,76,EventEmitter.init ext:deno_node/_stream.mjs:1794:34,0xb815c253cf0,~
code-source-info,0x1123fa482de0,153,55195,55478,C0O55224C6O55259C11O55271C15O55278C20O55278C26O55298C30O55267C35O55356C39O55363C46O55363C51O55338C55O55385C56O55403C60O55448C70O55441C75O55477,,
code-creation,JS,10,80333,0x1123fa482e70,94,construct ext:deno_node/_stream.mjs:1625:23,0xb815c252c98,~
code-source-info,0x1123fa482e70,153,50228,50665,C0O50267C8O50304C9O50311C10O50343C15O50382C20O50404C24O50421C25O50435C29O50458C33O50475C34O50489C38O50519C46O50519C52O50558C60O50558C68O50584C73O50599C74O50606C75O50621C78O50629C86O50629C93O50664,,
code-creation,JS,10,80375,0x1123fa482f10,255,Writable ext:deno_node/_stream.mjs:3797:22,0xb815c259148,~
code-source-info,0x1123fa482f10,153,116377,117524,C0O116377C9O116412C17O116428C20O116417C24O116452C39O116470C46O116532C53O116539C58O116561C59O116576C78O116598C83O116596C87O116648C91O116690C99O116724C102O116746C106O116736C110O116790C118O116825C121O116848C125O116838C129O116893C137O116929C140O116953C144O116943C148O116999C156O117033C159O117055C163O117045C167O117099C175O117137C178O117163C182O117153C186O117204C192O117224C197O117247C205O117224C210O117286C215O117293C223O117293C229O117320C234O117332C247O117332C254O117523,,
code-creation,JS,10,80417,0x1123fa483050,328,WritableState ext:deno_node/_stream.mjs:3740:27,0xb815c259098,~
code-source-info,0x1123fa
code-creation,JS,10,80458,0x1123fa4831d8,13,getDefaultHighWaterMark ext:deno_node/_stream.mjs:2492:37,0xb815c255730,~
code-source-info,0x1123fa4831d8,153,76208,76270,C0O76229C12O76264,,
tick,0x10594a93c,80458,0,0x0,3,0x1123fa48313c,0x1123fa482f5e,0x1123fa482870,0x1123fa4826d9,0x1123fa482452,0x1123fa4821b7,0x1123fa481fbe,0x1123fa481c26,0x1123fa481530
code-creation,JS,10,80500,0x1123fa483228,23,resetBuffer ext:deno_node/_stream.mjs:3782:25,0xb815c2590f0,~
code-source-info,0x1123fa483228,153,115896,116028,C0O115912C2O115927C6O115939C7O115959C11O115970C12O115987C16O116001C17O116015C22O116027,,
code-creation,JS,10,80542,0x1123fa483280,14,set _handle node:net:967:14,0xcb077171b60,~
code-source-info,0x1123fa483280,115,33858,33890,C0O33873C8O33882C13O33889,,
code-creation,JS,10,80542,0x1123fa4832d0,9,get _handle node:net:964:14,0xcb077171ae8,~
code-source-info,0x1123fa4832d0,115,33810,33844,C0O33831C5O33830C8O33840,,
code-creation,JS,10,80542,0x1123fa483320,33,_getNewAsyncId node:net:56:24,0xcb07716d4d8,~
code-source-info,0x1123fa483320,115,3762,3872,C0O3775C4O3807C12O3835C18O3835C23O3857C28O3857C32O3870,,
code-creation,JS,10,80583,0x1123fa483388,191,Readable.on ext:deno_node/_stream.mjs:3276:38,0xb815c257398,~
code-source-info,0x1123fa483388,153,100552,101338,C0O100581C3O100588C8O100598C13O100601C27O100601C33O100646C38O100668C40O100675C45O100728C53O100728C60O100754C63O100721C67O100777C77O100813C82O100813C88O100846C90O100853C95O100890C101O100911C107O100942C109O100987C115O100966C119O101005C120O101019C124O101038C125O101060C129O101079C135O101106C140O101120C145O101079C150O101150C156O101172C159O101172C165O101220C171O101243C174O101251C182O101251C188O101321C190O101332,,
code-creation,JS,10,80625,0x1123fa483488,20,addListener ext:deno_node/_stream.mjs:1914:62,0xb815c253e88,~
code-source-info,0x1123fa483488,153,58925,59005,C0O58950C14O58957C19O58999,,
code-creation,JS,10,80667,0x1123fa4834e0,345,_addListener ext:deno_node/_stream.mjs:1864:26,0xb815c253558,~
code-source-info,0x1123fa4834e
code-creation,JS,10,80708,0x1123fa483680,30,checkListener ext:deno_node/_stream.mjs:1771:27,0xb815c2534a8,~
code-source-info,0x1123fa483680,153,54442,54660,C0O54461C6O54507C16O54605C22O54513C27O54507C29O54659,,
code-creation,JS,10,80708,0x1123fa4836e0,140,_initSocketHandle node:net:288:27,0xcb07716fa40,~
code-source-info,0x1123fa4836e0,115,10934,11591,C0O10954C5O10954C9O10970C10O10987C14O11079C20O11141C25O11149C33O11162C37O11183C42O11200C47O11198C51O11225C60O11264C65O11242C69O11240C73O11299C78O11298C82O11313C84O11356C89O11355C93O11375C95O11416C99O11434C105O11439C111O11474C112O11481C113O11507C119O11516C123O11548C128O11556C133O11556C139O11590,,
code-creation,JS,10,80750,0x1123fa4837b0,155,undestroy ext:deno_node/_stream.mjs:1574:23,0xb815c252be8,~
code-source-info,0x1123fa4837b0,153,48808,49586,C0O48834C5O48871C10O48893C14O48910C15O48924C19O48940C20O48949C24O48966C25O48981C29O48998C30O49010C34O49027C35O49037C39O49053C40O49068C44O49085C45O49095C49O49124C57O49120C61O49169C69O49165C73O49203C77O49220C78O49234C82O49250C83O49262C87O49279C88O49288C92O49305C93O49320C97O49337C98O49347C102O49363C103O49378C107O49395C108O49409C112O49426C113O49440C117O49469C125O49465C129O49510C137O49506C141O49553C149O49549C154O49585,,
code-creation,JS,10,80833,0x1123fa483890,295,createWritableStdioStream ext:deno_node/_process/streams.mjs:19:42,0x1e3fa041ccb8,~
code-source-info,0x1123fa483890,237,787,2936,C0O787C13O821C24O862C32O1140C42O821C48O1319C51O1326C59O1351C63O1337C68O1365C73O1373C80O1394C88O1419C92O1405C97O1433C102O1441C107O1459C109O1469C113O1505C117O1496C121O1516C122O1532C126O1549C139O1549C145O1589C149O1596C154O1613C159O1636C164O1699C178O1795C183O1858C197O1944C202O2007C216O2061C221O2126C235O1596C241O2228C246O2238C251O2240C260O2496C264O2512C268O2599C272O2617C276O2710C280O2727C284O2813C288O2836C292O2920C294O2934,,
code-creation,JS,10,80875,0x1123fa4839f8,33,FunctionPrototypeSymbolHasInstance ext:deno_node/_stream.mjs:102:41,0xb815c24f238,~
code-source-info,0x1123fa4839f8,153,3093,3197,C0O3121C4O3137C9O3147C13O3154C17O3146C21O3167C26O3167C32O3189,,
code-creation,JS,10,80917,0x1123fa483a60,39,once2 ext:deno_node/_stream.mjs:1941:49,0xb815c253f38,~
code-source-info,0x1123fa483a60,153,59868,59996,C0O59893C3O59893C7O59929C24O59938C30O59929C36O59978C38O59990,,
code-creation,JS,10,80917,0x1123fa483ac8,60,_onceWrap ext:deno_node/_stream.mjs:1934:23,0xb815c253608,~
code-source-info,0x1123fa483ac8,153,59579,59819,C0O59624C6O59648C12O59656C18O59664C24O59670C31O59702C34O59714C39O59714C45O59733C47O59750C51O59768C53O59781C57O59798C59O59813,,
code-creation,JS,10,80958,0x1123fa483b48,17,isTerminal ext:deno_io/12_io.js:264:13,0x1a64c17f3390,~
script-source,53,ext:deno_io/12_io.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\n// Interfaces 100% copied from Go.\n// Documentation liberally lifted from them too.\n// Thank you! We love Go! <3\n\nimport { core\x2C internals\x2C primordials } from "ext:core/mod.js";\nimport { op_is_terminal\x2C op_stdin_set_raw } from "ext:core/ops";\nconst {\n  Uint8Array\x2C\n  ArrayPrototypePush\x2C\n  TypedArrayPrototypeSubarray\x2C\n  TypedArrayPrototypeSet\x2C\n  TypedArrayPrototypeGetByteLength\x2C\n} = primordials;\n\nimport {\n  readableStreamForRid\x2C\n  writableStreamForRid\x2C\n} from "ext:deno_web/06_streams.js";\n\nconst DEFAULT_BUFFER_SIZE = 32 * 1024;\n// Seek whence values.\n// https://golang.org/pkg/io/#pkg-constants\nconst SeekMode = {\n  0: "Start"\x2C\n  1: "Current"\x2C\n  2: "End"\x2C\n\n  Start: 0\x2C\n  Current: 1\x2C\n  End: 2\x2C\n};\n\nasync function copy(\n  src\x2C\n  dst\x2C\n  options\x2C\n) {\n  internals.warnOnDeprecatedApi(\n    "Deno.copy()"\x2C\n    new Error().stack\x2C\n    "Use `copy()` from `https://deno.land/std/io/copy.ts` instead."\x2C\n  );\n  let n = 0;\n  const bufSize = options?.bufSize ?? DEFAULT_BUFFER_SIZE;\n  const b = new Uint8Array(bufSize);\n  let gotEOF = false;\n  while (gotEOF === false) {\n    const result = await src.read(b);\n    if (result === null) {\n      gotEOF = true;\n    } else {\n      let nwritten = 0;\n      while (nwritten < result) {\n        nwritten += await dst.write(\n          TypedArrayPrototypeSubarray(b\x2C nwritten\x2C result)\x2C\n        );\n      }\n      n += nwritten;\n    }\n  }\n  return n;\n}\n\nasync function* iter(\n  r\x2C\n  options\x2C\n) {\n  internals.warnOnDeprecatedApi(\n    "Deno.iter()"\x2C\n    new Error().stack\x2C\n    "Use `ReadableStream` instead."\x2C\n  );\n  const bufSize = options?.bufSize ?? DEFAULT_BUFFER_SIZE;\n  const b = new Uint8Array(bufSize);\n  while (true) {\n    const result = await r.read(b);\n    if (result === null) {\n      break;\n    }\n\n    yield TypedArrayPrototypeSubarray(b\x2C 0\x2C result);\n  }\n}\n\nfunction* iterSync(\n  r\x2C\n  options\x2C\n) {\n  internals.warnOnDeprecatedApi(\n    "Deno.iterSync()"\x2C\n    new Error().stack\x2C\n    "Use `ReadableStream` instead."\x2C\n  );\n  const bufSize = options?.bufSize ?? DEFAULT_BUFFER_SIZE;\n  const b = new Uint8Array(bufSize);\n  while (true) {\n    const result = r.readSync(b);\n    if (result === null) {\n      break;\n    }\n\n    yield TypedArrayPrototypeSubarray(b\x2C 0\x2C result);\n  }\n}\n\nfunction readSync(rid\x2C buffer) {\n  if (buffer.length === 0) return 0;\n  const nread = core.readSync(rid\x2C buffer);\n  return nread === 0 ? null : nread;\n}\n\nasync function read(rid\x2C buffer) {\n  if (buffer.length === 0) return 0;\n  const nread = await core.read(rid\x2C buffer);\n  return nread === 0 ? null : nread;\n}\n\nfunction writeSync(rid\x2C data) {\n  return core.writeSync(rid\x2C data);\n}\n\nfunction write(rid\x2C data) {\n  return core.write(rid\x2C data);\n}\n\nconst READ_PER_ITER = 64 * 1024; // 64kb\n\nasync function readAll(r) {\n  const buffers = [];\n\n  while (true) {\n    const buf = new Uint8Array(READ_PER_ITER);\n    const read = await r.read(buf);\n    if (typeof read == "number") {\n      ArrayPrototypePush(buffers\x2C TypedArrayPrototypeSubarray(buf\x2C 0\x2C read));\n    } else {\n      break;\n    }\n  }\n\n  return concatBuffers(buffers);\n}\n\nfunction readAllSync(r) {\n  const buffers = [];\n\n  while (true) {\n    const buf = new Uint8Array(READ_PER_ITER);\n    const read = r.readSync(buf);\n    if (typeof read == "number") {\n      ArrayPrototypePush(buffers\x2C TypedArrayPrototypeSubarray(buf\x2C 0\x2C read));\n    } else {\n      break;\n    }\n  }\n\n  return concatBuffers(buffers);\n}\n\nfunction concatBuffers(buffers) {\n  let totalLen = 0;\n  for (let i = 0; i < buffers.length; ++i) {\n    totalLen += TypedArrayPrototypeGetByteLength(buffers[i]);\n  }\n\n  const contents = new Uint8Array(totalLen);\n\n  let n = 0;\n  for (let i = 0; i < buffers.length; ++i) {\n    const buf = buffers[i];\n    TypedArrayPrototypeSet(contents\x2C buf\x2C n);\n    n += TypedArrayPrototypeGetByteLength(buf);\n  }\n\n  return contents;\n}\n\nconst STDIN_RID = 0;\nconst STDOUT_RID = 1;\nconst STDERR_RID = 2;\n\nclass Stdin {\n  #rid = STDIN_RID;\n  #readable;\n\n  constructor() {\n  }\n\n  get rid() {\n    internals.warnOnDeprecatedApi(\n      "Deno.stdin.rid"\x2C\n      new Error().stack\x2C\n      "Use `Deno.stdin` instance methods instead."\x2C\n    );\n    return this.#rid;\n  }\n\n  read(p) {\n    return read(this.#rid\x2C p);\n  }\n\n  readSync(p) {\n    return readSync(this.#rid\x2C p);\n  }\n\n  close() {\n    core.tryClose(this.#rid);\n  }\n\n  get readable() {\n    if (this.#readable === undefined) {\n      this.#readable = readableStreamForRid(this.#rid);\n    }\n    return this.#readable;\n  }\n\n  setRaw(mode\x2C options = {}) {\n    const cbreak = !!(options.cbreak ?? false);\n    op_stdin_set_raw(mode\x2C cbreak);\n  }\n\n  isTerminal() {\n    return op_is_terminal(this.#rid);\n  }\n}\n\nclass Stdout {\n  #rid = STDOUT_RID;\n  #writable;\n\n  constructor() {\n  }\n\n  get rid() {\n    internals.warnOnDeprecatedApi(\n      "Deno.stdout.rid"\x2C\n      new Error().stack\x2C\n      "Use `Deno.stdout` instance methods instead."\x2C\n    );\n    return this.#rid;\n  }\n\n  write(p) {\n    return write(this.#rid\x2C p);\n  }\n\n  writeSync(p) {\n    return writeSync(this.#rid\x2C p);\n  }\n\n  close() {\n    core.close(this.#rid);\n  }\n\n  get writable() {\n    if (this.#writable === undefined) {\n      this.#writable = writableStreamForRid(this.#rid);\n    }\n    return this.#writable;\n  }\n\n  isTerminal() {\n    return op_is_terminal(this.#rid);\n  }\n}\n\nclass Stderr {\n  #rid = STDERR_RID;\n  #writable;\n\n  constructor() {\n  }\n\n  get rid() {\n    internals.warnOnDeprecatedApi(\n      "Deno.stderr.rid"\x2C\n      new Error().stack\x2C\n      "Use `Deno.stderr` instance methods instead."\x2C\n    );\n    return this.#rid;\n  }\n\n  write(p) {\n    return write(this.#rid\x2C p);\n  }\n\n  writeSync(p) {\n    return writeSync(this.#rid\x2C p);\n  }\n\n  close() {\n    core.close(this.#rid);\n  }\n\n  get writable() {\n    if (this.#writable === undefined) {\n      this.#writable = writableStreamForRid(this.#rid);\n    }\n    return this.#writable;\n  }\n\n  isTerminal() {\n    return op_is_terminal(this.#rid);\n  }\n}\n\nconst stdin = new Stdin();\nconst stdout = new Stdout();\nconst stderr = new Stderr();\n\nexport {\n  copy\x2C\n  iter\x2C\n  iterSync\x2C\n  read\x2C\n  readAll\x2C\n  readAllSync\x2C\n  readSync\x2C\n  SeekMode\x2C\n  Stderr\x2C\n  stderr\x2C\n  STDERR_RID\x2C\n  stdin\x2C\n  STDIN_RID\x2C\n  Stdout\x2C\n  stdout\x2C\n  STDOUT_RID\x2C\n  write\x2C\n  writeSync\x2C\n};\n
code-source-info,0x1123fa483b48,53,5245,5291,C0O5254C8O5281C12O5261C16O5287,,
code-creation,JS,10,81417,0x1123fa483ba0,17,isTerminal ext:deno_io/12_io.js:304:13,0x1a64c17f39f0,~
code-source-info,0x1123fa483ba0,53,5871,5917,C0O5880C8O5907C12O5887C16O5913,,
code-creation,JS,10,81417,0x1123fa483bf8,11,setStartTime node:process:491:15,0x2136e0d4a9f0,~
code-source-info,0x1123fa483bf8,122,17035,17069,C0O17045C5O17061C10O17068,,
code-creation,JS,10,81500,0x1123fa483c48,314,internals.__initWorkerThreads node:worker_threads:123:33,0x2136e0d7c580,~
script-source,143,node:worker_threads,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// Copyright Joyent and Node contributors. All rights reserved. MIT license.\n// TODO(petamoriken): enable prefer-primordials for node polyfills\n// deno-lint-ignore-file prefer-primordials\nimport { core\x2C internals } from "ext:core/mod.js";\nimport { op_require_read_closest_package_json } from "ext:core/ops";\nimport { isAbsolute\x2C resolve } from "node:path";\nimport { notImplemented } from "ext:deno_node/_utils.ts";\nimport { EventEmitter\x2C once } from "node:events";\nimport { BroadcastChannel } from "ext:deno_broadcast_channel/01_broadcast_channel.js";\nimport { MessageChannel\x2C MessagePort } from "ext:deno_web/13_message_port.js";\nlet environmentData = new Map();\nlet threads = 0;\nconst WHITESPACE_ENCODINGS = {\n  "\\u0009": "%09"\x2C\n  "\\u000A": "%0A"\x2C\n  "\\u000B": "%0B"\x2C\n  "\\u000C": "%0C"\x2C\n  "\\u000D": "%0D"\x2C\n  "\\u0020": "%20"\n};\nfunction encodeWhitespace(string) {\n  return string.replaceAll(/[\\s]/g\x2C (c)=>{\n    return WHITESPACE_ENCODINGS[c] ?? c;\n  });\n}\nfunction toFileUrlPosix(path) {\n  if (!isAbsolute(path)) {\n    throw new TypeError("Must be an absolute path.");\n  }\n  const url = new URL("file:///");\n  url.pathname = encodeWhitespace(path.replace(/%/g\x2C "%25").replace(/\\\\/g\x2C "%5C"));\n  return url;\n}\nfunction toFileUrlWin32(path) {\n  if (!isAbsolute(path)) {\n    throw new TypeError("Must be an absolute path.");\n  }\n  const [\x2C hostname\x2C pathname] = path.match(/^(?:[/\\\\]{2}([^/\\\\]+)(?=[/\\\\](?:[^/\\\\]|$)))?(.*)/);\n  const url = new URL("file:///");\n  url.pathname = encodeWhitespace(pathname.replace(/%/g\x2C "%25"));\n  if (hostname != null && hostname != "localhost") {\n    url.hostname = hostname;\n    if (!url.hostname) {\n      throw new TypeError("Invalid hostname.");\n    }\n  }\n  return url;\n}\n/**\n * Converts a path string to a file URL.\n *\n * ```ts\n *      toFileUrl("/home/foo"); // new URL("file:///home/foo")\n *      toFileUrl("\\\\home\\\\foo"); // new URL("file:///home/foo")\n *      toFileUrl("C:\\\\Users\\\\foo"); // new URL("file:///C:/Users/foo")\n *      toFileUrl("\\\\\\\\127.0.0.1\\\\home\\\\foo"); // new URL("file://127.0.0.1/home/foo")\n * ```\n * @param path to convert to file URL\n */ function toFileUrl(path) {\n  return core.build.os == "windows" ? toFileUrlWin32(path) : toFileUrlPosix(path);\n}\nconst kHandle = Symbol("kHandle");\nconst PRIVATE_WORKER_THREAD_NAME = "$DENO_STD_NODE_WORKER_THREAD";\nclass _Worker extends EventEmitter {\n  threadId;\n  resourceLimits = {\n    maxYoungGenerationSizeMb: -1\x2C\n    maxOldGenerationSizeMb: -1\x2C\n    codeRangeSizeMb: -1\x2C\n    stackSizeMb: 4\n  };\n  [kHandle];\n  postMessage;\n  constructor(specifier\x2C options){\n    super();\n    if (options?.eval === true) {\n      specifier = `data:text/javascript\x2C${specifier}`;\n    } else if (typeof specifier === "string") {\n      specifier = resolve(specifier);\n      let pkg;\n      try {\n        pkg = op_require_read_closest_package_json(specifier);\n      } catch (_) {\n      // empty catch block when package json might not be present\n      }\n      if (!(specifier.toString().endsWith(".mjs") || pkg && pkg.exists && pkg.typ == "module")) {\n        const cwdFileUrl = toFileUrl(Deno.cwd());\n        specifier = `data:text/javascript\x2C(async function() {const { createRequire } = await import("node:module");const require = createRequire("${cwdFileUrl}");require("${specifier}");})();`;\n      } else {\n        specifier = toFileUrl(specifier);\n      }\n    }\n    const handle = this[kHandle] = new Worker(specifier\x2C {\n      name: PRIVATE_WORKER_THREAD_NAME\x2C\n      type: "module"\n    });\n    handle.addEventListener("error"\x2C (event)=>this.emit("error"\x2C event.error || event.message));\n    handle.addEventListener("messageerror"\x2C (event)=>this.emit("messageerror"\x2C event.data));\n    handle.addEventListener("message"\x2C (event)=>this.emit("message"\x2C event.data));\n    handle.postMessage({\n      environmentData\x2C\n      threadId: this.threadId = ++threads\x2C\n      workerData: options?.workerData\n    }\x2C options?.transferList || []);\n    this.postMessage = handle.postMessage.bind(handle);\n    this.emit("online");\n  }\n  terminate() {\n    this[kHandle].terminate();\n    this.emit("exit"\x2C 0);\n  }\n  getHeapSnapshot = ()=>notImplemented("Worker.prototype.getHeapSnapshot");\n  // fake performance\n  performance = globalThis.performance;\n}\nexport let isMainThread;\nexport let resourceLimits;\nlet threadId = 0;\nlet workerData = null;\n// deno-lint-ignore no-explicit-any\nlet parentPort = null;\ninternals.__initWorkerThreads = ()=>{\n  isMainThread = // deno-lint-ignore no-explicit-any\n  globalThis.name !== PRIVATE_WORKER_THREAD_NAME;\n  defaultExport.isMainThread = isMainThread;\n  // fake resourceLimits\n  resourceLimits = isMainThread ? {} : {\n    maxYoungGenerationSizeMb: 48\x2C\n    maxOldGenerationSizeMb: 2048\x2C\n    codeRangeSizeMb: 0\x2C\n    stackSizeMb: 4\n  };\n  defaultExport.resourceLimits = resourceLimits;\n  if (!isMainThread) {\n    // deno-lint-ignore no-explicit-any\n    delete globalThis.name;\n    // deno-lint-ignore no-explicit-any\n    const listeners = new WeakMap();\n    parentPort = self;\n    const initPromise = once(parentPort\x2C "message").then((result)=>{\n      // TODO(kt3k): The below values are set asynchronously\n      // using the first message from the parent.\n      // This should be done synchronously.\n      threadId = result[0].data.threadId;\n      workerData = result[0].data.workerData;\n      environmentData = result[0].data.environmentData;\n      defaultExport.threadId = threadId;\n      defaultExport.workerData = workerData;\n    });\n    parentPort.off = parentPort.removeListener = function(name\x2C listener) {\n      this.removeEventListener(name\x2C listeners.get(listener));\n      listeners.delete(listener);\n      return this;\n    };\n    parentPort.on = parentPort.addListener = function(name\x2C listener) {\n      initPromise.then(()=>{\n        // deno-lint-ignore no-explicit-any\n        const _listener = (ev)=>listener(ev.data);\n        listeners.set(listener\x2C _listener);\n        this.addEventListener(name\x2C _listener);\n      });\n      return this;\n    };\n    parentPort.once = function(name\x2C listener) {\n      initPromise.then(()=>{\n        // deno-lint-ignore no-explicit-any\n        const _listener = (ev)=>listener(ev.data);\n        listeners.set(listener\x2C _listener);\n        this.addEventListener(name\x2C _listener);\n      });\n      return this;\n    };\n    // mocks\n    parentPort.setMaxListeners = ()=>{};\n    parentPort.getMaxListeners = ()=>Infinity;\n    parentPort.eventNames = ()=>[\n        ""\n      ];\n    parentPort.listenerCount = ()=>0;\n    parentPort.emit = ()=>notImplemented("parentPort.emit");\n    parentPort.removeAllListeners = ()=>notImplemented("parentPort.removeAllListeners");\n    parentPort.addEventListener("offline"\x2C ()=>{\n      parentPort.emit("close");\n    });\n  }\n};\nexport function getEnvironmentData(key) {\n  return environmentData.get(key);\n}\nexport function setEnvironmentData(key\x2C value) {\n  if (value === undefined) {\n    environmentData.delete(key);\n  } else {\n    environmentData.set(key\x2C value);\n  }\n}\nexport const SHARE_ENV = Symbol.for("nodejs.worker_threads.SHARE_ENV");\nexport function markAsUntransferable() {\n  notImplemented("markAsUntransferable");\n}\nexport function moveMessagePortToContext() {\n  notImplemented("moveMessagePortToContext");\n}\nexport function receiveMessageOnPort() {\n  notImplemented("receiveMessageOnPort");\n}\nexport { _Worker as Worker\x2C BroadcastChannel\x2C MessageChannel\x2C MessagePort\x2C parentPort\x2C threadId\x2C workerData };\nconst defaultExport = {\n  markAsUntransferable\x2C\n  moveMessagePortToContext\x2C\n  receiveMessageOnPort\x2C\n  MessagePort\x2C\n  MessageChannel\x2C\n  BroadcastChannel\x2C\n  Worker: _Worker\x2C\n  getEnvironmentData\x2C\n  setEnvironmentData\x2C\n  SHARE_ENV\x2C\n  threadId\x2C\n  workerData\x2C\n  resourceLimits\x2C\n  parentPort\x2C\n  isMainThread\n};\nexport default defaultExport;\n
code-source-info,0x1123fa483c48,143,4472,6771,C0O4480C4O4544C11O4553C13O4549C18O4493C28O4583C33O4612C36O4610C40O4653C53O4668C63O4810C66O4841C69O4839C73O4859C88O4924C96O5010C100O5010C105O5010C107O5029C111O5040C121O5072C127O5077C134O5072C140O5099C150O5100C155O5072C157O5514C161O5531C170O5557C176O5529C180O5713C184O5729C193O5752C199O5727C203O6037C211O6053C215O6351C223O6378C227O6392C235O6419C239O6439C247O6461C251O6493C259O6518C263O6531C271O6547C275O6592C283O6622C287O6681C291O6692C304O6692C313O6770,,
tick,0x185290cdc,81833,0,0x0,3,0x1123fa481c34,0x1123fa481530
code-creation,JS,10,81875,0x1123fa483dc8,41,setupChildProcessIpcChannel node:child_process:477:37,0x9cf11ab2188,~
script-source,69,node:child_process,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// This module implements 'child_process' module of Node.JS API.\n// ref: https://nodejs.org/api/child_process.html\n// TODO(petamoriken): enable prefer-primordials for node polyfills\n// deno-lint-ignore-file prefer-primordials\nimport { internals } from "ext:core/mod.js";\nimport { op_bootstrap_unstable_args\x2C op_node_child_ipc_pipe\x2C op_npm_process_state } from "ext:core/ops";\nimport { ChildProcess\x2C normalizeSpawnArguments\x2C setupChannel\x2C spawnSync as _spawnSync\x2C stdioStringToArray } from "ext:deno_node/internal/child_process.ts";\nimport { validateAbortSignal\x2C validateFunction\x2C validateObject\x2C validateString } from "ext:deno_node/internal/validators.mjs";\nimport { ERR_CHILD_PROCESS_IPC_REQUIRED\x2C ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C ERR_INVALID_ARG_TYPE\x2C ERR_INVALID_ARG_VALUE\x2C ERR_OUT_OF_RANGE\x2C genericNodeError } from "ext:deno_node/internal/errors.ts";\nimport { ArrayIsArray\x2C ArrayPrototypeJoin\x2C ArrayPrototypePush\x2C ArrayPrototypeSlice\x2C ObjectAssign\x2C StringPrototypeSlice } from "ext:deno_node/internal/primordials.mjs";\nimport { getSystemErrorName\x2C promisify } from "node:util";\nimport { createDeferredPromise } from "ext:deno_node/internal/util.mjs";\nimport process from "node:process";\nimport { Buffer } from "node:buffer";\nimport { convertToValidSignal\x2C kEmptyObject } from "ext:deno_node/internal/util.mjs";\nconst MAX_BUFFER = 1024 * 1024;\n/**\n * Spawns a new Node.js process + fork.\n * @param modulePath\n * @param args\n * @param option\n * @returns\n */ export function fork(modulePath\x2C _args\x2C _options) {\n  validateString(modulePath\x2C "modulePath");\n  // Get options and args arguments.\n  let execArgv;\n  let options = {};\n  let args = [];\n  let pos = 1;\n  if (pos < arguments.length && Array.isArray(arguments[pos])) {\n    args = arguments[pos++];\n  }\n  if (pos < arguments.length && arguments[pos] == null) {\n    pos++;\n  }\n  if (pos < arguments.length && arguments[pos] != null) {\n    if (typeof arguments[pos] !== "object") {\n      throw new ERR_INVALID_ARG_VALUE(`arguments[${pos}]`\x2C arguments[pos]);\n    }\n    options = {\n      ...arguments[pos++]\n    };\n  }\n  // Prepare arguments for fork:\n  execArgv = options.execArgv || process.execArgv;\n  if (execArgv === process.execArgv && process._eval != null) {\n    const index = execArgv.lastIndexOf(process._eval);\n    if (index > 0) {\n      // Remove the -e switch to avoid fork bombing ourselves.\n      execArgv = execArgv.slice(0);\n      execArgv.splice(index - 1\x2C 2);\n    }\n  }\n  // TODO(bartlomieju): this is incomplete\x2C currently only handling a single\n  // V8 flag to get Prisma integration running\x2C we should fill this out with\n  // more\n  const v8Flags = [];\n  if (Array.isArray(execArgv)) {\n    for(let index = 0; index < execArgv.length; index++){\n      const flag = execArgv[index];\n      if (flag.startsWith("--max-old-space-size")) {\n        execArgv.splice(index\x2C 1);\n        v8Flags.push(flag);\n      }\n    }\n  }\n  const stringifiedV8Flags = [];\n  if (v8Flags.length > 0) {\n    stringifiedV8Flags.push("--v8-flags=" + v8Flags.join("\x2C"));\n  }\n  args = [\n    "run"\x2C\n    ...op_bootstrap_unstable_args()\x2C\n    "--node-modules-dir"\x2C\n    "-A"\x2C\n    ...stringifiedV8Flags\x2C\n    ...execArgv\x2C\n    modulePath\x2C\n    ...args\n  ];\n  if (typeof options.stdio === "string") {\n    options.stdio = stdioStringToArray(options.stdio\x2C "ipc");\n  } else if (!Array.isArray(options.stdio)) {\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\n    // and stderr from the parent if silent isn't set.\n    options.stdio = stdioStringToArray(options.silent ? "pipe" : "inherit"\x2C "ipc");\n  } else if (!options.stdio.includes("ipc")) {\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED("options.stdio");\n  }\n  options.execPath = options.execPath || Deno.execPath();\n  options.shell = false;\n  Object.assign(options.env ??= {}\x2C {\n    DENO_DONT_USE_INTERNAL_NODE_COMPAT_STATE: op_npm_process_state()\n  });\n  return spawn(options.execPath\x2C args\x2C options);\n}\n/**\n * Spawns a child process using `command`.\n */ export function spawn(command\x2C argsOrOptions\x2C maybeOptions) {\n  const args = Array.isArray(argsOrOptions) ? argsOrOptions : [];\n  let options = !Array.isArray(argsOrOptions) && argsOrOptions != null ? argsOrOptions : maybeOptions;\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\n  validateAbortSignal(options?.signal\x2C "options.signal");\n  return new ChildProcess(command\x2C args\x2C options);\n}\nfunction validateTimeout(timeout) {\n  if (timeout != null && !(Number.isInteger(timeout) && timeout >= 0)) {\n    throw new ERR_OUT_OF_RANGE("timeout"\x2C "an unsigned integer"\x2C timeout);\n  }\n}\nfunction validateMaxBuffer(maxBuffer) {\n  if (maxBuffer != null && !(typeof maxBuffer === "number" && maxBuffer >= 0)) {\n    throw new ERR_OUT_OF_RANGE("options.maxBuffer"\x2C "a positive number"\x2C maxBuffer);\n  }\n}\nfunction sanitizeKillSignal(killSignal) {\n  if (typeof killSignal === "string" || typeof killSignal === "number") {\n    return convertToValidSignal(killSignal);\n  } else if (killSignal != null) {\n    throw new ERR_INVALID_ARG_TYPE("options.killSignal"\x2C [\n      "string"\x2C\n      "number"\n    ]\x2C killSignal);\n  }\n}\nexport function spawnSync(command\x2C argsOrOptions\x2C maybeOptions) {\n  const args = Array.isArray(argsOrOptions) ? argsOrOptions : [];\n  let options = !Array.isArray(argsOrOptions) && argsOrOptions ? argsOrOptions : maybeOptions;\n  options = {\n    maxBuffer: MAX_BUFFER\x2C\n    ...normalizeSpawnArguments(command\x2C args\x2C options)\n  };\n  // Validate the timeout\x2C if present.\n  validateTimeout(options.timeout);\n  // Validate maxBuffer\x2C if present.\n  validateMaxBuffer(options.maxBuffer);\n  // Validate and translate the kill signal\x2C if present.\n  sanitizeKillSignal(options.killSignal);\n  return _spawnSync(command\x2C args\x2C options);\n}\nfunction normalizeExecArgs(command\x2C optionsOrCallback\x2C maybeCallback) {\n  let callback = maybeCallback;\n  if (typeof optionsOrCallback === "function") {\n    callback = optionsOrCallback;\n    optionsOrCallback = undefined;\n  }\n  // Make a shallow copy so we don't clobber the user's options object.\n  const options = {\n    ...optionsOrCallback\n  };\n  options.shell = typeof options.shell === "string" ? options.shell : true;\n  return {\n    file: command\x2C\n    options: options\x2C\n    callback: callback\n  };\n}\nexport function exec(command\x2C optionsOrCallback\x2C maybeCallback) {\n  const opts = normalizeExecArgs(command\x2C optionsOrCallback\x2C maybeCallback);\n  return execFile(opts.file\x2C opts.options\x2C opts.callback);\n}\nconst customPromiseExecFunction = (orig)=>{\n  return (...args)=>{\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr)=>{\n      if (err !== null) {\n        const _err = err;\n        _err.stdout = stdout;\n        _err.stderr = stderr;\n        reject && reject(_err);\n      } else {\n        resolve && resolve({\n          stdout\x2C\n          stderr\n        });\n      }\n    });\n    return promise;\n  };\n};\nObject.defineProperty(exec\x2C promisify.custom\x2C {\n  enumerable: false\x2C\n  value: customPromiseExecFunction(exec)\n});\nclass ExecFileError extends Error {\n  code;\n  constructor(message){\n    super(message);\n    this.code = "UNKNOWN";\n  }\n}\nexport function execFile(file\x2C argsOrOptionsOrCallback\x2C optionsOrCallback\x2C maybeCallback) {\n  let args = [];\n  let options = {};\n  let callback;\n  if (Array.isArray(argsOrOptionsOrCallback)) {\n    args = argsOrOptionsOrCallback;\n  } else if (argsOrOptionsOrCallback instanceof Function) {\n    callback = argsOrOptionsOrCallback;\n  } else if (argsOrOptionsOrCallback) {\n    options = argsOrOptionsOrCallback;\n  }\n  if (optionsOrCallback instanceof Function) {\n    callback = optionsOrCallback;\n  } else if (optionsOrCallback) {\n    options = optionsOrCallback;\n    callback = maybeCallback;\n  }\n  const execOptions = {\n    encoding: "utf8"\x2C\n    timeout: 0\x2C\n    maxBuffer: MAX_BUFFER\x2C\n    killSignal: "SIGTERM"\x2C\n    shell: false\x2C\n    ...options\n  };\n  validateTimeout(execOptions.timeout);\n  if (execOptions.maxBuffer < 0) {\n    throw new ERR_OUT_OF_RANGE("options.maxBuffer"\x2C "a positive number"\x2C execOptions.maxBuffer);\n  }\n  const spawnOptions = {\n    cwd: execOptions.cwd\x2C\n    env: execOptions.env\x2C\n    gid: execOptions.gid\x2C\n    shell: execOptions.shell\x2C\n    signal: execOptions.signal\x2C\n    uid: execOptions.uid\x2C\n    windowsHide: !!execOptions.windowsHide\x2C\n    windowsVerbatimArguments: !!execOptions.windowsVerbatimArguments\n  };\n  const child = spawn(file\x2C args\x2C spawnOptions);\n  let encoding;\n  const _stdout = [];\n  const _stderr = [];\n  if (execOptions.encoding !== "buffer" && Buffer.isEncoding(execOptions.encoding)) {\n    encoding = execOptions.encoding;\n  } else {\n    encoding = null;\n  }\n  let stdoutLen = 0;\n  let stderrLen = 0;\n  let killed = false;\n  let exited = false;\n  let timeoutId;\n  let ex = null;\n  let cmd = file;\n  function exithandler(code = 0\x2C signal) {\n    if (exited) return;\n    exited = true;\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = null;\n    }\n    if (!callback) return;\n    // merge chunks\n    let stdout;\n    let stderr;\n    if (encoding || child.stdout && child.stdout.readableEncoding) {\n      stdout = _stdout.join("");\n    } else {\n      stdout = Buffer.concat(_stdout);\n    }\n    if (encoding || child.stderr && child.stderr.readableEncoding) {\n      stderr = _stderr.join("");\n    } else {\n      stderr = Buffer.concat(_stderr);\n    }\n    if (!ex && code === 0 && signal === null) {\n      callback(null\x2C stdout\x2C stderr);\n      return;\n    }\n    if (args?.length) {\n      cmd += ` ${args.join(" ")}`;\n    }\n    if (!ex) {\n      ex = new ExecFileError("Command failed: " + cmd + "\\n" + stderr);\n      ex.code = code < 0 ? getSystemErrorName(code) : code;\n      ex.killed = child.killed || killed;\n      ex.signal = signal;\n    }\n    ex.cmd = cmd;\n    callback(ex\x2C stdout\x2C stderr);\n  }\n  function errorhandler(e) {\n    ex = e;\n    if (child.stdout) {\n      child.stdout.destroy();\n    }\n    if (child.stderr) {\n      child.stderr.destroy();\n    }\n    exithandler();\n  }\n  function kill() {\n    if (child.stdout) {\n      child.stdout.destroy();\n    }\n    if (child.stderr) {\n      child.stderr.destroy();\n    }\n    killed = true;\n    try {\n      child.kill(execOptions.killSignal);\n    } catch (e) {\n      if (e) {\n        ex = e;\n      }\n      exithandler();\n    }\n  }\n  if (execOptions.timeout > 0) {\n    timeoutId = setTimeout(function delayedKill() {\n      kill();\n      timeoutId = null;\n    }\x2C execOptions.timeout);\n  }\n  if (child.stdout) {\n    if (encoding) {\n      child.stdout.setEncoding(encoding);\n    }\n    child.stdout.on("data"\x2C function onChildStdout(chunk) {\n      // Do not need to count the length\n      if (execOptions.maxBuffer === Infinity) {\n        ArrayPrototypePush(_stdout\x2C chunk);\n        return;\n      }\n      const encoding = child.stdout?.readableEncoding;\n      const length = encoding ? Buffer.byteLength(chunk\x2C encoding) : chunk.length;\n      const slice = encoding ? StringPrototypeSlice : (buf\x2C ...args)=>buf.slice(...args);\n      stdoutLen += length;\n      if (stdoutLen > execOptions.maxBuffer) {\n        const truncatedLen = execOptions.maxBuffer - (stdoutLen - length);\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER("stdout");\n        kill();\n      } else {\n        ArrayPrototypePush(_stdout\x2C chunk);\n      }\n    });\n  }\n  if (child.stderr) {\n    if (encoding) {\n      child.stderr.setEncoding(encoding);\n    }\n    child.stderr.on("data"\x2C function onChildStderr(chunk) {\n      // Do not need to count the length\n      if (execOptions.maxBuffer === Infinity) {\n        ArrayPrototypePush(_stderr\x2C chunk);\n        return;\n      }\n      const encoding = child.stderr?.readableEncoding;\n      const length = encoding ? Buffer.byteLength(chunk\x2C encoding) : chunk.length;\n      const slice = encoding ? StringPrototypeSlice : (buf\x2C ...args)=>buf.slice(...args);\n      stderrLen += length;\n      if (stderrLen > execOptions.maxBuffer) {\n        const truncatedLen = execOptions.maxBuffer - (stderrLen - length);\n        ArrayPrototypePush(_stderr\x2C slice(chunk\x2C 0\x2C truncatedLen));\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER("stderr");\n        kill();\n      } else {\n        ArrayPrototypePush(_stderr\x2C chunk);\n      }\n    });\n  }\n  child.addListener("close"\x2C exithandler);\n  child.addListener("error"\x2C errorhandler);\n  return child;\n}\nconst customPromiseExecFileFunction = (orig)=>{\n  return (...args)=>{\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr)=>{\n      if (err !== null) {\n        const _err = err;\n        _err.stdout = stdout;\n        _err.stderr = stderr;\n        reject && reject(_err);\n      } else {\n        resolve && resolve({\n          stdout\x2C\n          stderr\n        });\n      }\n    });\n    return promise;\n  };\n};\nObject.defineProperty(execFile\x2C promisify.custom\x2C {\n  enumerable: false\x2C\n  value: customPromiseExecFileFunction(execFile)\n});\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\n  let err;\n  if (ret.error) {\n    err = ret.error;\n    ObjectAssign(err\x2C ret);\n  } else if (ret.status !== 0) {\n    let msg = "Command failed: ";\n    msg += cmd || ArrayPrototypeJoin(args\x2C " ");\n    if (ret.stderr && ret.stderr.length > 0) {\n      msg += `\\n${ret.stderr.toString()}`;\n    }\n    err = genericNodeError(msg\x2C ret);\n  }\n  return err;\n}\nexport function execSync(command\x2C options) {\n  const opts = normalizeExecArgs(command\x2C options);\n  const inheritStderr = !opts.options.stdio;\n  const ret = spawnSync(opts.file\x2C opts.options);\n  if (inheritStderr && ret.stderr) {\n    process.stderr.write(ret.stderr);\n  }\n  const err = checkExecSyncError(ret\x2C []\x2C command);\n  if (err) {\n    throw err;\n  }\n  return ret.stdout;\n}\nfunction normalizeExecFileArgs(file\x2C args\x2C options\x2C callback) {\n  if (ArrayIsArray(args)) {\n    args = ArrayPrototypeSlice(args);\n  } else if (args != null && typeof args === "object") {\n    callback = options;\n    options = args;\n    args = null;\n  } else if (typeof args === "function") {\n    callback = args;\n    options = null;\n    args = null;\n  }\n  if (args == null) {\n    args = [];\n  }\n  if (typeof options === "function") {\n    callback = options;\n  } else if (options != null) {\n    validateObject(options\x2C "options");\n  }\n  if (options == null) {\n    options = kEmptyObject;\n  }\n  args = args;\n  options = options;\n  if (callback != null) {\n    validateFunction(callback\x2C "callback");\n  }\n  // Validate argv0\x2C if present.\n  if (options.argv0 != null) {\n    validateString(options.argv0\x2C "options.argv0");\n  }\n  return {\n    file\x2C\n    args\x2C\n    options\x2C\n    callback\n  };\n}\nexport function execFileSync(file\x2C args\x2C options) {\n  ({ file\x2C args\x2C options } = normalizeExecFileArgs(file\x2C args\x2C options));\n  const inheritStderr = !options.stdio;\n  const ret = spawnSync(file\x2C args\x2C options);\n  if (inheritStderr && ret.stderr) {\n    process.stderr.write(ret.stderr);\n  }\n  const errArgs = [\n    options.argv0 || file\x2C\n    ...args\n  ];\n  const err = checkExecSyncError(ret\x2C errArgs);\n  if (err) {\n    throw err;\n  }\n  return ret.stdout;\n}\nfunction setupChildProcessIpcChannel() {\n  const fd = op_node_child_ipc_pipe();\n  if (typeof fd != "number" || fd < 0) return;\n  setupChannel(process\x2C fd);\n}\ninternals.__setupChildProcessIpcChannel = setupChildProcessIpcChannel;\nexport default {\n  fork\x2C\n  spawn\x2C\n  exec\x2C\n  execFile\x2C\n  execFileSync\x2C\n  execSync\x2C\n  ChildProcess\x2C\n  spawnSync\n};\nexport { ChildProcess };\n
code-source-info,0x1123fa483dc8,69,15165,15286,C0O15183C6O15183C10O15211C15O15243C20O15248C21O15255C22O15258C28O15271C34O15258C40O15285,,
tick,0x10535f5a8,83000,0,0x0,6
tick,0x104857738,84250,0,0x0,6
tick,0x185256434,85583,0,0x0,6
tick,0x1055fad8c,86750,0,0x0,6
tick,0x10502ce04,88000,0,0x0,6
code-creation,Script,10,88875,0x1123fa483e38,58, file:///Users/romandvornov/Developer/cpuprofile-viewer/t.js:1:1,0x91c84d61db8,~
script-source,302,file:///Users/romandvornov/Developer/cpuprofile-viewer/t.js,console.log('!!');\n
code-source-info,0x1123fa483e38,302,0,19,C10O0C15O0C35O0C39O0C43O8C51O8C57O19,,
tick,0x1057d0618,89250,0,0x0,5
code-creation,JS,10,89958,0x1123fa483eb8,64,log ext:deno_console/01_console.js:3084:9,0x288e06664608,~
script-source,9,ext:deno_console/01_console.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\n/// <reference path="../../core/internal.d.ts" />\n\nimport { core\x2C internals\x2C primordials } from "ext:core/mod.js";\nconst {\n  isAnyArrayBuffer\x2C\n  isArgumentsObject\x2C\n  isArrayBuffer\x2C\n  isAsyncFunction\x2C\n  isBigIntObject\x2C\n  isBooleanObject\x2C\n  isBoxedPrimitive\x2C\n  isDataView\x2C\n  isDate\x2C\n  isGeneratorFunction\x2C\n  isMap\x2C\n  isMapIterator\x2C\n  isModuleNamespaceObject\x2C\n  isNativeError\x2C\n  isNumberObject\x2C\n  isPromise\x2C\n  isRegExp\x2C\n  isSet\x2C\n  isSetIterator\x2C\n  isStringObject\x2C\n  isTypedArray\x2C\n  isWeakMap\x2C\n  isWeakSet\x2C\n} = core;\nimport {\n  op_get_constructor_name\x2C\n  op_get_non_index_property_names\x2C\n  op_preview_entries\x2C\n} from "ext:core/ops";\nconst {\n  Array\x2C\n  ArrayBufferPrototypeGetByteLength\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeFill\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeFind\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePop\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypePushApply\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeShift\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  BigIntPrototypeValueOf\x2C\n  Boolean\x2C\n  BooleanPrototypeValueOf\x2C\n  DateNow\x2C\n  DatePrototypeGetTime\x2C\n  DatePrototypeToISOString\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  ErrorPrototype\x2C\n  ErrorPrototypeToString\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  FunctionPrototypeToString\x2C\n  MapPrototypeDelete\x2C\n  MapPrototypeEntries\x2C\n  MapPrototypeForEach\x2C\n  MapPrototypeGet\x2C\n  MapPrototypeGetSize\x2C\n  MapPrototypeHas\x2C\n  MapPrototypeSet\x2C\n  MathAbs\x2C\n  MathFloor\x2C\n  MathMax\x2C\n  MathMin\x2C\n  MathRound\x2C\n  MathSqrt\x2C\n  Number\x2C\n  NumberIsInteger\x2C\n  NumberIsNaN\x2C\n  NumberParseInt\x2C\n  NumberPrototypeToString\x2C\n  NumberPrototypeValueOf\x2C\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectFromEntries\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyNames\x2C\n  ObjectGetOwnPropertySymbols\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectHasOwn\x2C\n  ObjectIs\x2C\n  ObjectKeys\x2C\n  ObjectPrototype\x2C\n  ObjectPrototypeIsPrototypeOf\x2C\n  ObjectPrototypePropertyIsEnumerable\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  Proxy\x2C\n  ReflectGet\x2C\n  ReflectGetOwnPropertyDescriptor\x2C\n  ReflectGetPrototypeOf\x2C\n  ReflectHas\x2C\n  ReflectOwnKeys\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  RegExpPrototypeTest\x2C\n  RegExpPrototypeToString\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeMapIterator\x2C\n  SafeRegExp\x2C\n  SafeSet\x2C\n  SafeSetIterator\x2C\n  SafeStringIterator\x2C\n  SetPrototypeAdd\x2C\n  SetPrototypeGetSize\x2C\n  SetPrototypeHas\x2C\n  SetPrototypeValues\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeCodePointAt\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeMatch\x2C\n  StringPrototypeNormalize\x2C\n  StringPrototypePadEnd\x2C\n  StringPrototypePadStart\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeReplaceAll\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeTrim\x2C\n  StringPrototypeValueOf\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolHasInstance\x2C\n  SymbolIterator\x2C\n  SymbolPrototypeGetDescription\x2C\n  SymbolPrototypeToString\x2C\n  SymbolPrototypeValueOf\x2C\n  SymbolToStringTag\x2C\n  TypedArrayPrototypeGetByteLength\x2C\n  TypedArrayPrototypeGetLength\x2C\n  Uint8Array\x2C\n} = primordials;\n\nlet noColor = () => false;\n\nfunction setNoColorFn(fn) {\n  noColor = fn;\n}\n\nfunction getNoColor() {\n  return noColor();\n}\n\nfunction assert(cond\x2C msg = "Assertion failed.") {\n  if (!cond) {\n    throw new AssertionError(msg);\n  }\n}\n\n// Don't use 'blue' not visible on cmd.exe\nconst styles = {\n  special: "cyan"\x2C\n  number: "yellow"\x2C\n  bigint: "yellow"\x2C\n  boolean: "yellow"\x2C\n  undefined: "grey"\x2C\n  null: "bold"\x2C\n  string: "green"\x2C\n  symbol: "green"\x2C\n  date: "magenta"\x2C\n  // "name": intentionally not styling\n  // TODO(BridgeAR): Highlight regular expressions properly.\n  regexp: "red"\x2C\n  module: "underline"\x2C\n  internalError: "red"\x2C\n  temporal: "magenta"\x2C\n};\n\nconst defaultFG = 39;\nconst defaultBG = 49;\n\n// Set Graphics Rendition https://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n// Each color consists of an array with the color code as first entry and the\n// reset code as second entry.\nconst colors = {\n  reset: [0\x2C 0]\x2C\n  bold: [1\x2C 22]\x2C\n  dim: [2\x2C 22]\x2C // Alias: faint\n  italic: [3\x2C 23]\x2C\n  underline: [4\x2C 24]\x2C\n  blink: [5\x2C 25]\x2C\n  // Swap foreground and background colors\n  inverse: [7\x2C 27]\x2C // Alias: swapcolors\x2C swapColors\n  hidden: [8\x2C 28]\x2C // Alias: conceal\n  strikethrough: [9\x2C 29]\x2C // Alias: strikeThrough\x2C crossedout\x2C crossedOut\n  doubleunderline: [21\x2C 24]\x2C // Alias: doubleUnderline\n  black: [30\x2C defaultFG]\x2C\n  red: [31\x2C defaultFG]\x2C\n  green: [32\x2C defaultFG]\x2C\n  yellow: [33\x2C defaultFG]\x2C\n  blue: [34\x2C defaultFG]\x2C\n  magenta: [35\x2C defaultFG]\x2C\n  cyan: [36\x2C defaultFG]\x2C\n  white: [37\x2C defaultFG]\x2C\n  bgBlack: [40\x2C defaultBG]\x2C\n  bgRed: [41\x2C defaultBG]\x2C\n  bgGreen: [42\x2C defaultBG]\x2C\n  bgYellow: [43\x2C defaultBG]\x2C\n  bgBlue: [44\x2C defaultBG]\x2C\n  bgMagenta: [45\x2C defaultBG]\x2C\n  bgCyan: [46\x2C defaultBG]\x2C\n  bgWhite: [47\x2C defaultBG]\x2C\n  framed: [51\x2C 54]\x2C\n  overlined: [53\x2C 55]\x2C\n  gray: [90\x2C defaultFG]\x2C // Alias: grey\x2C blackBright\n  redBright: [91\x2C defaultFG]\x2C\n  greenBright: [92\x2C defaultFG]\x2C\n  yellowBright: [93\x2C defaultFG]\x2C\n  blueBright: [94\x2C defaultFG]\x2C\n  magentaBright: [95\x2C defaultFG]\x2C\n  cyanBright: [96\x2C defaultFG]\x2C\n  whiteBright: [97\x2C defaultFG]\x2C\n  bgGray: [100\x2C defaultBG]\x2C // Alias: bgGrey\x2C bgBlackBright\n  bgRedBright: [101\x2C defaultBG]\x2C\n  bgGreenBright: [102\x2C defaultBG]\x2C\n  bgYellowBright: [103\x2C defaultBG]\x2C\n  bgBlueBright: [104\x2C defaultBG]\x2C\n  bgMagentaBright: [105\x2C defaultBG]\x2C\n  bgCyanBright: [106\x2C defaultBG]\x2C\n  bgWhiteBright: [107\x2C defaultBG]\x2C\n};\n\nfunction defineColorAlias(target\x2C alias) {\n  ObjectDefineProperty(colors\x2C alias\x2C {\n    get() {\n      return this[target];\n    }\x2C\n    set(value) {\n      this[target] = value;\n    }\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n  });\n}\n\ndefineColorAlias("gray"\x2C "grey");\ndefineColorAlias("gray"\x2C "blackBright");\ndefineColorAlias("bgGray"\x2C "bgGrey");\ndefineColorAlias("bgGray"\x2C "bgBlackBright");\ndefineColorAlias("dim"\x2C "faint");\ndefineColorAlias("strikethrough"\x2C "crossedout");\ndefineColorAlias("strikethrough"\x2C "strikeThrough");\ndefineColorAlias("strikethrough"\x2C "crossedOut");\ndefineColorAlias("hidden"\x2C "conceal");\ndefineColorAlias("inverse"\x2C "swapColors");\ndefineColorAlias("inverse"\x2C "swapcolors");\ndefineColorAlias("doubleunderline"\x2C "doubleUnderline");\n\n// https://tc39.es/ecma262/#sec-get-sharedarraybuffer.prototype.bytelength\nlet _getSharedArrayBufferByteLength;\n\nfunction getSharedArrayBufferByteLength(value) {\n  // TODO(kt3k): add SharedArrayBuffer to primordials\n  _getSharedArrayBufferByteLength ??= ObjectGetOwnPropertyDescriptor(\n    // deno-lint-ignore prefer-primordials\n    SharedArrayBuffer.prototype\x2C\n    "byteLength"\x2C\n  ).get;\n\n  return FunctionPrototypeCall(_getSharedArrayBufferByteLength\x2C value);\n}\n\n// The name property is used to allow cross realms to make a determination\n// This is the same as WHATWG's structuredClone algorithm\n// https://github.com/whatwg/html/pull/5150\nfunction isAggregateError(value) {\n  return (\n    isNativeError(value) &&\n    value.name === "AggregateError" &&\n    ArrayIsArray(value.errors)\n  );\n}\n\nconst kObjectType = 0;\nconst kArrayType = 1;\nconst kArrayExtrasType = 2;\n\nconst kMinLineLength = 16;\n\n// Constants to map the iterator state.\nconst kWeak = 0;\nconst kIterator = 1;\nconst kMapEntries = 2;\n\n// Escaped control characters (plus the single quote and the backslash). Use\n// empty strings to fill up unused entries.\n// deno-fmt-ignore\nconst meta = [\n  '\\\\x00'\x2C '\\\\x01'\x2C '\\\\x02'\x2C '\\\\x03'\x2C '\\\\x04'\x2C '\\\\x05'\x2C '\\\\x06'\x2C '\\\\x07'\x2C // x07\n  '\\\\b'\x2C '\\\\t'\x2C '\\\\n'\x2C '\\\\x0B'\x2C '\\\\f'\x2C '\\\\r'\x2C '\\\\x0E'\x2C '\\\\x0F'\x2C           // x0F\n  '\\\\x10'\x2C '\\\\x11'\x2C '\\\\x12'\x2C '\\\\x13'\x2C '\\\\x14'\x2C '\\\\x15'\x2C '\\\\x16'\x2C '\\\\x17'\x2C // x17\n  '\\\\x18'\x2C '\\\\x19'\x2C '\\\\x1A'\x2C '\\\\x1B'\x2C '\\\\x1C'\x2C '\\\\x1D'\x2C '\\\\x1E'\x2C '\\\\x1F'\x2C // x1F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C "\\\\'"\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C      // x2F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x3F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x4F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\\\\\'\x2C ''\x2C ''\x2C ''\x2C     // x5F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x6F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\x7F'\x2C    // x7F\n  '\\\\x80'\x2C '\\\\x81'\x2C '\\\\x82'\x2C '\\\\x83'\x2C '\\\\x84'\x2C '\\\\x85'\x2C '\\\\x86'\x2C '\\\\x87'\x2C // x87\n  '\\\\x88'\x2C '\\\\x89'\x2C '\\\\x8A'\x2C '\\\\x8B'\x2C '\\\\x8C'\x2C '\\\\x8D'\x2C '\\\\x8E'\x2C '\\\\x8F'\x2C // x8F\n  '\\\\x90'\x2C '\\\\x91'\x2C '\\\\x92'\x2C '\\\\x93'\x2C '\\\\x94'\x2C '\\\\x95'\x2C '\\\\x96'\x2C '\\\\x97'\x2C // x97\n  '\\\\x98'\x2C '\\\\x99'\x2C '\\\\x9A'\x2C '\\\\x9B'\x2C '\\\\x9C'\x2C '\\\\x9D'\x2C '\\\\x9E'\x2C '\\\\x9F'\x2C // x9F\n];\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\nconst isUndetectableObject = (v) => typeof v === "undefined" && v !== undefined;\n\nconst strEscapeSequencesReplacer = new SafeRegExp(\n  "[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]"\x2C\n  "g"\x2C\n);\n\nconst keyStrRegExp = new SafeRegExp("^[a-zA-Z_][a-zA-Z_0-9]*$");\nconst numberRegExp = new SafeRegExp("^(0|[1-9][0-9]*)$");\n\n// TODO(wafuwafu13): Figure out\nconst escapeFn = (str) => meta[StringPrototypeCharCodeAt(str\x2C 0)];\n\nfunction stylizeNoColor(str) {\n  return str;\n}\n\n// node custom inspect symbol\nconst nodeCustomInspectSymbol = SymbolFor("nodejs.util.inspect.custom");\n\n// This non-unique symbol is used to support op_crates\x2C ie.\n// in extensions/web we don't want to depend on public\n// Symbol.for("Deno.customInspect") symbol defined in the public API.\n// Internal only\x2C shouldn't be used by users.\nconst privateCustomInspect = SymbolFor("Deno.privateCustomInspect");\n\nfunction getUserOptions(ctx\x2C isCrossContext) {\n  const ret = {\n    stylize: ctx.stylize\x2C\n    showHidden: ctx.showHidden\x2C\n    depth: ctx.depth\x2C\n    colors: ctx.colors\x2C\n    customInspect: ctx.customInspect\x2C\n    showProxy: ctx.showProxy\x2C\n    maxArrayLength: ctx.maxArrayLength\x2C\n    maxStringLength: ctx.maxStringLength\x2C\n    breakLength: ctx.breakLength\x2C\n    compact: ctx.compact\x2C\n    sorted: ctx.sorted\x2C\n    getters: ctx.getters\x2C\n    numericSeparator: ctx.numericSeparator\x2C\n    ...ctx.userOptions\x2C\n  };\n\n  // Typically\x2C the target value will be an instance of `Object`. If that is\n  // *not* the case\x2C the object may come from another vm.Context\x2C and we want\n  // to avoid passing it objects from this Context in that case\x2C so we remove\n  // the prototype from the returned object itself + the `stylize()` function\x2C\n  // and remove all other non-primitives\x2C including non-primitive user options.\n  if (isCrossContext) {\n    ObjectSetPrototypeOf(ret\x2C null);\n    for (const key of new SafeArrayIterator(ObjectKeys(ret))) {\n      if (\n        (typeof ret[key] === "object" || typeof ret[key] === "function") &&\n        ret[key] !== null\n      ) {\n        delete ret[key];\n      }\n    }\n    ret.stylize = ObjectSetPrototypeOf((value\x2C flavour) => {\n      let stylized;\n      try {\n        stylized = `${ctx.stylize(value\x2C flavour)}`;\n      } catch {\n        // Continue regardless of error.\n      }\n\n      if (typeof stylized !== "string") return value;\n      // `stylized` is a string as it should be\x2C which is safe to pass along.\n      return stylized;\n    }\x2C null);\n  }\n\n  return ret;\n}\n\n// Note: using `formatValue` directly requires the indentation level to be\n// corrected by setting `ctx.indentationLvL += diff` and then to decrease the\n// value afterwards again.\nfunction formatValue(\n  ctx\x2C\n  value\x2C\n  recurseTimes\x2C\n  typedArray\x2C\n) {\n  // Primitive types cannot have properties.\n  if (\n    typeof value !== "object" &&\n    typeof value !== "function" &&\n    !isUndetectableObject(value)\n  ) {\n    return formatPrimitive(ctx.stylize\x2C value\x2C ctx);\n  }\n  if (value === null) {\n    return ctx.stylize("null"\x2C "null");\n  }\n\n  // Memorize the context for custom inspection on proxies.\n  const context = value;\n  // Always check for proxies to prevent side effects and to prevent triggering\n  // any proxy handlers.\n  // TODO(wafuwafu13): Set Proxy\n  const proxyDetails = core.getProxyDetails(value);\n  // const proxy = getProxyDetails(value\x2C !!ctx.showProxy);\n  // if (proxy !== undefined) {\n  //   if (ctx.showProxy) {\n  //     return formatProxy(ctx\x2C proxy\x2C recurseTimes);\n  //   }\n  //   value = proxy;\n  // }\n\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it.\n  if (ctx.customInspect) {\n    if (\n      ReflectHas(value\x2C customInspect) &&\n      typeof value[customInspect] === "function"\n    ) {\n      return String(value[customInspect](inspect\x2C ctx));\n    } else if (\n      ReflectHas(value\x2C privateCustomInspect) &&\n      typeof value[privateCustomInspect] === "function"\n    ) {\n      // TODO(nayeemrmn): `inspect` is passed as an argument because custom\n      // inspect implementations in `extensions` need it\x2C but may not have access\n      // to the `Deno` namespace in web workers. Remove when the `Deno`\n      // namespace is always enabled.\n      return String(value[privateCustomInspect](inspect\x2C ctx));\n    } else if (ReflectHas(value\x2C nodeCustomInspectSymbol)) {\n      const maybeCustom = value[nodeCustomInspectSymbol];\n      if (\n        typeof maybeCustom === "function" &&\n        // Filter out the util module\x2C its inspect function is special.\n        maybeCustom !== ctx.inspect &&\n        // Also filter out any prototype objects using the circular check.\n        !(value.constructor && value.constructor.prototype === value)\n      ) {\n        // This makes sure the recurseTimes are reported as before while using\n        // a counter internally.\n        const depth = ctx.depth === null ? null : ctx.depth - recurseTimes;\n        // TODO(@crowlKats): proxy handling\n        const isCrossContext = !ObjectPrototypeIsPrototypeOf(\n          ObjectPrototype\x2C\n          context\x2C\n        );\n        const ret = FunctionPrototypeCall(\n          maybeCustom\x2C\n          context\x2C\n          depth\x2C\n          getUserOptions(ctx\x2C isCrossContext)\x2C\n          ctx.inspect\x2C\n        );\n        // If the custom inspection method returned `this`\x2C don't go into\n        // infinite recursion.\n        if (ret !== context) {\n          if (typeof ret !== "string") {\n            return formatValue(ctx\x2C ret\x2C recurseTimes);\n          }\n          return StringPrototypeReplaceAll(\n            ret\x2C\n            "\\n"\x2C\n            `\\n${StringPrototypeRepeat(" "\x2C ctx.indentationLvl)}`\x2C\n          );\n        }\n      }\n    }\n  }\n\n  // Using an array here is actually better for the average case than using\n  // a Set. `seen` will only check for the depth and will never grow too large.\n  if (ArrayPrototypeIncludes(ctx.seen\x2C value)) {\n    let index = 1;\n    if (ctx.circular === undefined) {\n      ctx.circular = new SafeMap();\n      MapPrototypeSet(ctx.circular\x2C value\x2C index);\n    } else {\n      index = ctx.circular.get(value);\n      if (index === undefined) {\n        index = ctx.circular.size + 1;\n        MapPrototypeSet(ctx.circular\x2C value\x2C index);\n      }\n    }\n    return ctx.stylize(`[Circular *${index}]`\x2C "special");\n  }\n\n  return formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray\x2C proxyDetails);\n}\n\nfunction getClassBase(value\x2C constructor\x2C tag) {\n  const hasName = ObjectHasOwn(value\x2C "name");\n  const name = (hasName && value.name) || "(anonymous)";\n  let base = `class ${name}`;\n  if (constructor !== "Function" && constructor !== null) {\n    base += ` [${constructor}]`;\n  }\n  if (tag !== "" && constructor !== tag) {\n    base += ` [${tag}]`;\n  }\n  if (constructor !== null) {\n    const superName = ObjectGetPrototypeOf(value).name;\n    if (superName) {\n      base += ` extends ${superName}`;\n    }\n  } else {\n    base += " extends [null prototype]";\n  }\n  return `[${base}]`;\n}\n\nconst stripCommentsRegExp = new SafeRegExp(\n  "(\\\\/\\\\/.*?\\\\n)|(\\\\/\\\\*(.|\\\\n)*?\\\\*\\\\/)"\x2C\n  "g"\x2C\n);\nconst classRegExp = new SafeRegExp("^(\\\\s+[^(]*?)\\\\s*{");\n\nfunction getFunctionBase(value\x2C constructor\x2C tag) {\n  const stringified = FunctionPrototypeToString(value);\n  if (\n    StringPrototypeStartsWith(stringified\x2C "class") &&\n    StringPrototypeEndsWith(stringified\x2C "}")\n  ) {\n    const slice = StringPrototypeSlice(stringified\x2C 5\x2C -1);\n    const bracketIndex = StringPrototypeIndexOf(slice\x2C "{");\n    if (\n      bracketIndex !== -1 &&\n      (!StringPrototypeIncludes(\n        StringPrototypeSlice(slice\x2C 0\x2C bracketIndex)\x2C\n        "("\x2C\n      ) ||\n        // Slow path to guarantee that it's indeed a class.\n        RegExpPrototypeExec(\n            classRegExp\x2C\n            RegExpPrototypeSymbolReplace(stripCommentsRegExp\x2C slice)\x2C\n          ) !== null)\n    ) {\n      return getClassBase(value\x2C constructor\x2C tag);\n    }\n  }\n  let type = "Function";\n  if (isGeneratorFunction(value)) {\n    type = `Generator${type}`;\n  }\n  if (isAsyncFunction(value)) {\n    type = `Async${type}`;\n  }\n  let base = `[${type}`;\n  if (constructor === null) {\n    base += " (null prototype)";\n  }\n  if (value.name === "") {\n    base += " (anonymous)";\n  } else {\n    base += `: ${value.name}`;\n  }\n  base += "]";\n  if (constructor !== type && constructor !== null) {\n    base += ` ${constructor}`;\n  }\n  if (tag !== "" && constructor !== tag) {\n    base += ` [${tag}]`;\n  }\n  return base;\n}\n\nfunction formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray\x2C proxyDetails) {\n  let keys;\n  let protoProps;\n  if (ctx.showHidden && (recurseTimes <= ctx.depth || ctx.depth === null)) {\n    protoProps = [];\n  }\n\n  const constructor = getConstructorName(value\x2C ctx\x2C recurseTimes\x2C protoProps);\n  // Reset the variable to check for this later on.\n  if (protoProps !== undefined && protoProps.length === 0) {\n    protoProps = undefined;\n  }\n\n  let tag = value[SymbolToStringTag];\n  // Only list the tag in case it's non-enumerable / not an own property.\n  // Otherwise we'd print this twice.\n  if (\n    typeof tag !== "string"\n    // TODO(wafuwafu13): Implement\n    // (tag !== "" &&\n    //   (ctx.showHidden\n    //     ? Object.prototype.hasOwnProperty\n    //     : Object.prototype.propertyIsEnumerable)(\n    //       value\x2C\n    //       Symbol.toStringTag\x2C\n    //     ))\n  ) {\n    tag = "";\n  }\n  let base = "";\n  let formatter = () => [];\n  let braces;\n  let noIterator = true;\n  let i = 0;\n  const filter = ctx.showHidden ? 0 : 2;\n\n  let extrasType = kObjectType;\n\n  if (proxyDetails !== null && ctx.showProxy) {\n    return `Proxy ` + formatValue(ctx\x2C proxyDetails\x2C recurseTimes);\n  } else {\n    // Iterators and the rest are split to reduce checks.\n    // We have to check all values in case the constructor is set to null.\n    // Otherwise it would not possible to identify all types properly.\n    if (ReflectHas(value\x2C SymbolIterator) || constructor === null) {\n      noIterator = false;\n      if (ArrayIsArray(value)) {\n        // Only set the constructor for non ordinary ("Array [...]") arrays.\n        const prefix = (constructor !== "Array" || tag !== "")\n          ? getPrefix(constructor\x2C tag\x2C "Array"\x2C `(${value.length})`)\n          : "";\n        keys = op_get_non_index_property_names(value\x2C filter);\n        braces = [`${prefix}[`\x2C "]"];\n        if (\n          value.length === 0 && keys.length === 0 && protoProps === undefined\n        ) {\n          return `${braces[0]}]`;\n        }\n        extrasType = kArrayExtrasType;\n        formatter = formatArray;\n      } else if (\n        (proxyDetails === null && isSet(value)) ||\n        (proxyDetails !== null && isSet(proxyDetails[0]))\n      ) {\n        const set = proxyDetails?.[0] ?? value;\n        const size = SetPrototypeGetSize(set);\n        const prefix = getPrefix(constructor\x2C tag\x2C "Set"\x2C `(${size})`);\n        keys = getKeys(set\x2C ctx.showHidden);\n        formatter = constructor !== null\n          ? FunctionPrototypeBind(formatSet\x2C null\x2C set)\n          : FunctionPrototypeBind(formatSet\x2C null\x2C SetPrototypeValues(set));\n        if (size === 0 && keys.length === 0 && protoProps === undefined) {\n          return `${prefix}{}`;\n        }\n        braces = [`${prefix}{`\x2C "}"];\n      } else if (\n        (proxyDetails === null && isMap(value)) ||\n        (proxyDetails !== null && isMap(proxyDetails[0]))\n      ) {\n        const map = proxyDetails?.[0] ?? value;\n        const size = MapPrototypeGetSize(map);\n        const prefix = getPrefix(constructor\x2C tag\x2C "Map"\x2C `(${size})`);\n        keys = getKeys(map\x2C ctx.showHidden);\n        formatter = constructor !== null\n          ? FunctionPrototypeBind(formatMap\x2C null\x2C map)\n          : FunctionPrototypeBind(formatMap\x2C null\x2C MapPrototypeEntries(map));\n        if (size === 0 && keys.length === 0 && protoProps === undefined) {\n          return `${prefix}{}`;\n        }\n        braces = [`${prefix}{`\x2C "}"];\n      } else if (\n        (proxyDetails === null && isTypedArray(value)) ||\n        (proxyDetails !== null && isTypedArray(proxyDetails[0]))\n      ) {\n        const typedArray = proxyDetails?.[0] ?? value;\n        keys = op_get_non_index_property_names(typedArray\x2C filter);\n        const bound = typedArray;\n        const fallback = "";\n        if (constructor === null) {\n          // TODO(wafuwafu13): Implement\n          // fallback = TypedArrayPrototypeGetSymbolToStringTag(value);\n          // // Reconstruct the array information.\n          // bound = new primordials[fallback](value);\n        }\n        const size = TypedArrayPrototypeGetLength(typedArray);\n        const prefix = getPrefix(constructor\x2C tag\x2C fallback\x2C `(${size})`);\n        braces = [`${prefix}[`\x2C "]"];\n        if (typedArray.length === 0 && keys.length === 0 && !ctx.showHidden) {\n          return `${braces[0]}]`;\n        }\n        // Special handle the value. The original value is required below. The\n        // bound function is required to reconstruct missing information.\n        formatter = FunctionPrototypeBind(formatTypedArray\x2C null\x2C bound\x2C size);\n        extrasType = kArrayExtrasType;\n      } else if (\n        (proxyDetails === null && isMapIterator(value)) ||\n        (proxyDetails !== null && isMapIterator(proxyDetails[0]))\n      ) {\n        const mapIterator = proxyDetails?.[0] ?? value;\n        keys = getKeys(mapIterator\x2C ctx.showHidden);\n        braces = getIteratorBraces("Map"\x2C tag);\n        // Add braces to the formatter parameters.\n        formatter = FunctionPrototypeBind(formatIterator\x2C null\x2C braces);\n      } else if (\n        (proxyDetails === null && isSetIterator(value)) ||\n        (proxyDetails !== null && isSetIterator(proxyDetails[0]))\n      ) {\n        const setIterator = proxyDetails?.[0] ?? value;\n        keys = getKeys(setIterator\x2C ctx.showHidden);\n        braces = getIteratorBraces("Set"\x2C tag);\n        // Add braces to the formatter parameters.\n        formatter = FunctionPrototypeBind(formatIterator\x2C null\x2C braces);\n      } else {\n        noIterator = true;\n      }\n    }\n    if (noIterator) {\n      keys = getKeys(value\x2C ctx.showHidden);\n      braces = ["{"\x2C "}"];\n      if (constructor === "Object") {\n        if (isArgumentsObject(value)) {\n          braces[0] = "[Arguments] {";\n        } else if (tag !== "") {\n          braces[0] = `${getPrefix(constructor\x2C tag\x2C "Object")}{`;\n        }\n        if (keys.length === 0 && protoProps === undefined) {\n          return `${braces[0]}}`;\n        }\n      } else if (typeof value === "function") {\n        base = getFunctionBase(value\x2C constructor\x2C tag);\n        if (keys.length === 0 && protoProps === undefined) {\n          return ctx.stylize(base\x2C "special");\n        }\n      } else if (\n        (proxyDetails === null && isRegExp(value)) ||\n        (proxyDetails !== null && isRegExp(proxyDetails[0]))\n      ) {\n        const regExp = proxyDetails?.[0] ?? value;\n        // Make RegExps say that they are RegExps\n        base = RegExpPrototypeToString(\n          constructor !== null ? regExp : new SafeRegExp(regExp)\x2C\n        );\n        const prefix = getPrefix(constructor\x2C tag\x2C "RegExp");\n        if (prefix !== "RegExp ") {\n          base = `${prefix}${base}`;\n        }\n        if (\n          (keys.length === 0 && protoProps === undefined) ||\n          (recurseTimes > ctx.depth && ctx.depth !== null)\n        ) {\n          return ctx.stylize(base\x2C "regexp");\n        }\n      } else if (\n        (proxyDetails === null && isDate(value)) ||\n        (proxyDetails !== null && isDate(proxyDetails[0]))\n      ) {\n        const date = proxyDetails?.[0] ?? value;\n        if (NumberIsNaN(DatePrototypeGetTime(date))) {\n          return ctx.stylize("Invalid Date"\x2C "date");\n        } else {\n          base = DatePrototypeToISOString(date);\n          if (keys.length === 0 && protoProps === undefined) {\n            return ctx.stylize(base\x2C "date");\n          }\n        }\n      } else if (\n        proxyDetails === null &&\n        typeof globalThis.Temporal !== "undefined" &&\n        (\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.Instant.prototype\x2C\n            value\x2C\n          ) ||\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.ZonedDateTime.prototype\x2C\n            value\x2C\n          ) ||\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.PlainDate.prototype\x2C\n            value\x2C\n          ) ||\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.PlainTime.prototype\x2C\n            value\x2C\n          ) ||\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.PlainDateTime.prototype\x2C\n            value\x2C\n          ) ||\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.PlainYearMonth.prototype\x2C\n            value\x2C\n          ) ||\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.PlainMonthDay.prototype\x2C\n            value\x2C\n          ) ||\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.Duration.prototype\x2C\n            value\x2C\n          ) ||\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.TimeZone.prototype\x2C\n            value\x2C\n          ) ||\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.Calendar.prototype\x2C\n            value\x2C\n          )\n        )\n      ) {\n        // Temporal is not available in primordials yet\n        // deno-lint-ignore prefer-primordials\n        return ctx.stylize(value.toString()\x2C "temporal");\n      } else if (\n        (proxyDetails === null &&\n          (isNativeError(value) ||\n            ObjectPrototypeIsPrototypeOf(ErrorPrototype\x2C value))) ||\n        (proxyDetails !== null &&\n          (isNativeError(proxyDetails[0]) ||\n            ObjectPrototypeIsPrototypeOf(ErrorPrototype\x2C proxyDetails[0])))\n      ) {\n        const error = proxyDetails?.[0] ?? value;\n        base = inspectError(error\x2C ctx);\n        if (keys.length === 0 && protoProps === undefined) {\n          return base;\n        }\n      } else if (isAnyArrayBuffer(value)) {\n        // Fast path for ArrayBuffer and SharedArrayBuffer.\n        // Can't do the same for DataView because it has a non-primitive\n        // .buffer property that we need to recurse for.\n        const arrayType = isArrayBuffer(value)\n          ? "ArrayBuffer"\n          : "SharedArrayBuffer";\n\n        const prefix = getPrefix(constructor\x2C tag\x2C arrayType);\n        if (typedArray === undefined) {\n          formatter = formatArrayBuffer;\n        } else if (keys.length === 0 && protoProps === undefined) {\n          return prefix +\n            `{ byteLength: ${\n              formatNumber(ctx.stylize\x2C TypedArrayPrototypeGetByteLength(value))\n            } }`;\n        }\n        braces[0] = `${prefix}{`;\n        ArrayPrototypeUnshift(keys\x2C "byteLength");\n      } else if (isDataView(value)) {\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C "DataView")}{`;\n        // .buffer goes last\x2C it's not a primitive like the others.\n        ArrayPrototypeUnshift(keys\x2C "byteLength"\x2C "byteOffset"\x2C "buffer");\n      } else if (isPromise(value)) {\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C "Promise")}{`;\n        formatter = formatPromise;\n      } else if (isWeakSet(value)) {\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C "WeakSet")}{`;\n        formatter = ctx.showHidden ? formatWeakSet : formatWeakCollection;\n      } else if (isWeakMap(value)) {\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C "WeakMap")}{`;\n        formatter = ctx.showHidden ? formatWeakMap : formatWeakCollection;\n      } else if (isModuleNamespaceObject(value)) {\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C "Module")}{`;\n        // Special handle keys for namespace objects.\n        formatter = FunctionPrototypeBind(formatNamespaceObject\x2C null\x2C keys);\n      } else if (isBoxedPrimitive(value)) {\n        base = getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag);\n        if (keys.length === 0 && protoProps === undefined) {\n          return base;\n        }\n      } else {\n        if (keys.length === 0 && protoProps === undefined) {\n          // TODO(wafuwafu13): Implement\n          // if (isExternal(value)) {\n          //   const address = getExternalValue(value).toString(16);\n          //   return ctx.stylize(`[External: ${address}]`\x2C 'special');\n          // }\n          return `${getCtxStyle(value\x2C constructor\x2C tag)}{}`;\n        }\n        braces[0] = `${getCtxStyle(value\x2C constructor\x2C tag)}{`;\n      }\n    }\n  }\n\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\n    let constructorName = StringPrototypeSlice(\n      getCtxStyle(value\x2C constructor\x2C tag)\x2C\n      0\x2C\n      -1\x2C\n    );\n    if (constructor !== null) {\n      constructorName = `[${constructorName}]`;\n    }\n    return ctx.stylize(constructorName\x2C "special");\n  }\n  recurseTimes += 1;\n\n  ArrayPrototypePush(ctx.seen\x2C value);\n  ctx.currentDepth = recurseTimes;\n  let output;\n  try {\n    output = formatter(ctx\x2C value\x2C recurseTimes);\n    for (i = 0; i < keys.length; i++) {\n      ArrayPrototypePush(\n        output\x2C\n        formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C extrasType)\x2C\n      );\n    }\n    if (protoProps !== undefined) {\n      ArrayPrototypePushApply(output\x2C protoProps);\n    }\n  } catch (error) {\n    // TODO(wafuwafu13): Implement stack overflow check\n    return ctx.stylize(\n      `[Internal Formatting Error] ${error.stack}`\x2C\n      "internalError"\x2C\n    );\n  }\n\n  if (ctx.circular !== undefined) {\n    const index = ctx.circular.get(value);\n    if (index !== undefined) {\n      const reference = ctx.stylize(`<ref *${index}>`\x2C "special");\n      // Add reference always to the very beginning of the output.\n      if (ctx.compact !== true) {\n        base = base === "" ? reference : `${reference} ${base}`;\n      } else {\n        braces[0] = `${reference} ${braces[0]}`;\n      }\n    }\n  }\n  ArrayPrototypePop(ctx.seen);\n\n  if (ctx.sorted) {\n    const comparator = ctx.sorted === true ? undefined : ctx.sorted;\n    if (extrasType === kObjectType) {\n      output = ArrayPrototypeSort(output\x2C comparator);\n    } else if (keys.length > 1) {\n      const sorted = ArrayPrototypeSort(\n        ArrayPrototypeSlice(output\x2C output.length - keys.length)\x2C\n        comparator\x2C\n      );\n      ArrayPrototypeSplice(\n        output\x2C\n        output.length - keys.length\x2C\n        keys.length\x2C\n        ...new SafeArrayIterator(sorted)\x2C\n      );\n    }\n  }\n\n  const res = reduceToSingleString(\n    ctx\x2C\n    output\x2C\n    base\x2C\n    braces\x2C\n    extrasType\x2C\n    recurseTimes\x2C\n    value\x2C\n  );\n  const budget = ctx.budget[ctx.indentationLvl] || 0;\n  const newLength = budget + res.length;\n  ctx.budget[ctx.indentationLvl] = newLength;\n  // If any indentationLvl exceeds this limit\x2C limit further inspecting to the\n  // minimum. Otherwise the recursive algorithm might continue inspecting the\n  // object even though the maximum string size (~2 ** 28 on 32 bit systems and\n  // ~2 ** 30 on 64 bit systems) exceeded. The actual output is not limited at\n  // exactly 2 ** 27 but a bit higher. This depends on the object shape.\n  // This limit also makes sure that huge objects don't block the event loop\n  // significantly.\n  if (newLength > 2 ** 27) {\n    ctx.depth = -1;\n  }\n  return res;\n}\n\nconst builtInObjectsRegExp = new SafeRegExp("^[A-Z][a-zA-Z0-9]+$");\nconst builtInObjects = new SafeSet(\n  ArrayPrototypeFilter(\n    ObjectGetOwnPropertyNames(globalThis)\x2C\n    (e) => RegExpPrototypeTest(builtInObjectsRegExp\x2C e)\x2C\n  )\x2C\n);\n\nfunction addPrototypeProperties(\n  ctx\x2C\n  main\x2C\n  obj\x2C\n  recurseTimes\x2C\n  output\x2C\n) {\n  let depth = 0;\n  let keys;\n  let keySet;\n  do {\n    if (depth !== 0 || main === obj) {\n      obj = ObjectGetPrototypeOf(obj);\n      // Stop as soon as a null prototype is encountered.\n      if (obj === null) {\n        return;\n      }\n      // Stop as soon as a built-in object type is detected.\n      const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C "constructor");\n      if (\n        descriptor !== undefined &&\n        typeof descriptor.value === "function" &&\n        SetPrototypeHas(builtInObjects\x2C descriptor.value.name)\n      ) {\n        return;\n      }\n    }\n\n    if (depth === 0) {\n      keySet = new SafeSet();\n    } else {\n      ArrayPrototypeForEach(keys\x2C (key) => SetPrototypeAdd(keySet\x2C key));\n    }\n    // Get all own property names and symbols.\n    keys = ReflectOwnKeys(obj);\n    ArrayPrototypePush(ctx.seen\x2C main);\n    for (const key of new SafeArrayIterator(keys)) {\n      // Ignore the `constructor` property and keys that exist on layers above.\n      if (\n        key === "constructor" ||\n        ObjectHasOwn(main\x2C key) ||\n        (depth !== 0 && SetPrototypeHas(keySet\x2C key))\n      ) {\n        continue;\n      }\n      const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\n      if (typeof desc.value === "function") {\n        continue;\n      }\n      const value = formatProperty(\n        ctx\x2C\n        obj\x2C\n        recurseTimes\x2C\n        key\x2C\n        kObjectType\x2C\n        desc\x2C\n        main\x2C\n      );\n      if (ctx.colors) {\n        // Faint!\n        ArrayPrototypePush(output\x2C `\\u001b[2m${value}\\u001b[22m`);\n      } else {\n        ArrayPrototypePush(output\x2C value);\n      }\n    }\n    ArrayPrototypePop(ctx.seen);\n    // Limit the inspection to up to three prototype layers. Using `recurseTimes`\n    // is not a good choice here\x2C because it's as if the properties are declared\n    // on the current object from the users perspective.\n  } while (++depth !== 3);\n}\n\nfunction isInstanceof(proto\x2C object) {\n  try {\n    return ObjectPrototypeIsPrototypeOf(proto\x2C object);\n  } catch {\n    return false;\n  }\n}\n\nfunction getConstructorName(obj\x2C ctx\x2C recurseTimes\x2C protoProps) {\n  let firstProto;\n  const tmp = obj;\n  while (obj || isUndetectableObject(obj)) {\n    let descriptor;\n    try {\n      descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C "constructor");\n    } catch {\n      /* this could fail */\n    }\n    if (\n      descriptor !== undefined &&\n      typeof descriptor.value === "function" &&\n      descriptor.value.name !== "" &&\n      isInstanceof(descriptor.value.prototype\x2C tmp)\n    ) {\n      if (\n        protoProps !== undefined &&\n        (firstProto !== obj ||\n          !SetPrototypeHas(builtInObjects\x2C descriptor.value.name))\n      ) {\n        addPrototypeProperties(\n          ctx\x2C\n          tmp\x2C\n          firstProto || tmp\x2C\n          recurseTimes\x2C\n          protoProps\x2C\n        );\n      }\n      return String(descriptor.value.name);\n    }\n\n    obj = ObjectGetPrototypeOf(obj);\n    if (firstProto === undefined) {\n      firstProto = obj;\n    }\n  }\n\n  if (firstProto === null) {\n    return null;\n  }\n\n  const res = op_get_constructor_name(tmp);\n\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\n    return `${res} <Complex prototype>`;\n  }\n\n  const protoConstr = getConstructorName(\n    firstProto\x2C\n    ctx\x2C\n    recurseTimes + 1\x2C\n    protoProps\x2C\n  );\n\n  if (protoConstr === null) {\n    return `${res} <${\n      inspect(firstProto\x2C {\n        ...ctx\x2C\n        customInspect: false\x2C\n        depth: -1\x2C\n      })\n    }>`;\n  }\n\n  return `${res} <${protoConstr}>`;\n}\n\nconst formatPrimitiveRegExp = new SafeRegExp("(?<=\\n)");\nfunction formatPrimitive(fn\x2C value\x2C ctx) {\n  if (typeof value === "string") {\n    let trailer = "";\n    if (value.length > ctx.maxStringLength) {\n      const remaining = value.length - ctx.maxStringLength;\n      value = StringPrototypeSlice(value\x2C 0\x2C ctx.maxStringLength);\n      trailer = `... ${remaining} more character${remaining > 1 ? "s" : ""}`;\n    }\n    if (\n      ctx.compact !== true &&\n      // TODO(BridgeAR): Add unicode support. Use the readline getStringWidth\n      // function.\n      value.length > kMinLineLength &&\n      value.length > ctx.breakLength - ctx.indentationLvl - 4\n    ) {\n      return ArrayPrototypeJoin(\n        ArrayPrototypeMap(\n          StringPrototypeSplit(value\x2C formatPrimitiveRegExp)\x2C\n          (line) => fn(quoteString(line\x2C ctx)\x2C "string")\x2C\n        )\x2C\n        ` +\\n${StringPrototypeRepeat(" "\x2C ctx.indentationLvl + 2)}`\x2C\n      ) + trailer;\n    }\n    return fn(quoteString(value\x2C ctx)\x2C "string") + trailer;\n  }\n  if (typeof value === "number") {\n    return formatNumber(fn\x2C value);\n  }\n  if (typeof value === "bigint") {\n    return formatBigInt(fn\x2C value);\n  }\n  if (typeof value === "boolean") {\n    return fn(`${value}`\x2C "boolean");\n  }\n  if (typeof value === "undefined") {\n    return fn("undefined"\x2C "undefined");\n  }\n  // es6 symbol primitive\n  return fn(maybeQuoteSymbol(value\x2C ctx)\x2C "symbol");\n}\n\nfunction getPrefix(constructor\x2C tag\x2C fallback\x2C size = "") {\n  if (constructor === null) {\n    if (tag !== "" && fallback !== tag) {\n      return `[${fallback}${size}: null prototype] [${tag}] `;\n    }\n    return `[${fallback}${size}: null prototype] `;\n  }\n\n  if (tag !== "" && constructor !== tag) {\n    return `${constructor}${size} [${tag}] `;\n  }\n  return `${constructor}${size} `;\n}\n\nfunction formatArray(ctx\x2C value\x2C recurseTimes) {\n  const valLen = value.length;\n  const len = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C valLen);\n\n  const remaining = valLen - len;\n  const output = [];\n  for (let i = 0; i < len; i++) {\n    // Special handle sparse arrays.\n    if (!ObjectHasOwn(value\x2C i)) {\n      return formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C len\x2C output\x2C i);\n    }\n    ArrayPrototypePush(\n      output\x2C\n      formatProperty(ctx\x2C value\x2C recurseTimes\x2C i\x2C kArrayType)\x2C\n    );\n  }\n  if (remaining > 0) {\n    ArrayPrototypePush(\n      output\x2C\n      `... ${remaining} more item${remaining > 1 ? "s" : ""}`\x2C\n    );\n  }\n  return output;\n}\n\nfunction getCtxStyle(value\x2C constructor\x2C tag) {\n  let fallback = "";\n  if (constructor === null) {\n    fallback = op_get_constructor_name(value);\n    if (fallback === tag) {\n      fallback = "Object";\n    }\n  }\n  return getPrefix(constructor\x2C tag\x2C fallback);\n}\n\n// Look up the keys of the object.\nfunction getKeys(value\x2C showHidden) {\n  let keys;\n  const symbols = ObjectGetOwnPropertySymbols(value);\n  if (showHidden) {\n    keys = ObjectGetOwnPropertyNames(value);\n    if (symbols.length !== 0) {\n      ArrayPrototypePushApply(keys\x2C symbols);\n    }\n  } else {\n    // This might throw if `value` is a Module Namespace Object from an\n    // unevaluated module\x2C but we don't want to perform the actual type\n    // check because it's expensive.\n    // TODO(devsnek): track https://github.com/tc39/ecma262/issues/1209\n    // and modify this logic as needed.\n    try {\n      keys = ObjectKeys(value);\n    } catch (err) {\n      assert(\n        isNativeError(err) && err.name === "ReferenceError" &&\n          isModuleNamespaceObject(value)\x2C\n      );\n      keys = ObjectGetOwnPropertyNames(value);\n    }\n    if (symbols.length !== 0) {\n      const filter = (key) => ObjectPrototypePropertyIsEnumerable(value\x2C key);\n      ArrayPrototypePushApply(keys\x2C ArrayPrototypeFilter(symbols\x2C filter));\n    }\n  }\n  return keys;\n}\n\nfunction formatSet(value\x2C ctx\x2C _ignored\x2C recurseTimes) {\n  ctx.indentationLvl += 2;\n\n  const values = [...new SafeSetIterator(value)];\n  const valLen = SetPrototypeGetSize(value);\n  const len = MathMin(MathMax(0\x2C ctx.iterableLimit)\x2C valLen);\n\n  const remaining = valLen - len;\n  const output = [];\n  for (let i = 0; i < len; i++) {\n    ArrayPrototypePush(output\x2C formatValue(ctx\x2C values[i]\x2C recurseTimes));\n  }\n  if (remaining > 0) {\n    ArrayPrototypePush(\n      output\x2C\n      `... ${remaining} more item${remaining > 1 ? "s" : ""}`\x2C\n    );\n  }\n\n  ctx.indentationLvl -= 2;\n  return output;\n}\n\nfunction formatMap(value\x2C ctx\x2C _ignored\x2C recurseTimes) {\n  ctx.indentationLvl += 2;\n\n  const values = [...new SafeMapIterator(value)];\n  const valLen = MapPrototypeGetSize(value);\n  const len = MathMin(MathMax(0\x2C ctx.iterableLimit)\x2C valLen);\n\n  const remaining = valLen - len;\n  const output = [];\n  for (let i = 0; i < len; i++) {\n    ArrayPrototypePush(\n      output\x2C\n      `${formatValue(ctx\x2C values[i][0]\x2C recurseTimes)} => ${\n        formatValue(ctx\x2C values[i][1]\x2C recurseTimes)\n      }`\x2C\n    );\n  }\n  if (remaining > 0) {\n    ArrayPrototypePush(\n      output\x2C\n      `... ${remaining} more item${remaining > 1 ? "s" : ""}`\x2C\n    );\n  }\n\n  ctx.indentationLvl -= 2;\n  return output;\n}\n\nfunction formatTypedArray(\n  value\x2C\n  length\x2C\n  ctx\x2C\n  _ignored\x2C\n  recurseTimes\x2C\n) {\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\n  const remaining = value.length - maxLength;\n  const output = [];\n  const elementFormatter = value.length > 0 && typeof value[0] === "number"\n    ? formatNumber\n    : formatBigInt;\n  for (let i = 0; i < maxLength; ++i) {\n    output[i] = elementFormatter(ctx.stylize\x2C value[i]);\n  }\n  if (remaining > 0) {\n    output[maxLength] = `... ${remaining} more item${remaining > 1 ? "s" : ""}`;\n  }\n  if (ctx.showHidden) {\n    // .buffer goes last\x2C it's not a primitive like the others.\n    // All besides `BYTES_PER_ELEMENT` are actually getters.\n    ctx.indentationLvl += 2;\n    for (\n      const key of new SafeArrayIterator([\n        "BYTES_PER_ELEMENT"\x2C\n        "length"\x2C\n        "byteLength"\x2C\n        "byteOffset"\x2C\n        "buffer"\x2C\n      ])\n    ) {\n      const str = formatValue(ctx\x2C value[key]\x2C recurseTimes\x2C true);\n      ArrayPrototypePush(output\x2C `[${key}]: ${str}`);\n    }\n    ctx.indentationLvl -= 2;\n  }\n  return output;\n}\n\nfunction getIteratorBraces(type\x2C tag) {\n  if (tag !== `${type} Iterator`) {\n    if (tag !== "") {\n      tag += "] [";\n    }\n    tag += `${type} Iterator`;\n  }\n  return [`[${tag}] {`\x2C "}"];\n}\n\nconst iteratorRegExp = new SafeRegExp(" Iterator] {$");\nfunction formatIterator(braces\x2C ctx\x2C value\x2C recurseTimes) {\n  const { 0: entries\x2C 1: isKeyValue } = op_preview_entries(value\x2C true);\n  if (isKeyValue) {\n    // Mark entry iterators as such.\n    braces[0] = StringPrototypeReplace(\n      braces[0]\x2C\n      iteratorRegExp\x2C\n      " Entries] {"\x2C\n    );\n    return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kMapEntries);\n  }\n\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kIterator);\n}\n\nfunction handleCircular(value\x2C ctx) {\n  let index = 1;\n  if (ctx.circular === undefined) {\n    ctx.circular = new SafeMap();\n    MapPrototypeSet(ctx.circular\x2C value\x2C index);\n  } else {\n    index = MapPrototypeGet(ctx.circular\x2C value);\n    if (index === undefined) {\n      index = MapPrototypeGetSize(ctx.circular) + 1;\n      MapPrototypeSet(ctx.circular\x2C value\x2C index);\n    }\n  }\n  // Circular string is cyan\n  return ctx.stylize(`[Circular *${index}]`\x2C "special");\n}\n\nconst AGGREGATE_ERROR_HAS_AT_PATTERN = new SafeRegExp(/\\s+at/);\nconst AGGREGATE_ERROR_NOT_EMPTY_LINE_PATTERN = new SafeRegExp(/^(?!\\s*$)/gm);\n\nfunction inspectError(value\x2C ctx) {\n  const causes = [value];\n\n  let err = value;\n  while (err.cause) {\n    if (ArrayPrototypeIncludes(causes\x2C err.cause)) {\n      ArrayPrototypePush(causes\x2C handleCircular(err.cause\x2C ctx));\n      break;\n    } else {\n      ArrayPrototypePush(causes\x2C err.cause);\n      err = err.cause;\n    }\n  }\n\n  const refMap = new SafeMap();\n  for (let i = 0; i < causes.length; ++i) {\n    const cause = causes[i];\n    if (ctx.circular !== undefined) {\n      const index = MapPrototypeGet(ctx.circular\x2C cause);\n      if (index !== undefined) {\n        MapPrototypeSet(\n          refMap\x2C\n          cause\x2C\n          ctx.stylize(`<ref *${index}> `\x2C "special")\x2C\n        );\n      }\n    }\n  }\n  ArrayPrototypeShift(causes);\n\n  let finalMessage = MapPrototypeGet(refMap\x2C value) ?? "";\n\n  if (isAggregateError(value)) {\n    const stackLines = StringPrototypeSplit(value.stack\x2C "\\n");\n    while (true) {\n      const line = ArrayPrototypeShift(stackLines);\n      if (RegExpPrototypeTest(AGGREGATE_ERROR_HAS_AT_PATTERN\x2C line)) {\n        ArrayPrototypeUnshift(stackLines\x2C line);\n        break;\n      } else if (typeof line === "undefined") {\n        break;\n      }\n\n      finalMessage += line;\n      finalMessage += "\\n";\n    }\n    const aggregateMessage = ArrayPrototypeJoin(\n      ArrayPrototypeMap(\n        value.errors\x2C\n        (error) =>\n          StringPrototypeReplace(\n            inspectArgs([error])\x2C\n            AGGREGATE_ERROR_NOT_EMPTY_LINE_PATTERN\x2C\n            StringPrototypeRepeat(" "\x2C 4)\x2C\n          )\x2C\n      )\x2C\n      "\\n"\x2C\n    );\n    finalMessage += aggregateMessage;\n    finalMessage += "\\n";\n    finalMessage += ArrayPrototypeJoin(stackLines\x2C "\\n");\n  } else {\n    const stack = value.stack;\n    if (stack?.includes("\\n    at")) {\n      finalMessage += stack;\n    } else {\n      finalMessage += `[${stack || ErrorPrototypeToString(value)}]`;\n    }\n  }\n  finalMessage += ArrayPrototypeJoin(\n    ArrayPrototypeMap(\n      causes\x2C\n      (cause) =>\n        "\\nCaused by " + (MapPrototypeGet(refMap\x2C cause) ?? "") +\n        (cause?.stack ?? cause)\x2C\n    )\x2C\n    ""\x2C\n  );\n\n  return finalMessage;\n}\n\nconst hexSliceLookupTable = function () {\n  const alphabet = "0123456789abcdef";\n  const table = [];\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16;\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n  }\n  return table;\n}();\n\nfunction hexSlice(buf\x2C start\x2C end) {\n  const len = TypedArrayPrototypeGetLength(buf);\n  if (!start || start < 0) {\n    start = 0;\n  }\n  if (!end || end < 0 || end > len) {\n    end = len;\n  }\n  let out = "";\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]];\n  }\n  return out;\n}\n\nconst arrayBufferRegExp = new SafeRegExp("(.{2})"\x2C "g");\nfunction formatArrayBuffer(ctx\x2C value) {\n  let valLen;\n  try {\n    valLen = ArrayBufferPrototypeGetByteLength(value);\n  } catch {\n    valLen = getSharedArrayBufferByteLength(value);\n  }\n  const len = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C valLen);\n  let buffer;\n  try {\n    buffer = new Uint8Array(value\x2C 0\x2C len);\n  } catch {\n    return [ctx.stylize("(detached)"\x2C "special")];\n  }\n  let str = StringPrototypeTrim(\n    StringPrototypeReplace(hexSlice(buffer)\x2C arrayBufferRegExp\x2C "$1 ")\x2C\n  );\n\n  const remaining = valLen - len;\n  if (remaining > 0) {\n    str += ` ... ${remaining} more byte${remaining > 1 ? "s" : ""}`;\n  }\n  return [`${ctx.stylize("[Uint8Contents]"\x2C "special")}: <${str}>`];\n}\n\nfunction formatNumber(fn\x2C value) {\n  // Format -0 as '-0'. Checking `value === -0` won't distinguish 0 from -0.\n  return fn(ObjectIs(value\x2C -0) ? "-0" : `${value}`\x2C "number");\n}\n\nconst PromiseState = {\n  Pending: 0\x2C\n  Fulfilled: 1\x2C\n  Rejected: 2\x2C\n};\n\nfunction formatPromise(ctx\x2C value\x2C recurseTimes) {\n  let output;\n  const { 0: state\x2C 1: result } = core.getPromiseDetails(value);\n  if (state === PromiseState.Pending) {\n    output = [ctx.stylize("<pending>"\x2C "special")];\n  } else {\n    ctx.indentationLvl += 2;\n    const str = formatValue(ctx\x2C result\x2C recurseTimes);\n    ctx.indentationLvl -= 2;\n    output = [\n      state === PromiseState.Rejected\n        ? `${ctx.stylize("<rejected>"\x2C "special")} ${str}`\n        : str\x2C\n    ];\n  }\n  return output;\n}\n\nfunction formatWeakCollection(ctx) {\n  return [ctx.stylize("<items unknown>"\x2C "special")];\n}\n\nfunction formatWeakSet(ctx\x2C value\x2C recurseTimes) {\n  const entries = op_preview_entries(value\x2C false);\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\n}\n\nfunction formatWeakMap(ctx\x2C value\x2C recurseTimes) {\n  const entries = op_preview_entries(value\x2C false);\n  return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\n}\n\nfunction formatProperty(\n  ctx\x2C\n  value\x2C\n  recurseTimes\x2C\n  key\x2C\n  type\x2C\n  desc\x2C\n  original = value\x2C\n) {\n  let name\x2C str;\n  let extra = " ";\n  desc = desc || ObjectGetOwnPropertyDescriptor(value\x2C key) ||\n    { value: value[key]\x2C enumerable: true };\n  if (desc.value !== undefined) {\n    const diff = (ctx.compact !== true || type !== kObjectType) ? 2 : 3;\n    ctx.indentationLvl += diff;\n    str = formatValue(ctx\x2C desc.value\x2C recurseTimes);\n    if (diff === 3 && ctx.breakLength < getStringWidth(str\x2C ctx.colors)) {\n      extra = `\\n${StringPrototypeRepeat(" "\x2C ctx.indentationLvl)}`;\n    }\n    ctx.indentationLvl -= diff;\n  } else if (desc.get !== undefined) {\n    const label = desc.set !== undefined ? "Getter/Setter" : "Getter";\n    const s = ctx.stylize;\n    const sp = "special";\n    if (\n      ctx.getters && (ctx.getters === true ||\n        (ctx.getters === "get" && desc.set === undefined) ||\n        (ctx.getters === "set" && desc.set !== undefined))\n    ) {\n      try {\n        const tmp = FunctionPrototypeCall(desc.get\x2C original);\n        ctx.indentationLvl += 2;\n        if (tmp === null) {\n          str = `${s(`[${label}:`\x2C sp)} ${s("null"\x2C "null")}${s("]"\x2C sp)}`;\n        } else if (typeof tmp === "object") {\n          str = `${s(`[${label}]`\x2C sp)} ${formatValue(ctx\x2C tmp\x2C recurseTimes)}`;\n        } else {\n          const primitive = formatPrimitive(s\x2C tmp\x2C ctx);\n          str = `${s(`[${label}:`\x2C sp)} ${primitive}${s("]"\x2C sp)}`;\n        }\n        ctx.indentationLvl -= 2;\n      } catch (err) {\n        const message = `<Inspection threw (${err.message})>`;\n        str = `${s(`[${label}:`\x2C sp)} ${message}${s("]"\x2C sp)}`;\n      }\n    } else {\n      str = ctx.stylize(`[${label}]`\x2C sp);\n    }\n  } else if (desc.set !== undefined) {\n    str = ctx.stylize("[Setter]"\x2C "special");\n  } else {\n    str = ctx.stylize("undefined"\x2C "undefined");\n  }\n  if (type === kArrayType) {\n    return str;\n  }\n  if (typeof key === "symbol") {\n    name = `[${ctx.stylize(maybeQuoteSymbol(key\x2C ctx)\x2C "symbol")}]`;\n  } else if (key === "__proto__") {\n    name = "['__proto__']";\n  } else if (desc.enumerable === false) {\n    const tmp = StringPrototypeReplace(\n      key\x2C\n      strEscapeSequencesReplacer\x2C\n      escapeFn\x2C\n    );\n\n    name = `[${tmp}]`;\n  } else if (keyStrRegExp.test(key)) {\n    name = ctx.stylize(key\x2C "name");\n  } else {\n    name = ctx.stylize(quoteString(key\x2C ctx)\x2C "string");\n  }\n  return `${name}:${extra}${str}`;\n}\n\nconst colorRegExp = new SafeRegExp("\\u001b\\\\[\\\\d\\\\d?m"\x2C "g");\nfunction removeColors(str) {\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C "");\n}\n\nfunction isBelowBreakLength(ctx\x2C output\x2C start\x2C base) {\n  // Each entry is separated by at least a comma. Thus\x2C we start with a total\n  // length of at least `output.length`. In addition\x2C some cases have a\n  // whitespace in-between each other that is added to the total as well.\n  // TODO(BridgeAR): Add unicode support. Use the readline getStringWidth\n  // function. Check the performance overhead and make it an opt-in in case it's\n  // significant.\n  let totalLength = output.length + start;\n  if (totalLength + output.length > ctx.breakLength) {\n    return false;\n  }\n  for (let i = 0; i < output.length; i++) {\n    if (ctx.colors) {\n      totalLength += removeColors(output[i]).length;\n    } else {\n      totalLength += output[i].length;\n    }\n    if (totalLength > ctx.breakLength) {\n      return false;\n    }\n  }\n  // Do not line up properties on the same line if `base` contains line breaks.\n  return base === "" || !StringPrototypeIncludes(base\x2C "\\n");\n}\n\nfunction formatBigInt(fn\x2C value) {\n  return fn(`${value}n`\x2C "bigint");\n}\n\nfunction formatNamespaceObject(\n  keys\x2C\n  ctx\x2C\n  value\x2C\n  recurseTimes\x2C\n) {\n  const output = [];\n  for (let i = 0; i < keys.length; i++) {\n    try {\n      output[i] = formatProperty(\n        ctx\x2C\n        value\x2C\n        recurseTimes\x2C\n        keys[i]\x2C\n        kObjectType\x2C\n      );\n    } catch (_err) {\n      // TODO(wafuwfu13): Implement\n      // assert(isNativeError(err) && err.name === 'ReferenceError');\n      // Use the existing functionality. This makes sure the indentation and\n      // line breaks are always correct. Otherwise it is very difficult to keep\n      // this aligned\x2C even though this is a hacky way of dealing with this.\n      const tmp = { [keys[i]]: "" };\n      output[i] = formatProperty(ctx\x2C tmp\x2C recurseTimes\x2C keys[i]\x2C kObjectType);\n      const pos = StringPrototypeLastIndexOf(output[i]\x2C " ");\n      // We have to find the last whitespace and have to replace that value as\n      // it will be visualized as a regular string.\n      output[i] = StringPrototypeSlice(output[i]\x2C 0\x2C pos + 1) +\n        ctx.stylize("<uninitialized>"\x2C "special");\n    }\n  }\n  // Reset the keys to an empty array. This prevents duplicated inspection.\n  keys.length = 0;\n  return output;\n}\n\n// The array is sparse and/or has extra keys\nfunction formatSpecialArray(\n  ctx\x2C\n  value\x2C\n  recurseTimes\x2C\n  maxLength\x2C\n  output\x2C\n  i\x2C\n) {\n  const keys = ObjectKeys(value);\n  let index = i;\n  for (; i < keys.length && output.length < maxLength; i++) {\n    const key = keys[i];\n    const tmp = +key;\n    // Arrays can only have up to 2^32 - 1 entries\n    if (tmp > 2 ** 32 - 2) {\n      break;\n    }\n    if (`${index}` !== key) {\n      if (!numberRegExp.test(key)) {\n        break;\n      }\n      const emptyItems = tmp - index;\n      const ending = emptyItems > 1 ? "s" : "";\n      const message = `<${emptyItems} empty item${ending}>`;\n      ArrayPrototypePush(output\x2C ctx.stylize(message\x2C "undefined"));\n      index = tmp;\n      if (output.length === maxLength) {\n        break;\n      }\n    }\n    ArrayPrototypePush(\n      output\x2C\n      formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C kArrayType)\x2C\n    );\n    index++;\n  }\n  const remaining = value.length - index;\n  if (output.length !== maxLength) {\n    if (remaining > 0) {\n      const ending = remaining > 1 ? "s" : "";\n      const message = `<${remaining} empty item${ending}>`;\n      ArrayPrototypePush(output\x2C ctx.stylize(message\x2C "undefined"));\n    }\n  } else if (remaining > 0) {\n    ArrayPrototypePush(\n      output\x2C\n      `... ${remaining} more item${remaining > 1 ? "s" : ""}`\x2C\n    );\n  }\n  return output;\n}\n\nfunction getBoxedBase(\n  value\x2C\n  ctx\x2C\n  keys\x2C\n  constructor\x2C\n  tag\x2C\n) {\n  let type\x2C primitive;\n  if (isNumberObject(value)) {\n    type = "Number";\n    primitive = NumberPrototypeValueOf(value);\n  } else if (isStringObject(value)) {\n    type = "String";\n    primitive = StringPrototypeValueOf(value);\n    // For boxed Strings\x2C we have to remove the 0-n indexed entries\x2C\n    // since they just noisy up the output and are redundant\n    // Make boxed primitive Strings look like such\n    ArrayPrototypeSplice(keys\x2C 0\x2C value.length);\n  } else if (isBooleanObject(value)) {\n    type = "Boolean";\n    primitive = BooleanPrototypeValueOf(value);\n  } else if (isBigIntObject(value)) {\n    type = "BigInt";\n    primitive = BigIntPrototypeValueOf(value);\n  } else {\n    type = "Symbol";\n    primitive = SymbolPrototypeValueOf(value);\n  }\n\n  let base = `[${type}`;\n  if (type !== constructor) {\n    if (constructor === null) {\n      base += " (null prototype)";\n    } else {\n      base += ` (${constructor})`;\n    }\n  }\n  base += `: ${formatPrimitive(stylizeNoColor\x2C primitive\x2C ctx)}]`;\n  if (tag !== "" && tag !== constructor) {\n    base += ` [${tag}]`;\n  }\n  if (keys.length !== 0 || ctx.stylize === stylizeNoColor) {\n    return base;\n  }\n  return ctx.stylize(base\x2C StringPrototypeToLowerCase(type));\n}\n\nfunction reduceToSingleString(\n  ctx\x2C\n  output\x2C\n  base\x2C\n  braces\x2C\n  extrasType\x2C\n  recurseTimes\x2C\n  value\x2C\n) {\n  if (ctx.compact !== true) {\n    if (typeof ctx.compact === "number" && ctx.compact >= 1) {\n      // Memorize the original output length. In case the output is grouped\x2C\n      // prevent lining up the entries on a single line.\n      const entries = output.length;\n      // Group array elements together if the array contains at least six\n      // separate entries.\n      if (extrasType === kArrayExtrasType && entries > 6) {\n        output = groupArrayElements(ctx\x2C output\x2C value);\n      }\n      // `ctx.currentDepth` is set to the most inner depth of the currently\n      // inspected object part while `recurseTimes` is the actual current depth\n      // that is inspected.\n      //\n      // Example:\n      //\n      // const a = { first: [ 1\x2C 2\x2C 3 ]\x2C second: { inner: [ 1\x2C 2\x2C 3 ] } }\n      //\n      // The deepest depth of `a` is 2 (a.second.inner) and `a.first` has a max\n      // depth of 1.\n      //\n      // Consolidate all entries of the local most inner depth up to\n      // `ctx.compact`\x2C as long as the properties are smaller than\n      // `ctx.breakLength`.\n      if (\n        ctx.currentDepth - recurseTimes < ctx.compact &&\n        entries === output.length\n      ) {\n        // Line up all entries on a single line in case the entries do not\n        // exceed `breakLength`. Add 10 as constant to start next to all other\n        // factors that may reduce `breakLength`.\n        const start = output.length + ctx.indentationLvl +\n          braces[0].length + base.length + 10;\n        if (isBelowBreakLength(ctx\x2C output\x2C start\x2C base)) {\n          const joinedOutput = ArrayPrototypeJoin(output\x2C "\x2C ");\n          if (!StringPrototypeIncludes(joinedOutput\x2C "\\n")) {\n            return `${base ? `${base} ` : ""}${braces[0]} ${joinedOutput}` +\n              ` ${braces[1]}`;\n          }\n        }\n      }\n    }\n    // Line up each entry on an individual line.\n    const indentation = `\\n${StringPrototypeRepeat(" "\x2C ctx.indentationLvl)}`;\n    return `${base ? `${base} ` : ""}${braces[0]}${indentation}  ` +\n      `${ArrayPrototypeJoin(output\x2C `\x2C${indentation}  `)}${\n        ctx.trailingComma ? "\x2C" : ""\n      }${indentation}${braces[1]}`;\n  }\n  // Line up all entries on a single line in case the entries do not exceed\n  // `breakLength`.\n  if (isBelowBreakLength(ctx\x2C output\x2C 0\x2C base)) {\n    return `${braces[0]}${base ? ` ${base}` : ""} ${\n      ArrayPrototypeJoin(output\x2C "\x2C ")\n    } ` +\n      braces[1];\n  }\n  const indentation = StringPrototypeRepeat(" "\x2C ctx.indentationLvl);\n  // If the opening "brace" is too large\x2C like in the case of "Set {"\x2C\n  // we need to force the first item to be on the next line or the\n  // items will not line up correctly.\n  const ln = base === "" && braces[0].length === 1\n    ? " "\n    : `${base ? ` ${base}` : ""}\\n${indentation}  `;\n  // Line up each entry on an individual line.\n  return `${braces[0]}${ln}${\n    ArrayPrototypeJoin(output\x2C `\x2C\\n${indentation}  `)\n  } ${braces[1]}`;\n}\n\nfunction groupArrayElements(ctx\x2C output\x2C value) {\n  let totalLength = 0;\n  let maxLength = 0;\n  let i = 0;\n  let outputLength = output.length;\n  if (ctx.maxArrayLength < output.length) {\n    // This makes sure the "... n more items" part is not taken into account.\n    outputLength--;\n  }\n  const separatorSpace = 2; // Add 1 for the space and 1 for the separator.\n  const dataLen = [];\n  // Calculate the total length of all output entries and the individual max\n  // entries length of all output entries. We have to remove colors first\x2C\n  // otherwise the length would not be calculated properly.\n  for (; i < outputLength; i++) {\n    const len = getStringWidth(output[i]\x2C ctx.colors);\n    dataLen[i] = len;\n    totalLength += len + separatorSpace;\n    if (maxLength < len) {\n      maxLength = len;\n    }\n  }\n  // Add two to `maxLength` as we add a single whitespace character plus a comma\n  // in-between two entries.\n  const actualMax = maxLength + separatorSpace;\n  // Check if at least three entries fit next to each other and prevent grouping\n  // of arrays that contains entries of very different length (i.e.\x2C if a single\n  // entry is longer than 1/5 of all other entries combined). Otherwise the\n  // space in-between small entries would be enormous.\n  if (\n    actualMax * 3 + ctx.indentationLvl < ctx.breakLength &&\n    (totalLength / actualMax > 5 || maxLength <= 6)\n  ) {\n    const approxCharHeights = 2.5;\n    const averageBias = MathSqrt(actualMax - totalLength / output.length);\n    const biasedMax = MathMax(actualMax - 3 - averageBias\x2C 1);\n    // Dynamically check how many columns seem possible.\n    const columns = MathMin(\n      // Ideally a square should be drawn. We expect a character to be about 2.5\n      // times as high as wide. This is the area formula to calculate a square\n      // which contains n rectangles of size `actualMax * approxCharHeights`.\n      // Divide that by `actualMax` to receive the correct number of columns.\n      // The added bias increases the columns for short entries.\n      MathRound(\n        MathSqrt(\n          approxCharHeights * biasedMax * outputLength\x2C\n        ) / biasedMax\x2C\n      )\x2C\n      // Do not exceed the breakLength.\n      MathFloor((ctx.breakLength - ctx.indentationLvl) / actualMax)\x2C\n      // Limit array grouping for small `compact` modes as the user requested\n      // minimal grouping.\n      ctx.compact * 4\x2C\n      // Limit the columns to a maximum of fifteen.\n      15\x2C\n    );\n    // Return with the original output if no grouping should happen.\n    if (columns <= 1) {\n      return output;\n    }\n    const tmp = [];\n    const maxLineLength = [];\n    for (let i = 0; i < columns; i++) {\n      let lineMaxLength = 0;\n      for (let j = i; j < output.length; j += columns) {\n        if (dataLen[j] > lineMaxLength) {\n          lineMaxLength = dataLen[j];\n        }\n      }\n      lineMaxLength += separatorSpace;\n      maxLineLength[i] = lineMaxLength;\n    }\n    let order = StringPrototypePadStart;\n    if (value !== undefined) {\n      for (let i = 0; i < output.length; i++) {\n        if (typeof value[i] !== "number" && typeof value[i] !== "bigint") {\n          order = StringPrototypePadEnd;\n          break;\n        }\n      }\n    }\n    // Each iteration creates a single line of grouped entries.\n    for (let i = 0; i < outputLength; i += columns) {\n      // The last lines may contain less entries than columns.\n      const max = MathMin(i + columns\x2C outputLength);\n      let str = "";\n      let j = i;\n      for (; j < max - 1; j++) {\n        // Calculate extra color padding in case it's active. This has to be\n        // done line by line as some lines might contain more colors than\n        // others.\n        const padding = maxLineLength[j - i] + output[j].length - dataLen[j];\n        str += order(`${output[j]}\x2C `\x2C padding\x2C " ");\n      }\n      if (order === StringPrototypePadStart) {\n        const padding = maxLineLength[j - i] +\n          output[j].length -\n          dataLen[j] -\n          separatorSpace;\n        str += StringPrototypePadStart(output[j]\x2C padding\x2C " ");\n      } else {\n        str += output[j];\n      }\n      ArrayPrototypePush(tmp\x2C str);\n    }\n    if (ctx.maxArrayLength < output.length) {\n      ArrayPrototypePush(tmp\x2C output[outputLength]);\n    }\n    output = tmp;\n  }\n  return output;\n}\n\nfunction formatMapIterInner(\n  ctx\x2C\n  recurseTimes\x2C\n  entries\x2C\n  state\x2C\n) {\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\n  // Entries exist as [key1\x2C val1\x2C key2\x2C val2\x2C ...]\n  const len = entries.length / 2;\n  const remaining = len - maxArrayLength;\n  const maxLength = MathMin(maxArrayLength\x2C len);\n  const output = [];\n  let i = 0;\n  ctx.indentationLvl += 2;\n  if (state === kWeak) {\n    for (; i < maxLength; i++) {\n      const pos = i * 2;\n      output[i] = `${formatValue(ctx\x2C entries[pos]\x2C recurseTimes)} => ${\n        formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)\n      }`;\n    }\n    // Sort all entries to have a halfway reliable output (if more entries than\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\n    // output is not sorted anyway.\n    if (!ctx.sorted) {\n      ArrayPrototypeSort(output);\n    }\n  } else {\n    for (; i < maxLength; i++) {\n      const pos = i * 2;\n      const res = [\n        formatValue(ctx\x2C entries[pos]\x2C recurseTimes)\x2C\n        formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)\x2C\n      ];\n      output[i] = reduceToSingleString(\n        ctx\x2C\n        res\x2C\n        ""\x2C\n        ["["\x2C "]"]\x2C\n        kArrayExtrasType\x2C\n        recurseTimes\x2C\n      );\n    }\n  }\n  ctx.indentationLvl -= 2;\n  if (remaining > 0) {\n    ArrayPrototypePush(\n      output\x2C\n      `... ${remaining} more item${remaining > 1 ? "s" : ""}`\x2C\n    );\n  }\n  return output;\n}\n\nfunction formatSetIterInner(\n  ctx\x2C\n  recurseTimes\x2C\n  entries\x2C\n  state\x2C\n) {\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\n  const maxLength = MathMin(maxArrayLength\x2C entries.length);\n  const output = [];\n  ctx.indentationLvl += 2;\n  for (let i = 0; i < maxLength; i++) {\n    output[i] = formatValue(ctx\x2C entries[i]\x2C recurseTimes);\n  }\n  ctx.indentationLvl -= 2;\n  if (state === kWeak && !ctx.sorted) {\n    // Sort all entries to have a halfway reliable output (if more entries than\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\n    // output is not sorted anyway.\n    ArrayPrototypeSort(output);\n  }\n  const remaining = entries.length - maxLength;\n  if (remaining > 0) {\n    ArrayPrototypePush(\n      output\x2C\n      `... ${remaining} more item${remaining > 1 ? "s" : ""}`\x2C\n    );\n  }\n  return output;\n}\n\n// Regex used for ansi escape code splitting\n// Adopted from https://github.com/chalk/ansi-regex/blob/HEAD/index.js\n// License: MIT\x2C authors: @sindresorhus\x2C Qix-\x2C arjunmehta and LitoMore\n// Matches all ansi escape code sequences in a string\nconst ansiPattern = "[\\\\u001B\\\\u009B][[\\\\]()#;?]*" +\n  "(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*" +\n  "|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)" +\n  "|(?:(?:\\\\d{1\x2C4}(?:;\\\\d{0\x2C4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))";\nconst ansi = new SafeRegExp(ansiPattern\x2C "g");\n\n/**\n * Returns the number of columns required to display the given string.\n */\nexport function getStringWidth(str\x2C removeControlChars = true) {\n  let width = 0;\n\n  if (removeControlChars) {\n    str = stripVTControlCharacters(str);\n  }\n  str = StringPrototypeNormalize(str\x2C "NFC");\n  for (const char of new SafeStringIterator(str)) {\n    const code = StringPrototypeCodePointAt(char\x2C 0);\n    if (isFullWidthCodePoint(code)) {\n      width += 2;\n    } else if (!isZeroWidthCodePoint(code)) {\n      width++;\n    }\n  }\n\n  return width;\n}\n\nconst isZeroWidthCodePoint = (code) => {\n  return code <= 0x1F || // C0 control codes\n    (code >= 0x7F && code <= 0x9F) || // C1 control codes\n    (code >= 0x300 && code <= 0x36F) || // Combining Diacritical Marks\n    (code >= 0x200B && code <= 0x200F) || // Modifying Invisible Characters\n    // Combining Diacritical Marks for Symbols\n    (code >= 0x20D0 && code <= 0x20FF) ||\n    (code >= 0xFE00 && code <= 0xFE0F) || // Variation Selectors\n    (code >= 0xFE20 && code <= 0xFE2F) || // Combining Half Marks\n    (code >= 0xE0100 && code <= 0xE01EF); // Variation Selectors\n};\n\n/**\n * Remove all VT control characters. Use to estimate displayed string width.\n */\nexport function stripVTControlCharacters(str) {\n  return StringPrototypeReplace(str\x2C ansi\x2C "");\n}\n\nfunction hasOwnProperty(obj\x2C v) {\n  if (obj == null) {\n    return false;\n  }\n  return ObjectHasOwn(obj\x2C v);\n}\n\n// Copyright Joyent\x2C Inc. and other Node contributors. MIT license.\n// Forked from Node's lib/internal/cli_table.js\n\nconst tableChars = {\n  middleMiddle: "\\u2500"\x2C\n  rowMiddle: "\\u253c"\x2C\n  topRight: "\\u2510"\x2C\n  topLeft: "\\u250c"\x2C\n  leftMiddle: "\\u251c"\x2C\n  topMiddle: "\\u252c"\x2C\n  bottomRight: "\\u2518"\x2C\n  bottomLeft: "\\u2514"\x2C\n  bottomMiddle: "\\u2534"\x2C\n  rightMiddle: "\\u2524"\x2C\n  left: "\\u2502 "\x2C\n  right: " \\u2502"\x2C\n  middle: " \\u2502 "\x2C\n};\n\nfunction isFullWidthCodePoint(code) {\n  // Code points are partially derived from:\n  // http://www.unicode.org/Public/UNIDATA/EastAsianWidth.txt\n  return (\n    code >= 0x1100 &&\n    (code <= 0x115f || // Hangul Jamo\n      code === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n      code === 0x232a || // RIGHT-POINTING ANGLE BRACKET\n      // CJK Radicals Supplement .. Enclosed CJK Letters and Months\n      (code >= 0x2e80 && code <= 0x3247 && code !== 0x303f) ||\n      // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n      (code >= 0x3250 && code <= 0x4dbf) ||\n      // CJK Unified Ideographs .. Yi Radicals\n      (code >= 0x4e00 && code <= 0xa4c6) ||\n      // Hangul Jamo Extended-A\n      (code >= 0xa960 && code <= 0xa97c) ||\n      // Hangul Syllables\n      (code >= 0xac00 && code <= 0xd7a3) ||\n      // CJK Compatibility Ideographs\n      (code >= 0xf900 && code <= 0xfaff) ||\n      // Vertical Forms\n      (code >= 0xfe10 && code <= 0xfe19) ||\n      // CJK Compatibility Forms .. Small Form Variants\n      (code >= 0xfe30 && code <= 0xfe6b) ||\n      // Halfwidth and Fullwidth Forms\n      (code >= 0xff01 && code <= 0xff60) ||\n      (code >= 0xffe0 && code <= 0xffe6) ||\n      // Kana Supplement\n      (code >= 0x1b000 && code <= 0x1b001) ||\n      // Enclosed Ideographic Supplement\n      (code >= 0x1f200 && code <= 0x1f251) ||\n      // Miscellaneous Symbols and Pictographs 0x1f300 - 0x1f5ff\n      // Emoticons 0x1f600 - 0x1f64f\n      (code >= 0x1f300 && code <= 0x1f64f) ||\n      // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n      (code >= 0x20000 && code <= 0x3fffd))\n  );\n}\n\nfunction renderRow(row\x2C columnWidths\x2C columnRightAlign) {\n  let out = tableChars.left;\n  for (let i = 0; i < row.length; i++) {\n    const cell = row[i];\n    const len = getStringWidth(cell);\n    const padding = StringPrototypeRepeat(" "\x2C columnWidths[i] - len);\n    if (columnRightAlign?.[i]) {\n      out += `${padding}${cell}`;\n    } else {\n      out += `${cell}${padding}`;\n    }\n    if (i !== row.length - 1) {\n      out += tableChars.middle;\n    }\n  }\n  out += tableChars.right;\n  return out;\n}\n\nfunction cliTable(head\x2C columns) {\n  const rows = [];\n  const columnWidths = ArrayPrototypeMap(head\x2C (h) => getStringWidth(h));\n  const longestColumn = ArrayPrototypeReduce(\n    columns\x2C\n    (n\x2C a) => MathMax(n\x2C a.length)\x2C\n    0\x2C\n  );\n  const columnRightAlign = ArrayPrototypeFill(\n    new Array(columnWidths.length)\x2C\n    true\x2C\n  );\n\n  for (let i = 0; i < head.length; i++) {\n    const column = columns[i];\n    for (let j = 0; j < longestColumn; j++) {\n      if (rows[j] === undefined) {\n        rows[j] = [];\n      }\n      const value = (rows[j][i] = hasOwnProperty(column\x2C j) ? column[j] : "");\n      const width = columnWidths[i] || 0;\n      const counted = getStringWidth(value);\n      columnWidths[i] = MathMax(width\x2C counted);\n      columnRightAlign[i] &= NumberIsInteger(+value);\n    }\n  }\n\n  const divider = ArrayPrototypeMap(\n    columnWidths\x2C\n    (i) => StringPrototypeRepeat(tableChars.middleMiddle\x2C i + 2)\x2C\n  );\n\n  let result =\n    `${tableChars.topLeft}${\n      ArrayPrototypeJoin(divider\x2C tableChars.topMiddle)\n    }` +\n    `${tableChars.topRight}\\n${renderRow(head\x2C columnWidths)}\\n` +\n    `${tableChars.leftMiddle}${\n      ArrayPrototypeJoin(divider\x2C tableChars.rowMiddle)\n    }` +\n    `${tableChars.rightMiddle}\\n`;\n\n  for (let i = 0; i < rows.length; ++i) {\n    const row = rows[i];\n    result += `${renderRow(row\x2C columnWidths\x2C columnRightAlign)}\\n`;\n  }\n\n  result +=\n    `${tableChars.bottomLeft}${\n      ArrayPrototypeJoin(divider\x2C tableChars.bottomMiddle)\n    }` +\n    tableChars.bottomRight;\n\n  return result;\n}\n/* End of forked part */\n\n// We can match Node's quoting behavior exactly by swapping the double quote and\n// single quote in this array. That would give preference to single quotes.\n// However\x2C we prefer double quotes as the default.\n\nconst denoInspectDefaultOptions = {\n  indentationLvl: 0\x2C\n  currentDepth: 0\x2C\n  stylize: stylizeNoColor\x2C\n\n  showHidden: false\x2C\n  depth: 4\x2C\n  colors: false\x2C\n  showProxy: false\x2C\n  breakLength: 80\x2C\n  escapeSequences: true\x2C\n  compact: 3\x2C\n  sorted: false\x2C\n  getters: false\x2C\n\n  // node only\n  maxArrayLength: 100\x2C\n  maxStringLength: 100\x2C // deno: strAbbreviateSize: 100\n  customInspect: true\x2C\n\n  // deno only\n  /** You can override the quotes preference in inspectString.\n   * Used by util.inspect() */\n  // TODO(kt3k): Consider using symbol as a key to hide this from the public\n  // API.\n  quotes: ['"'\x2C "'"\x2C "`"]\x2C\n  iterableLimit: 100\x2C // similar to node's maxArrayLength\x2C but doesn't only apply to arrays\n  trailingComma: false\x2C\n\n  inspect\x2C\n\n  // TODO(@crowlKats): merge into indentationLvl\n  indentLevel: 0\x2C\n};\n\nfunction getDefaultInspectOptions() {\n  const color = !getNoColor();\n\n  return {\n    budget: {}\x2C\n    seen: []\x2C\n    ...denoInspectDefaultOptions\x2C\n    colors: color\x2C\n    stylize: color ? createStylizeWithColor(styles\x2C colors) : stylizeNoColor\x2C\n  };\n}\n\nconst DEFAULT_INDENT = "  "; // Default indent string\n\nconst STR_ABBREVIATE_SIZE = 100;\n\nclass CSI {\n  static kClear = "\\x1b[1;1H";\n  static kClearScreenDown = "\\x1b[0J";\n}\n\nconst QUOTE_SYMBOL_REG = new SafeRegExp(/^[a-zA-Z_][a-zA-Z_.0-9]*$/);\n\nfunction maybeQuoteSymbol(symbol\x2C ctx) {\n  const description = SymbolPrototypeGetDescription(symbol);\n\n  if (description === undefined) {\n    return SymbolPrototypeToString(symbol);\n  }\n\n  if (RegExpPrototypeTest(QUOTE_SYMBOL_REG\x2C description)) {\n    return SymbolPrototypeToString(symbol);\n  }\n\n  return `Symbol(${quoteString(description\x2C ctx)})`;\n}\n\n/** Surround the string in quotes.\n *\n * The quote symbol is chosen by taking the first of the `QUOTES` array which\n * does not occur in the string. If they all occur\x2C settle with `QUOTES[0]`.\n *\n * Insert a backslash before any occurrence of the chosen quote symbol and\n * before any backslash.\n */\nfunction quoteString(string\x2C ctx) {\n  const quote = ArrayPrototypeFind(\n    ctx.quotes\x2C\n    (c) => !StringPrototypeIncludes(string\x2C c)\x2C\n  ) ??\n    ctx.quotes[0];\n  const escapePattern = new SafeRegExp(`(?=[${quote}\\\\\\\\])`\x2C "g");\n  string = StringPrototypeReplace(string\x2C escapePattern\x2C "\\\\");\n  if (ctx.escapeSequences) {\n    string = replaceEscapeSequences(string);\n  }\n  return `${quote}${string}${quote}`;\n}\n\nconst ESCAPE_PATTERN = new SafeRegExp(/([\\b\\f\\n\\r\\t\\v])/g);\nconst ESCAPE_MAP = ObjectFreeze({\n  "\\b": "\\\\b"\x2C\n  "\\f": "\\\\f"\x2C\n  "\\n": "\\\\n"\x2C\n  "\\r": "\\\\r"\x2C\n  "\\t": "\\\\t"\x2C\n  "\\v": "\\\\v"\x2C\n});\n\nconst ESCAPE_PATTERN2 = new SafeRegExp("[\\x00-\\x1f\\x7f-\\x9f]"\x2C "g");\n\n// Replace escape sequences that can modify output.\nfunction replaceEscapeSequences(string) {\n  return StringPrototypeReplace(\n    StringPrototypeReplace(\n      string\x2C\n      ESCAPE_PATTERN\x2C\n      (c) => ESCAPE_MAP[c]\x2C\n    )\x2C\n    ESCAPE_PATTERN2\x2C\n    (c) =>\n      "\\\\x" +\n      StringPrototypePadStart(\n        NumberPrototypeToString(StringPrototypeCharCodeAt(c\x2C 0)\x2C 16)\x2C\n        2\x2C\n        "0"\x2C\n      )\x2C\n  );\n}\n\n// Print strings when they are inside of arrays or objects with quotes\nfunction inspectValueWithQuotes(\n  value\x2C\n  ctx\x2C\n) {\n  const abbreviateSize = typeof ctx.strAbbreviateSize === "undefined"\n    ? STR_ABBREVIATE_SIZE\n    : ctx.strAbbreviateSize;\n  switch (typeof value) {\n    case "string": {\n      const trunc = value.length > abbreviateSize\n        ? StringPrototypeSlice(value\x2C 0\x2C abbreviateSize) + "..."\n        : value;\n      return ctx.stylize(quoteString(trunc\x2C ctx)\x2C "string"); // Quoted strings are green\n    }\n    default:\n      return formatValue(ctx\x2C value\x2C 0);\n  }\n}\n\nconst colorKeywords = new SafeMap([\n  ["black"\x2C "#000000"]\x2C\n  ["silver"\x2C "#c0c0c0"]\x2C\n  ["gray"\x2C "#808080"]\x2C\n  ["white"\x2C "#ffffff"]\x2C\n  ["maroon"\x2C "#800000"]\x2C\n  ["red"\x2C "#ff0000"]\x2C\n  ["purple"\x2C "#800080"]\x2C\n  ["fuchsia"\x2C "#ff00ff"]\x2C\n  ["green"\x2C "#008000"]\x2C\n  ["lime"\x2C "#00ff00"]\x2C\n  ["olive"\x2C "#808000"]\x2C\n  ["yellow"\x2C "#ffff00"]\x2C\n  ["navy"\x2C "#000080"]\x2C\n  ["blue"\x2C "#0000ff"]\x2C\n  ["teal"\x2C "#008080"]\x2C\n  ["aqua"\x2C "#00ffff"]\x2C\n  ["orange"\x2C "#ffa500"]\x2C\n  ["aliceblue"\x2C "#f0f8ff"]\x2C\n  ["antiquewhite"\x2C "#faebd7"]\x2C\n  ["aquamarine"\x2C "#7fffd4"]\x2C\n  ["azure"\x2C "#f0ffff"]\x2C\n  ["beige"\x2C "#f5f5dc"]\x2C\n  ["bisque"\x2C "#ffe4c4"]\x2C\n  ["blanchedalmond"\x2C "#ffebcd"]\x2C\n  ["blueviolet"\x2C "#8a2be2"]\x2C\n  ["brown"\x2C "#a52a2a"]\x2C\n  ["burlywood"\x2C "#deb887"]\x2C\n  ["cadetblue"\x2C "#5f9ea0"]\x2C\n  ["chartreuse"\x2C "#7fff00"]\x2C\n  ["chocolate"\x2C "#d2691e"]\x2C\n  ["coral"\x2C "#ff7f50"]\x2C\n  ["cornflowerblue"\x2C "#6495ed"]\x2C\n  ["cornsilk"\x2C "#fff8dc"]\x2C\n  ["crimson"\x2C "#dc143c"]\x2C\n  ["cyan"\x2C "#00ffff"]\x2C\n  ["darkblue"\x2C "#00008b"]\x2C\n  ["darkcyan"\x2C "#008b8b"]\x2C\n  ["darkgoldenrod"\x2C "#b8860b"]\x2C\n  ["darkgray"\x2C "#a9a9a9"]\x2C\n  ["darkgreen"\x2C "#006400"]\x2C\n  ["darkgrey"\x2C "#a9a9a9"]\x2C\n  ["darkkhaki"\x2C "#bdb76b"]\x2C\n  ["darkmagenta"\x2C "#8b008b"]\x2C\n  ["darkolivegreen"\x2C "#556b2f"]\x2C\n  ["darkorange"\x2C "#ff8c00"]\x2C\n  ["darkorchid"\x2C "#9932cc"]\x2C\n  ["darkred"\x2C "#8b0000"]\x2C\n  ["darksalmon"\x2C "#e9967a"]\x2C\n  ["darkseagreen"\x2C "#8fbc8f"]\x2C\n  ["darkslateblue"\x2C "#483d8b"]\x2C\n  ["darkslategray"\x2C "#2f4f4f"]\x2C\n  ["darkslategrey"\x2C "#2f4f4f"]\x2C\n  ["darkturquoise"\x2C "#00ced1"]\x2C\n  ["darkviolet"\x2C "#9400d3"]\x2C\n  ["deeppink"\x2C "#ff1493"]\x2C\n  ["deepskyblue"\x2C "#00bfff"]\x2C\n  ["dimgray"\x2C "#696969"]\x2C\n  ["dimgrey"\x2C "#696969"]\x2C\n  ["dodgerblue"\x2C "#1e90ff"]\x2C\n  ["firebrick"\x2C "#b22222"]\x2C\n  ["floralwhite"\x2C "#fffaf0"]\x2C\n  ["forestgreen"\x2C "#228b22"]\x2C\n  ["gainsboro"\x2C "#dcdcdc"]\x2C\n  ["ghostwhite"\x2C "#f8f8ff"]\x2C\n  ["gold"\x2C "#ffd700"]\x2C\n  ["goldenrod"\x2C "#daa520"]\x2C\n  ["greenyellow"\x2C "#adff2f"]\x2C\n  ["grey"\x2C "#808080"]\x2C\n  ["honeydew"\x2C "#f0fff0"]\x2C\n  ["hotpink"\x2C "#ff69b4"]\x2C\n  ["indianred"\x2C "#cd5c5c"]\x2C\n  ["indigo"\x2C "#4b0082"]\x2C\n  ["ivory"\x2C "#fffff0"]\x2C\n  ["khaki"\x2C "#f0e68c"]\x2C\n  ["lavender"\x2C "#e6e6fa"]\x2C\n  ["lavenderblush"\x2C "#fff0f5"]\x2C\n  ["lawngreen"\x2C "#7cfc00"]\x2C\n  ["lemonchiffon"\x2C "#fffacd"]\x2C\n  ["lightblue"\x2C "#add8e6"]\x2C\n  ["lightcoral"\x2C "#f08080"]\x2C\n  ["lightcyan"\x2C "#e0ffff"]\x2C\n  ["lightgoldenrodyellow"\x2C "#fafad2"]\x2C\n  ["lightgray"\x2C "#d3d3d3"]\x2C\n  ["lightgreen"\x2C "#90ee90"]\x2C\n  ["lightgrey"\x2C "#d3d3d3"]\x2C\n  ["lightpink"\x2C "#ffb6c1"]\x2C\n  ["lightsalmon"\x2C "#ffa07a"]\x2C\n  ["lightseagreen"\x2C "#20b2aa"]\x2C\n  ["lightskyblue"\x2C "#87cefa"]\x2C\n  ["lightslategray"\x2C "#778899"]\x2C\n  ["lightslategrey"\x2C "#778899"]\x2C\n  ["lightsteelblue"\x2C "#b0c4de"]\x2C\n  ["lightyellow"\x2C "#ffffe0"]\x2C\n  ["limegreen"\x2C "#32cd32"]\x2C\n  ["linen"\x2C "#faf0e6"]\x2C\n  ["magenta"\x2C "#ff00ff"]\x2C\n  ["mediumaquamarine"\x2C "#66cdaa"]\x2C\n  ["mediumblue"\x2C "#0000cd"]\x2C\n  ["mediumorchid"\x2C "#ba55d3"]\x2C\n  ["mediumpurple"\x2C "#9370db"]\x2C\n  ["mediumseagreen"\x2C "#3cb371"]\x2C\n  ["mediumslateblue"\x2C "#7b68ee"]\x2C\n  ["mediumspringgreen"\x2C "#00fa9a"]\x2C\n  ["mediumturquoise"\x2C "#48d1cc"]\x2C\n  ["mediumvioletred"\x2C "#c71585"]\x2C\n  ["midnightblue"\x2C "#191970"]\x2C\n  ["mintcream"\x2C "#f5fffa"]\x2C\n  ["mistyrose"\x2C "#ffe4e1"]\x2C\n  ["moccasin"\x2C "#ffe4b5"]\x2C\n  ["navajowhite"\x2C "#ffdead"]\x2C\n  ["oldlace"\x2C "#fdf5e6"]\x2C\n  ["olivedrab"\x2C "#6b8e23"]\x2C\n  ["orangered"\x2C "#ff4500"]\x2C\n  ["orchid"\x2C "#da70d6"]\x2C\n  ["palegoldenrod"\x2C "#eee8aa"]\x2C\n  ["palegreen"\x2C "#98fb98"]\x2C\n  ["paleturquoise"\x2C "#afeeee"]\x2C\n  ["palevioletred"\x2C "#db7093"]\x2C\n  ["papayawhip"\x2C "#ffefd5"]\x2C\n  ["peachpuff"\x2C "#ffdab9"]\x2C\n  ["peru"\x2C "#cd853f"]\x2C\n  ["pink"\x2C "#ffc0cb"]\x2C\n  ["plum"\x2C "#dda0dd"]\x2C\n  ["powderblue"\x2C "#b0e0e6"]\x2C\n  ["rosybrown"\x2C "#bc8f8f"]\x2C\n  ["royalblue"\x2C "#4169e1"]\x2C\n  ["saddlebrown"\x2C "#8b4513"]\x2C\n  ["salmon"\x2C "#fa8072"]\x2C\n  ["sandybrown"\x2C "#f4a460"]\x2C\n  ["seagreen"\x2C "#2e8b57"]\x2C\n  ["seashell"\x2C "#fff5ee"]\x2C\n  ["sienna"\x2C "#a0522d"]\x2C\n  ["skyblue"\x2C "#87ceeb"]\x2C\n  ["slateblue"\x2C "#6a5acd"]\x2C\n  ["slategray"\x2C "#708090"]\x2C\n  ["slategrey"\x2C "#708090"]\x2C\n  ["snow"\x2C "#fffafa"]\x2C\n  ["springgreen"\x2C "#00ff7f"]\x2C\n  ["steelblue"\x2C "#4682b4"]\x2C\n  ["tan"\x2C "#d2b48c"]\x2C\n  ["thistle"\x2C "#d8bfd8"]\x2C\n  ["tomato"\x2C "#ff6347"]\x2C\n  ["turquoise"\x2C "#40e0d0"]\x2C\n  ["violet"\x2C "#ee82ee"]\x2C\n  ["wheat"\x2C "#f5deb3"]\x2C\n  ["whitesmoke"\x2C "#f5f5f5"]\x2C\n  ["yellowgreen"\x2C "#9acd32"]\x2C\n  ["rebeccapurple"\x2C "#663399"]\x2C\n]);\n\nconst HASH_PATTERN = new SafeRegExp(\n  /^#([\\dA-Fa-f]{2})([\\dA-Fa-f]{2})([\\dA-Fa-f]{2})([\\dA-Fa-f]{2})?$/\x2C\n);\nconst SMALL_HASH_PATTERN = new SafeRegExp(\n  /^#([\\dA-Fa-f])([\\dA-Fa-f])([\\dA-Fa-f])([\\dA-Fa-f])?$/\x2C\n);\nconst RGB_PATTERN = new SafeRegExp(\n  /^rgba?\\(\\s*([+\\-]?\\d*\\.?\\d+)\\s*\x2C\\s*([+\\-]?\\d*\\.?\\d+)\\s*\x2C\\s*([+\\-]?\\d*\\.?\\d+)\\s*(\x2C\\s*([+\\-]?\\d*\\.?\\d+)\\s*)?\\)$/\x2C\n);\nconst HSL_PATTERN = new SafeRegExp(\n  /^hsla?\\(\\s*([+\\-]?\\d*\\.?\\d+)\\s*\x2C\\s*([+\\-]?\\d*\\.?\\d+)%\\s*\x2C\\s*([+\\-]?\\d*\\.?\\d+)%\\s*(\x2C\\s*([+\\-]?\\d*\\.?\\d+)\\s*)?\\)$/\x2C\n);\n\nfunction parseCssColor(colorString) {\n  if (colorKeywords.has(colorString)) {\n    colorString = colorKeywords.get(colorString);\n  }\n  // deno-fmt-ignore\n  const hashMatch = StringPrototypeMatch(colorString\x2C HASH_PATTERN);\n  if (hashMatch != null) {\n    return [\n      NumberParseInt(hashMatch[1]\x2C 16)\x2C\n      NumberParseInt(hashMatch[2]\x2C 16)\x2C\n      NumberParseInt(hashMatch[3]\x2C 16)\x2C\n    ];\n  }\n  // deno-fmt-ignore\n  const smallHashMatch = StringPrototypeMatch(colorString\x2C SMALL_HASH_PATTERN);\n  if (smallHashMatch != null) {\n    return [\n      NumberParseInt(`${smallHashMatch[1]}${smallHashMatch[1]}`\x2C 16)\x2C\n      NumberParseInt(`${smallHashMatch[2]}${smallHashMatch[2]}`\x2C 16)\x2C\n      NumberParseInt(`${smallHashMatch[3]}${smallHashMatch[3]}`\x2C 16)\x2C\n    ];\n  }\n  // deno-fmt-ignore\n  const rgbMatch = StringPrototypeMatch(colorString\x2C RGB_PATTERN);\n  if (rgbMatch != null) {\n    return [\n      MathRound(MathMax(0\x2C MathMin(255\x2C rgbMatch[1])))\x2C\n      MathRound(MathMax(0\x2C MathMin(255\x2C rgbMatch[2])))\x2C\n      MathRound(MathMax(0\x2C MathMin(255\x2C rgbMatch[3])))\x2C\n    ];\n  }\n  // deno-fmt-ignore\n  const hslMatch = StringPrototypeMatch(colorString\x2C HSL_PATTERN);\n  if (hslMatch != null) {\n    // https://www.rapidtables.com/convert/color/hsl-to-rgb.html\n    let h = Number(hslMatch[1]) % 360;\n    if (h < 0) {\n      h += 360;\n    }\n    const s = MathMax(0\x2C MathMin(100\x2C hslMatch[2])) / 100;\n    const l = MathMax(0\x2C MathMin(100\x2C hslMatch[3])) / 100;\n    const c = (1 - MathAbs(2 * l - 1)) * s;\n    const x = c * (1 - MathAbs((h / 60) % 2 - 1));\n    const m = l - c / 2;\n    let r_;\n    let g_;\n    let b_;\n    if (h < 60) {\n      ({ 0: r_\x2C 1: g_\x2C 2: b_ } = [c\x2C x\x2C 0]);\n    } else if (h < 120) {\n      ({ 0: r_\x2C 1: g_\x2C 2: b_ } = [x\x2C c\x2C 0]);\n    } else if (h < 180) {\n      ({ 0: r_\x2C 1: g_\x2C 2: b_ } = [0\x2C c\x2C x]);\n    } else if (h < 240) {\n      ({ 0: r_\x2C 1: g_\x2C 2: b_ } = [0\x2C x\x2C c]);\n    } else if (h < 300) {\n      ({ 0: r_\x2C 1: g_\x2C 2: b_ } = [x\x2C 0\x2C c]);\n    } else {\n      ({ 0: r_\x2C 1: g_\x2C 2: b_ } = [c\x2C 0\x2C x]);\n    }\n    return [\n      MathRound((r_ + m) * 255)\x2C\n      MathRound((g_ + m) * 255)\x2C\n      MathRound((b_ + m) * 255)\x2C\n    ];\n  }\n  return null;\n}\n\nfunction getDefaultCss() {\n  return {\n    backgroundColor: null\x2C\n    color: null\x2C\n    fontWeight: null\x2C\n    fontStyle: null\x2C\n    textDecorationColor: null\x2C\n    textDecorationLine: []\x2C\n  };\n}\n\nconst SPACE_PATTERN = new SafeRegExp(/\\s+/g);\n\nfunction parseCss(cssString) {\n  const css = getDefaultCss();\n\n  const rawEntries = [];\n  let inValue = false;\n  let currentKey = null;\n  let parenthesesDepth = 0;\n  let currentPart = "";\n  for (let i = 0; i < cssString.length; i++) {\n    const c = cssString[i];\n    if (c == "(") {\n      parenthesesDepth++;\n    } else if (parenthesesDepth > 0) {\n      if (c == ")") {\n        parenthesesDepth--;\n      }\n    } else if (inValue) {\n      if (c == ";") {\n        const value = StringPrototypeTrim(currentPart);\n        if (value != "") {\n          ArrayPrototypePush(rawEntries\x2C [currentKey\x2C value]);\n        }\n        currentKey = null;\n        currentPart = "";\n        inValue = false;\n        continue;\n      }\n    } else if (c == ":") {\n      currentKey = StringPrototypeTrim(currentPart);\n      currentPart = "";\n      inValue = true;\n      continue;\n    }\n    currentPart += c;\n  }\n  if (inValue && parenthesesDepth == 0) {\n    const value = StringPrototypeTrim(currentPart);\n    if (value != "") {\n      ArrayPrototypePush(rawEntries\x2C [currentKey\x2C value]);\n    }\n    currentKey = null;\n    currentPart = "";\n  }\n\n  for (let i = 0; i < rawEntries.length; ++i) {\n    const { 0: key\x2C 1: value } = rawEntries[i];\n    if (key == "background-color") {\n      if (value != null) {\n        css.backgroundColor = value;\n      }\n    } else if (key == "color") {\n      if (value != null) {\n        css.color = value;\n      }\n    } else if (key == "font-weight") {\n      if (value == "bold") {\n        css.fontWeight = value;\n      }\n    } else if (key == "font-style") {\n      if (\n        ArrayPrototypeIncludes(["italic"\x2C "oblique"\x2C "oblique 14deg"]\x2C value)\n      ) {\n        css.fontStyle = "italic";\n      }\n    } else if (key == "text-decoration-line") {\n      css.textDecorationLine = [];\n      const lineTypes = StringPrototypeSplit(value\x2C SPACE_PATTERN);\n      for (let i = 0; i < lineTypes.length; ++i) {\n        const lineType = lineTypes[i];\n        if (\n          ArrayPrototypeIncludes(\n            ["line-through"\x2C "overline"\x2C "underline"]\x2C\n            lineType\x2C\n          )\n        ) {\n          ArrayPrototypePush(css.textDecorationLine\x2C lineType);\n        }\n      }\n    } else if (key == "text-decoration-color") {\n      const color = parseCssColor(value);\n      if (color != null) {\n        css.textDecorationColor = color;\n      }\n    } else if (key == "text-decoration") {\n      css.textDecorationColor = null;\n      css.textDecorationLine = [];\n      const args = StringPrototypeSplit(value\x2C SPACE_PATTERN);\n      for (let i = 0; i < args.length; ++i) {\n        const arg = args[i];\n        const maybeColor = parseCssColor(arg);\n        if (maybeColor != null) {\n          css.textDecorationColor = maybeColor;\n        } else if (\n          ArrayPrototypeIncludes(\n            ["line-through"\x2C "overline"\x2C "underline"]\x2C\n            arg\x2C\n          )\n        ) {\n          ArrayPrototypePush(css.textDecorationLine\x2C arg);\n        }\n      }\n    }\n  }\n\n  return css;\n}\n\nfunction colorEquals(color1\x2C color2) {\n  return color1?.[0] == color2?.[0] && color1?.[1] == color2?.[1] &&\n    color1?.[2] == color2?.[2];\n}\n\nfunction cssToAnsi(css\x2C prevCss = null) {\n  prevCss = prevCss ?? getDefaultCss();\n  let ansi = "";\n  if (!colorEquals(css.backgroundColor\x2C prevCss.backgroundColor)) {\n    if (css.backgroundColor == null) {\n      ansi += "\\x1b[49m";\n    } else if (css.backgroundColor == "black") {\n      ansi += `\\x1b[40m`;\n    } else if (css.backgroundColor == "red") {\n      ansi += `\\x1b[41m`;\n    } else if (css.backgroundColor == "green") {\n      ansi += `\\x1b[42m`;\n    } else if (css.backgroundColor == "yellow") {\n      ansi += `\\x1b[43m`;\n    } else if (css.backgroundColor == "blue") {\n      ansi += `\\x1b[44m`;\n    } else if (css.backgroundColor == "magenta") {\n      ansi += `\\x1b[45m`;\n    } else if (css.backgroundColor == "cyan") {\n      ansi += `\\x1b[46m`;\n    } else if (css.backgroundColor == "white") {\n      ansi += `\\x1b[47m`;\n    } else {\n      if (ArrayIsArray(css.backgroundColor)) {\n        const { 0: r\x2C 1: g\x2C 2: b } = css.backgroundColor;\n        ansi += `\\x1b[48;2;${r};${g};${b}m`;\n      } else {\n        const parsed = parseCssColor(css.backgroundColor);\n        if (parsed !== null) {\n          const { 0: r\x2C 1: g\x2C 2: b } = parsed;\n          ansi += `\\x1b[48;2;${r};${g};${b}m`;\n        } else {\n          ansi += "\\x1b[49m";\n        }\n      }\n    }\n  }\n  if (!colorEquals(css.color\x2C prevCss.color)) {\n    if (css.color == null) {\n      ansi += "\\x1b[39m";\n    } else if (css.color == "black") {\n      ansi += `\\x1b[30m`;\n    } else if (css.color == "red") {\n      ansi += `\\x1b[31m`;\n    } else if (css.color == "green") {\n      ansi += `\\x1b[32m`;\n    } else if (css.color == "yellow") {\n      ansi += `\\x1b[33m`;\n    } else if (css.color == "blue") {\n      ansi += `\\x1b[34m`;\n    } else if (css.color == "magenta") {\n      ansi += `\\x1b[35m`;\n    } else if (css.color == "cyan") {\n      ansi += `\\x1b[36m`;\n    } else if (css.color == "white") {\n      ansi += `\\x1b[37m`;\n    } else {\n      if (ArrayIsArray(css.color)) {\n        const { 0: r\x2C 1: g\x2C 2: b } = css.color;\n        ansi += `\\x1b[38;2;${r};${g};${b}m`;\n      } else {\n        const parsed = parseCssColor(css.color);\n        if (parsed !== null) {\n          const { 0: r\x2C 1: g\x2C 2: b } = parsed;\n          ansi += `\\x1b[38;2;${r};${g};${b}m`;\n        } else {\n          ansi += "\\x1b[39m";\n        }\n      }\n    }\n  }\n  if (css.fontWeight != prevCss.fontWeight) {\n    if (css.fontWeight == "bold") {\n      ansi += `\\x1b[1m`;\n    } else {\n      ansi += "\\x1b[22m";\n    }\n  }\n  if (css.fontStyle != prevCss.fontStyle) {\n    if (css.fontStyle == "italic") {\n      ansi += `\\x1b[3m`;\n    } else {\n      ansi += "\\x1b[23m";\n    }\n  }\n  if (!colorEquals(css.textDecorationColor\x2C prevCss.textDecorationColor)) {\n    if (css.textDecorationColor != null) {\n      const { 0: r\x2C 1: g\x2C 2: b } = css.textDecorationColor;\n      ansi += `\\x1b[58;2;${r};${g};${b}m`;\n    } else {\n      ansi += "\\x1b[59m";\n    }\n  }\n  if (\n    ArrayPrototypeIncludes(css.textDecorationLine\x2C "line-through") !=\n      ArrayPrototypeIncludes(prevCss.textDecorationLine\x2C "line-through")\n  ) {\n    if (ArrayPrototypeIncludes(css.textDecorationLine\x2C "line-through")) {\n      ansi += "\\x1b[9m";\n    } else {\n      ansi += "\\x1b[29m";\n    }\n  }\n  if (\n    ArrayPrototypeIncludes(css.textDecorationLine\x2C "overline") !=\n      ArrayPrototypeIncludes(prevCss.textDecorationLine\x2C "overline")\n  ) {\n    if (ArrayPrototypeIncludes(css.textDecorationLine\x2C "overline")) {\n      ansi += "\\x1b[53m";\n    } else {\n      ansi += "\\x1b[55m";\n    }\n  }\n  if (\n    ArrayPrototypeIncludes(css.textDecorationLine\x2C "underline") !=\n      ArrayPrototypeIncludes(prevCss.textDecorationLine\x2C "underline")\n  ) {\n    if (ArrayPrototypeIncludes(css.textDecorationLine\x2C "underline")) {\n      ansi += "\\x1b[4m";\n    } else {\n      ansi += "\\x1b[24m";\n    }\n  }\n  return ansi;\n}\n\nfunction inspectArgs(args\x2C inspectOptions = {}) {\n  const ctx = {\n    ...getDefaultInspectOptions()\x2C\n    ...inspectOptions\x2C\n  };\n  if (inspectOptions.iterableLimit !== undefined) {\n    ctx.maxArrayLength = inspectOptions.iterableLimit;\n  }\n  if (inspectOptions.strAbbreviateSize !== undefined) {\n    ctx.maxStringLength = inspectOptions.strAbbreviateSize;\n  }\n  if (ctx.colors) ctx.stylize = createStylizeWithColor(styles\x2C colors);\n  if (ctx.maxArrayLength === null) ctx.maxArrayLength = Infinity;\n  if (ctx.maxStringLength === null) ctx.maxStringLength = Infinity;\n\n  const first = args[0];\n  let a = 0;\n  let string = "";\n\n  if (typeof first == "string" && args.length > 1) {\n    a++;\n    // Index of the first not-yet-appended character. Use this so we only\n    // have to append to `string` when a substitution occurs / at the end.\n    let appendedChars = 0;\n    let usedStyle = false;\n    let prevCss = null;\n    for (let i = 0; i < first.length - 1; i++) {\n      if (first[i] == "%") {\n        const char = first[++i];\n        if (a < args.length) {\n          let formattedArg = null;\n          if (char == "s") {\n            // Format as a string.\n            formattedArg = String(args[a++]);\n          } else if (ArrayPrototypeIncludes(["d"\x2C "i"]\x2C char)) {\n            // Format as an integer.\n            const value = args[a++];\n            if (typeof value == "bigint") {\n              formattedArg = `${value}n`;\n            } else if (typeof value == "number") {\n              formattedArg = `${NumberParseInt(String(value))}`;\n            } else {\n              formattedArg = "NaN";\n            }\n          } else if (char == "f") {\n            // Format as a floating point value.\n            const value = args[a++];\n            if (typeof value == "number") {\n              formattedArg = `${value}`;\n            } else {\n              formattedArg = "NaN";\n            }\n          } else if (ArrayPrototypeIncludes(["O"\x2C "o"]\x2C char)) {\n            // Format as an object.\n            formattedArg = formatValue(ctx\x2C args[a++]\x2C 0);\n          } else if (char == "c") {\n            const value = args[a++];\n            if (ctx.colors) {\n              const css = parseCss(value);\n              formattedArg = cssToAnsi(css\x2C prevCss);\n              if (formattedArg != "") {\n                usedStyle = true;\n                prevCss = css;\n              }\n            } else {\n              formattedArg = "";\n            }\n          }\n\n          if (formattedArg != null) {\n            string += StringPrototypeSlice(first\x2C appendedChars\x2C i - 1) +\n              formattedArg;\n            appendedChars = i + 1;\n          }\n        }\n        if (char == "%") {\n          string += StringPrototypeSlice(first\x2C appendedChars\x2C i - 1) + "%";\n          appendedChars = i + 1;\n        }\n      }\n    }\n    string += StringPrototypeSlice(first\x2C appendedChars);\n    if (usedStyle) {\n      string += "\\x1b[0m";\n    }\n  }\n\n  for (; a < args.length; a++) {\n    if (a > 0) {\n      string += " ";\n    }\n    if (typeof args[a] == "string") {\n      string += args[a];\n    } else {\n      // Use default maximum depth for null or undefined arguments.\n      string += formatValue(ctx\x2C args[a]\x2C 0);\n    }\n  }\n\n  if (ctx.indentLevel > 0) {\n    const groupIndent = StringPrototypeRepeat(\n      DEFAULT_INDENT\x2C\n      ctx.indentLevel\x2C\n    );\n    string = groupIndent +\n      StringPrototypeReplaceAll(string\x2C "\\n"\x2C `\\n${groupIndent}`);\n  }\n\n  return string;\n}\n\nfunction createStylizeWithColor(styles\x2C colors) {\n  return function stylizeWithColor(str\x2C styleType) {\n    const style = styles[styleType];\n    if (style !== undefined) {\n      const color = colors[style];\n      if (color !== undefined) {\n        return `\\u001b[${color[0]}m${str}\\u001b[${color[1]}m`;\n      }\n    }\n    return str;\n  };\n}\n\nconst countMap = new SafeMap();\nconst timerMap = new SafeMap();\nconst isConsoleInstance = Symbol("isConsoleInstance");\n\nclass Console {\n  #printFunc = null;\n  [isConsoleInstance] = false;\n\n  constructor(printFunc) {\n    this.#printFunc = printFunc;\n    this.indentLevel = 0;\n    this[isConsoleInstance] = true;\n\n    // ref https://console.spec.whatwg.org/#console-namespace\n    // For historical web-compatibility reasons\x2C the namespace object for\n    // console must have as its [[Prototype]] an empty object\x2C created as if\n    // by ObjectCreate(%ObjectPrototype%)\x2C instead of %ObjectPrototype%.\n    const console = ObjectCreate({}\x2C {\n      [SymbolToStringTag]: {\n        enumerable: false\x2C\n        writable: false\x2C\n        configurable: true\x2C\n        value: "console"\x2C\n      }\x2C\n    });\n    ObjectAssign(console\x2C this);\n    return console;\n  }\n\n  log = (...args) => {\n    this.#printFunc(\n      inspectArgs(args\x2C {\n        ...getDefaultInspectOptions()\x2C\n        indentLevel: this.indentLevel\x2C\n      }) + "\\n"\x2C\n      1\x2C\n    );\n  };\n\n  debug = (...args) => {\n    this.#printFunc(\n      inspectArgs(args\x2C {\n        ...getDefaultInspectOptions()\x2C\n        indentLevel: this.indentLevel\x2C\n      }) + "\\n"\x2C\n      0\x2C\n    );\n  };\n\n  info = (...args) => {\n    this.#printFunc(\n      inspectArgs(args\x2C {\n        ...getDefaultInspectOptions()\x2C\n        indentLevel: this.indentLevel\x2C\n      }) + "\\n"\x2C\n      1\x2C\n    );\n  };\n\n  dir = (obj = undefined\x2C options = {}) => {\n    this.#printFunc(\n      inspectArgs([obj]\x2C { ...getDefaultInspectOptions()\x2C ...options }) +\n        "\\n"\x2C\n      1\x2C\n    );\n  };\n\n  dirxml = this.dir;\n\n  warn = (...args) => {\n    this.#printFunc(\n      inspectArgs(args\x2C {\n        ...getDefaultInspectOptions()\x2C\n        indentLevel: this.indentLevel\x2C\n      }) + "\\n"\x2C\n      2\x2C\n    );\n  };\n\n  error = (...args) => {\n    this.#printFunc(\n      inspectArgs(args\x2C {\n        ...getDefaultInspectOptions()\x2C\n        indentLevel: this.indentLevel\x2C\n      }) + "\\n"\x2C\n      3\x2C\n    );\n  };\n\n  assert = (condition = false\x2C ...args) => {\n    if (condition) {\n      return;\n    }\n\n    if (args.length === 0) {\n      this.error("Assertion failed");\n      return;\n    }\n\n    const [first\x2C ...rest] = new SafeArrayIterator(args);\n\n    if (typeof first === "string") {\n      this.error(\n        `Assertion failed: ${first}`\x2C\n        ...new SafeArrayIterator(rest)\x2C\n      );\n      return;\n    }\n\n    this.error(`Assertion failed:`\x2C ...new SafeArrayIterator(args));\n  };\n\n  count = (label = "default") => {\n    label = String(label);\n\n    if (MapPrototypeHas(countMap\x2C label)) {\n      const current = MapPrototypeGet(countMap\x2C label) || 0;\n      MapPrototypeSet(countMap\x2C label\x2C current + 1);\n    } else {\n      MapPrototypeSet(countMap\x2C label\x2C 1);\n    }\n\n    this.info(`${label}: ${MapPrototypeGet(countMap\x2C label)}`);\n  };\n\n  countReset = (label = "default") => {\n    label = String(label);\n\n    if (MapPrototypeHas(countMap\x2C label)) {\n      MapPrototypeSet(countMap\x2C label\x2C 0);\n    } else {\n      this.warn(`Count for '${label}' does not exist`);\n    }\n  };\n\n  table = (data = undefined\x2C properties = undefined) => {\n    if (properties !== undefined && !ArrayIsArray(properties)) {\n      throw new Error(\n        "The 'properties' argument must be of type Array. " +\n          "Received type " + typeof properties\x2C\n      );\n    }\n\n    if (data === null || typeof data !== "object") {\n      return this.log(data);\n    }\n\n    const stringifyValue = (value) =>\n      inspectValueWithQuotes(value\x2C {\n        ...getDefaultInspectOptions()\x2C\n        depth: 1\x2C\n        compact: true\x2C\n      });\n    const toTable = (header\x2C body) => this.log(cliTable(header\x2C body));\n\n    let resultData;\n    const isSetObject = isSet(data);\n    const isMapObject = isMap(data);\n    const valuesKey = "Values";\n    const indexKey = isSetObject || isMapObject ? "(iter idx)" : "(idx)";\n\n    if (isSetObject) {\n      resultData = [...new SafeSetIterator(data)];\n    } else if (isMapObject) {\n      let idx = 0;\n      resultData = {};\n\n      MapPrototypeForEach(data\x2C (v\x2C k) => {\n        resultData[idx] = { Key: k\x2C Values: v };\n        idx++;\n      });\n    } else {\n      resultData = data;\n    }\n\n    const keys = ObjectKeys(resultData);\n    const numRows = keys.length;\n\n    const objectValues = properties\n      ? ObjectFromEntries(\n        ArrayPrototypeMap(\n          properties\x2C\n          (name) => [name\x2C ArrayPrototypeFill(new Array(numRows)\x2C "")]\x2C\n        )\x2C\n      )\n      : {};\n    const indexKeys = [];\n    const values = [];\n\n    let hasPrimitives = false;\n    ArrayPrototypeForEach(keys\x2C (k\x2C idx) => {\n      const value = resultData[k];\n      const primitive = value === null ||\n        (typeof value !== "function" && typeof value !== "object");\n      if (properties === undefined && primitive) {\n        hasPrimitives = true;\n        ArrayPrototypePush(values\x2C stringifyValue(value));\n      } else {\n        const valueObj = value || {};\n        const keys = properties || ObjectKeys(valueObj);\n        for (let i = 0; i < keys.length; ++i) {\n          const k = keys[i];\n          if (!primitive && ReflectHas(valueObj\x2C k)) {\n            if (!(ReflectHas(objectValues\x2C k))) {\n              objectValues[k] = ArrayPrototypeFill(new Array(numRows)\x2C "");\n            }\n            objectValues[k][idx] = stringifyValue(valueObj[k]);\n          }\n        }\n        ArrayPrototypePush(values\x2C "");\n      }\n\n      ArrayPrototypePush(indexKeys\x2C k);\n    });\n\n    const headerKeys = ObjectKeys(objectValues);\n    const bodyValues = ObjectValues(objectValues);\n    const headerProps = properties ||\n      [\n        ...new SafeArrayIterator(headerKeys)\x2C\n        !isMapObject && hasPrimitives && valuesKey\x2C\n      ];\n    const header = ArrayPrototypeFilter([\n      indexKey\x2C\n      ...new SafeArrayIterator(headerProps)\x2C\n    ]\x2C Boolean);\n    const body = [indexKeys\x2C ...new SafeArrayIterator(bodyValues)\x2C values];\n\n    toTable(header\x2C body);\n  };\n\n  time = (label = "default") => {\n    label = String(label);\n\n    if (MapPrototypeHas(timerMap\x2C label)) {\n      this.warn(`Timer '${label}' already exists`);\n      return;\n    }\n\n    MapPrototypeSet(timerMap\x2C label\x2C DateNow());\n  };\n\n  timeLog = (label = "default"\x2C ...args) => {\n    label = String(label);\n\n    if (!MapPrototypeHas(timerMap\x2C label)) {\n      this.warn(`Timer '${label}' does not exist`);\n      return;\n    }\n\n    const startTime = MapPrototypeGet(timerMap\x2C label);\n    const duration = DateNow() - startTime;\n\n    this.info(`${label}: ${duration}ms`\x2C ...new SafeArrayIterator(args));\n  };\n\n  timeEnd = (label = "default") => {\n    label = String(label);\n\n    if (!MapPrototypeHas(timerMap\x2C label)) {\n      this.warn(`Timer '${label}' does not exist`);\n      return;\n    }\n\n    const startTime = MapPrototypeGet(timerMap\x2C label);\n    MapPrototypeDelete(timerMap\x2C label);\n    const duration = DateNow() - startTime;\n\n    this.info(`${label}: ${duration}ms`);\n  };\n\n  group = (...label) => {\n    if (label.length > 0) {\n      this.log(...new SafeArrayIterator(label));\n    }\n    this.indentLevel += 2;\n  };\n\n  groupCollapsed = this.group;\n\n  groupEnd = () => {\n    if (this.indentLevel > 0) {\n      this.indentLevel -= 2;\n    }\n  };\n\n  clear = () => {\n    this.indentLevel = 0;\n    this.#printFunc(CSI.kClear\x2C 1);\n    this.#printFunc(CSI.kClearScreenDown\x2C 1);\n  };\n\n  trace = (...args) => {\n    const message = inspectArgs(\n      args\x2C\n      { ...getDefaultInspectOptions()\x2C indentLevel: 0 }\x2C\n    );\n    const err = {\n      name: "Trace"\x2C\n      message\x2C\n    };\n    ErrorCaptureStackTrace(err\x2C this.trace);\n    this.error(err.stack);\n  };\n\n  // These methods are noops\x2C but when the inspector is connected\x2C they\n  // call into V8.\n  profile = (_label) => {};\n  profileEnd = (_label) => {};\n  timeStamp = (_label) => {};\n\n  static [SymbolHasInstance](instance) {\n    return instance[isConsoleInstance];\n  }\n}\n\nconst customInspect = SymbolFor("Deno.customInspect");\n\nfunction inspect(\n  value\x2C\n  inspectOptions = {}\x2C\n) {\n  // Default options\n  const ctx = {\n    ...getDefaultInspectOptions()\x2C\n    ...inspectOptions\x2C\n  };\n  if (inspectOptions.iterableLimit !== undefined) {\n    ctx.maxArrayLength = inspectOptions.iterableLimit;\n  }\n  if (inspectOptions.strAbbreviateSize !== undefined) {\n    ctx.maxStringLength = inspectOptions.strAbbreviateSize;\n  }\n\n  if (ctx.colors) ctx.stylize = createStylizeWithColor(styles\x2C colors);\n  if (ctx.maxArrayLength === null) ctx.maxArrayLength = Infinity;\n  if (ctx.maxStringLength === null) ctx.maxStringLength = Infinity;\n  return formatValue(ctx\x2C value\x2C 0);\n}\n\n/** Creates a proxy that represents a subset of the properties\n * of the original object optionally without evaluating the properties\n * in order to get the values. */\nfunction createFilteredInspectProxy({ object\x2C keys\x2C evaluate }) {\n  const obj = class {};\n  if (object.constructor?.name) {\n    ObjectDefineProperty(obj\x2C "name"\x2C { value: object.constructor.name });\n  }\n\n  return new Proxy(new obj()\x2C {\n    get(_target\x2C key) {\n      if (key === SymbolToStringTag) {\n        return object.constructor?.name;\n      } else if (ArrayPrototypeIncludes(keys\x2C key)) {\n        return ReflectGet(object\x2C key);\n      } else {\n        return undefined;\n      }\n    }\x2C\n    getOwnPropertyDescriptor(_target\x2C key) {\n      if (!ArrayPrototypeIncludes(keys\x2C key)) {\n        return undefined;\n      } else if (evaluate) {\n        return getEvaluatedDescriptor(object\x2C key);\n      } else {\n        return getDescendantPropertyDescriptor(object\x2C key) ??\n          getEvaluatedDescriptor(object\x2C key);\n      }\n    }\x2C\n    has(_target\x2C key) {\n      return ArrayPrototypeIncludes(keys\x2C key);\n    }\x2C\n    ownKeys() {\n      return keys;\n    }\x2C\n  });\n\n  function getDescendantPropertyDescriptor(object\x2C key) {\n    let propertyDescriptor = ReflectGetOwnPropertyDescriptor(object\x2C key);\n    if (!propertyDescriptor) {\n      const prototype = ReflectGetPrototypeOf(object);\n      if (prototype) {\n        propertyDescriptor = getDescendantPropertyDescriptor(prototype\x2C key);\n      }\n    }\n    return propertyDescriptor;\n  }\n\n  function getEvaluatedDescriptor(object\x2C key) {\n    return {\n      configurable: true\x2C\n      enumerable: true\x2C\n      value: object[key]\x2C\n    };\n  }\n}\n\n// Expose these fields to internalObject for tests.\ninternals.Console = Console;\ninternals.cssToAnsi = cssToAnsi;\ninternals.inspectArgs = inspectArgs;\ninternals.parseCss = parseCss;\ninternals.parseCssColor = parseCssColor;\n\nexport {\n  colors\x2C\n  Console\x2C\n  createFilteredInspectProxy\x2C\n  createStylizeWithColor\x2C\n  CSI\x2C\n  customInspect\x2C\n  formatBigInt\x2C\n  formatNumber\x2C\n  formatValue\x2C\n  getDefaultInspectOptions\x2C\n  getNoColor\x2C\n  inspect\x2C\n  inspectArgs\x2C\n  quoteString\x2C\n  setNoColorFn\x2C\n  styles\x2C\n};\n
code-source-info,0x1123fa483eb8,9,93374,93550,C0O93374C3O93393C10O93398C14O93416C18O93447C22O93447C34O93501C42O93416C50O93523C57O93408C63O93549,,
tick,0x10572e340,93292,0,0x0,3,0x1123fa483e6b,0x1066beea4
tick,0x1056b81d8,93292,0,0x0,3,0x1123fa483e6b,0x1066beea4
tick,0x18514ae38,93292,0,0x0,3,0x1123fa483e6b,0x1066beea4
code-creation,JS,10,93292,0x1123fa483f38,76,getDefaultInspectOptions ext:deno_console/01_console.js:2337:34,0x288e0665fb80,~
code-source-info,0x1123fa483f38,9,71940,72155,C0O71961C4O71962C9O71979C16O72025C31O72064C41O72084C43O72092C47O72115C53O72123C59O72092C68O72133C75O72153,,
code-creation,JS,10,93333,0x1123fa483fc8,9,getNoColor ext:deno_console/01_console.js:165:20,0x288e0665f970,~
code-source-info,0x1123fa483fc8,9,3452,3478,C0O3459C5O3466C8O3476,,
code-creation,JS,10,93333,0x1123fa484018,22, ext:runtime_main/js/99_main.js:370:14,0xb845273660,~
code-source-info,0x1123fa484018,300,10143,10198,C0O10173C6O10149C11O10177C17O10177C21O10198,,
code-creation,JS,10,93375,0x1123fa484070,18,createStylizeWithColor ext:deno_console/01_console.js:3042:32,0x288e0665fc88,~
code-source-info,0x1123fa484070,9,92210,92517,C0O92210C13O92231C17O92515,,
code-creation,JS,10,93458,0x1123fa4840c8,801,inspectArgs ext:deno_console/01_console.js:2931:21,0x288e0665fc30,~
code-source-info,0x1123fa4840c
code-creation,JS,10,93542,0x1123fa484430,24, ext:runtime/98_global_scope_shared.js:132:25,0x1533a61d19c0,~
script-source,160,ext:runtime/98_global_scope_shared.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\nimport { core } from "ext:core/mod.js";\n\nimport * as event from "ext:deno_web/02_event.js";\nimport * as timers from "ext:deno_web/02_timers.js";\nimport * as base64 from "ext:deno_web/05_base64.js";\nimport * as encoding from "ext:deno_web/08_text_encoding.js";\nimport * as console from "ext:deno_console/01_console.js";\nimport * as caches from "ext:deno_cache/01_cache.js";\nimport * as compression from "ext:deno_web/14_compression.js";\nimport * as worker from "ext:runtime/11_workers.js";\nimport * as performance from "ext:deno_web/15_performance.js";\nimport * as crypto from "ext:deno_crypto/00_crypto.js";\nimport * as url from "ext:deno_url/00_url.js";\nimport * as urlPattern from "ext:deno_url/01_urlpattern.js";\nimport * as headers from "ext:deno_fetch/20_headers.js";\nimport * as streams from "ext:deno_web/06_streams.js";\nimport * as fileReader from "ext:deno_web/10_filereader.js";\nimport * as webSocket from "ext:deno_websocket/01_websocket.js";\nimport * as webSocketStream from "ext:deno_websocket/02_websocketstream.js";\nimport * as broadcastChannel from "ext:deno_broadcast_channel/01_broadcast_channel.js";\nimport * as file from "ext:deno_web/09_file.js";\nimport * as formData from "ext:deno_fetch/21_formdata.js";\nimport * as request from "ext:deno_fetch/23_request.js";\nimport * as response from "ext:deno_fetch/23_response.js";\nimport * as fetch from "ext:deno_fetch/26_fetch.js";\nimport * as eventSource from "ext:deno_fetch/27_eventsource.js";\nimport * as messagePort from "ext:deno_web/13_message_port.js";\nimport * as webidl from "ext:deno_webidl/00_webidl.js";\nimport { DOMException } from "ext:deno_web/01_dom_exception.js";\nimport * as abortSignal from "ext:deno_web/03_abort_signal.js";\nimport * as imageData from "ext:deno_web/16_image_data.js";\nimport { loadWebGPU } from "ext:deno_webgpu/00_init.js";\nimport * as webgpuSurface from "ext:deno_webgpu/02_surface.js";\nimport { unstableIds } from "ext:runtime/90_deno_ns.js";\n\nconst loadImage = core.createLazyLoader("ext:deno_canvas/01_image.js");\n\n// https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope\nconst windowOrWorkerGlobalScope = {\n  AbortController: core.propNonEnumerable(abortSignal.AbortController)\x2C\n  AbortSignal: core.propNonEnumerable(abortSignal.AbortSignal)\x2C\n  Blob: core.propNonEnumerable(file.Blob)\x2C\n  ByteLengthQueuingStrategy: core.propNonEnumerable(\n    streams.ByteLengthQueuingStrategy\x2C\n  )\x2C\n  CloseEvent: core.propNonEnumerable(event.CloseEvent)\x2C\n  CompressionStream: core.propNonEnumerable(compression.CompressionStream)\x2C\n  CountQueuingStrategy: core.propNonEnumerable(\n    streams.CountQueuingStrategy\x2C\n  )\x2C\n  CryptoKey: core.propNonEnumerable(crypto.CryptoKey)\x2C\n  CustomEvent: core.propNonEnumerable(event.CustomEvent)\x2C\n  DecompressionStream: core.propNonEnumerable(compression.DecompressionStream)\x2C\n  DOMException: core.propNonEnumerable(DOMException)\x2C\n  ErrorEvent: core.propNonEnumerable(event.ErrorEvent)\x2C\n  Event: core.propNonEnumerable(event.Event)\x2C\n  EventTarget: core.propNonEnumerable(event.EventTarget)\x2C\n  File: core.propNonEnumerable(file.File)\x2C\n  FileReader: core.propNonEnumerable(fileReader.FileReader)\x2C\n  FormData: core.propNonEnumerable(formData.FormData)\x2C\n  Headers: core.propNonEnumerable(headers.Headers)\x2C\n  ImageData: core.propNonEnumerable(imageData.ImageData)\x2C\n  ImageBitmap: core.propNonEnumerableLazyLoaded(\n    (image) => image.ImageBitmap\x2C\n    loadImage\x2C\n  )\x2C\n  MessageEvent: core.propNonEnumerable(event.MessageEvent)\x2C\n  Performance: core.propNonEnumerable(performance.Performance)\x2C\n  PerformanceEntry: core.propNonEnumerable(performance.PerformanceEntry)\x2C\n  PerformanceMark: core.propNonEnumerable(performance.PerformanceMark)\x2C\n  PerformanceMeasure: core.propNonEnumerable(performance.PerformanceMeasure)\x2C\n  PromiseRejectionEvent: core.propNonEnumerable(event.PromiseRejectionEvent)\x2C\n  ProgressEvent: core.propNonEnumerable(event.ProgressEvent)\x2C\n  ReadableStream: core.propNonEnumerable(streams.ReadableStream)\x2C\n  ReadableStreamDefaultReader: core.propNonEnumerable(\n    streams.ReadableStreamDefaultReader\x2C\n  )\x2C\n  Request: core.propNonEnumerable(request.Request)\x2C\n  Response: core.propNonEnumerable(response.Response)\x2C\n  TextDecoder: core.propNonEnumerable(encoding.TextDecoder)\x2C\n  TextEncoder: core.propNonEnumerable(encoding.TextEncoder)\x2C\n  TextDecoderStream: core.propNonEnumerable(encoding.TextDecoderStream)\x2C\n  TextEncoderStream: core.propNonEnumerable(encoding.TextEncoderStream)\x2C\n  TransformStream: core.propNonEnumerable(streams.TransformStream)\x2C\n  URL: core.propNonEnumerable(url.URL)\x2C\n  URLPattern: core.propNonEnumerable(urlPattern.URLPattern)\x2C\n  URLSearchParams: core.propNonEnumerable(url.URLSearchParams)\x2C\n  WebSocket: core.propNonEnumerable(webSocket.WebSocket)\x2C\n  MessageChannel: core.propNonEnumerable(messagePort.MessageChannel)\x2C\n  MessagePort: core.propNonEnumerable(messagePort.MessagePort)\x2C\n  Worker: core.propNonEnumerable(worker.Worker)\x2C\n  WritableStream: core.propNonEnumerable(streams.WritableStream)\x2C\n  WritableStreamDefaultWriter: core.propNonEnumerable(\n    streams.WritableStreamDefaultWriter\x2C\n  )\x2C\n  WritableStreamDefaultController: core.propNonEnumerable(\n    streams.WritableStreamDefaultController\x2C\n  )\x2C\n  ReadableByteStreamController: core.propNonEnumerable(\n    streams.ReadableByteStreamController\x2C\n  )\x2C\n  ReadableStreamBYOBReader: core.propNonEnumerable(\n    streams.ReadableStreamBYOBReader\x2C\n  )\x2C\n  ReadableStreamBYOBRequest: core.propNonEnumerable(\n    streams.ReadableStreamBYOBRequest\x2C\n  )\x2C\n  ReadableStreamDefaultController: core.propNonEnumerable(\n    streams.ReadableStreamDefaultController\x2C\n  )\x2C\n  TransformStreamDefaultController: core.propNonEnumerable(\n    streams.TransformStreamDefaultController\x2C\n  )\x2C\n  atob: core.propWritable(base64.atob)\x2C\n  btoa: core.propWritable(base64.btoa)\x2C\n  createImageBitmap: core.propWritableLazyLoaded(\n    (image) => image.createImageBitmap\x2C\n    loadImage\x2C\n  )\x2C\n  clearInterval: core.propWritable(timers.clearInterval)\x2C\n  clearTimeout: core.propWritable(timers.clearTimeout)\x2C\n  caches: {\n    enumerable: true\x2C\n    configurable: true\x2C\n    get: caches.cacheStorage\x2C\n  }\x2C\n  CacheStorage: core.propNonEnumerable(caches.CacheStorage)\x2C\n  Cache: core.propNonEnumerable(caches.Cache)\x2C\n  console: core.propNonEnumerable(\n    new console.Console((msg\x2C level) => core.print(msg\x2C level > 1))\x2C\n  )\x2C\n  crypto: core.propReadOnly(crypto.crypto)\x2C\n  Crypto: core.propNonEnumerable(crypto.Crypto)\x2C\n  SubtleCrypto: core.propNonEnumerable(crypto.SubtleCrypto)\x2C\n  fetch: core.propWritable(fetch.fetch)\x2C\n  EventSource: core.propWritable(eventSource.EventSource)\x2C\n  performance: core.propWritable(performance.performance)\x2C\n  reportError: core.propWritable(event.reportError)\x2C\n  setInterval: core.propWritable(timers.setInterval)\x2C\n  setTimeout: core.propWritable(timers.setTimeout)\x2C\n  structuredClone: core.propWritable(messagePort.structuredClone)\x2C\n  // Branding as a WebIDL object\n  [webidl.brand]: core.propNonEnumerable(webidl.brand)\x2C\n};\n\nconst unstableForWindowOrWorkerGlobalScope = {};\nunstableForWindowOrWorkerGlobalScope[unstableIds.broadcastChannel] = {\n  BroadcastChannel: core.propNonEnumerable(broadcastChannel.BroadcastChannel)\x2C\n};\nunstableForWindowOrWorkerGlobalScope[unstableIds.net] = {\n  WebSocketStream: core.propNonEnumerable(webSocketStream.WebSocketStream)\x2C\n};\n// deno-fmt-ignore\nunstableForWindowOrWorkerGlobalScope[unstableIds.webgpu] = {\n  GPU: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPU\x2C loadWebGPU)\x2C\n  GPUAdapter: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUAdapter\x2C loadWebGPU)\x2C\n  GPUAdapterInfo: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUAdapterInfo\x2C loadWebGPU)\x2C\n  GPUSupportedLimits: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUSupportedLimits\x2C loadWebGPU)\x2C\n  GPUSupportedFeatures: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUSupportedFeatures\x2C loadWebGPU)\x2C\n  GPUDeviceLostInfo: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUDeviceLostInfo\x2C loadWebGPU)\x2C\n  GPUDevice: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUDevice\x2C loadWebGPU)\x2C\n  GPUQueue: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUQueue\x2C loadWebGPU)\x2C\n  GPUBuffer: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUBuffer\x2C loadWebGPU)\x2C\n  GPUBufferUsage: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUBufferUsage\x2C loadWebGPU)\x2C\n  GPUMapMode: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUMapMode\x2C loadWebGPU)\x2C\n  GPUTextureUsage: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUTextureUsage\x2C loadWebGPU)\x2C\n  GPUTexture: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUTexture\x2C loadWebGPU)\x2C\n  GPUTextureView: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUTextureView\x2C loadWebGPU)\x2C\n  GPUSampler: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUSampler\x2C loadWebGPU)\x2C\n  GPUBindGroupLayout: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUBindGroupLayout\x2C loadWebGPU)\x2C\n  GPUPipelineLayout: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUPipelineLayout\x2C loadWebGPU)\x2C\n  GPUBindGroup: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUBindGroup\x2C loadWebGPU)\x2C\n  GPUShaderModule: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUShaderModule\x2C loadWebGPU)\x2C\n  GPUShaderStage: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUShaderStage\x2C loadWebGPU)\x2C\n  GPUComputePipeline: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUComputePipeline\x2C loadWebGPU)\x2C\n  GPURenderPipeline: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPURenderPipeline\x2C loadWebGPU)\x2C\n  GPUColorWrite: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUColorWrite\x2C loadWebGPU)\x2C\n  GPUCommandEncoder: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUCommandEncoder\x2C loadWebGPU)\x2C\n  GPURenderPassEncoder: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPURenderPassEncoder\x2C loadWebGPU)\x2C\n  GPUComputePassEncoder: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUComputePassEncoder\x2C loadWebGPU)\x2C\n  GPUCommandBuffer: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUCommandBuffer\x2C loadWebGPU)\x2C\n  GPURenderBundleEncoder: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPURenderBundleEncoder\x2C loadWebGPU)\x2C\n  GPURenderBundle: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPURenderBundle\x2C loadWebGPU)\x2C\n  GPUQuerySet: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUQuerySet\x2C loadWebGPU)\x2C\n  GPUError: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUError\x2C loadWebGPU)\x2C\n  GPUValidationError: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUValidationError\x2C loadWebGPU)\x2C\n  GPUOutOfMemoryError: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUOutOfMemoryError\x2C loadWebGPU)\x2C\n  GPUCanvasContext: core.propNonEnumerable(webgpuSurface.GPUCanvasContext)\x2C\n};\n\nexport { unstableForWindowOrWorkerGlobalScope\x2C windowOrWorkerGlobalScope };\n
code-source-info,0x1123fa484430,160,6345,6387,C0O6366C6O6366C13O6383C17O6366C23O6387,,
code-creation,JS,10,93875,0x1123fa484488,11,print ext:core/01_core.js:610:12,0x38e60b55d958,~
code-source-info,0x1123fa484488,5,15745,15781,C0O15761C5O15761C10O15781,,
code-creation,Script,10,94167,0x1123fa4844d8,25, [ext:cli/worker.rs:191:37]:1:1,0x91c84d6a8c8,~
script-source,303,[ext:cli/worker.rs:191:37],dispatchEvent(new Event('load'))
code-source-info,0x1123fa4844d8,303,0,32,C0O0C4O18C13O14C19O0C24O32,,
code-creation,JS,10,94208,0x1123fa484538,235,Event ext:deno_web/02_event.js:126:14,0x38e60b57ace8,~
code-source-info,0x1123fa484538,15,2999,3878,C0O2999C15O3102C19O3107C24O3126C28O3141C32O3146C36O3161C40O3174C44O3179C48O3201C52O3214C56O3219C60O3250C64O3263C68O3268C72O3288C76O3301C80O3306C84O3319C88O3332C92O3337C96O3349C100O3362C104O3367C109O3374C113O3385C118O3392C123O3427C134O3392C139O3492C144O3506C149O3517C163O3517C169O3609C173O3614C183O3637C187O3674C196O3717C205O3761C216O3816C219O3822C229O3627C234O3877,,
tick,0x105b242f4,94250,0,0x0,0,0x1123fa48455c,0x1123fa4844e5
code-creation,JS,10,94292,0x1123fa484668,87,requiredArguments ext:deno_webidl/00_webidl.js:694:27,0x38e60b56bb68,~
script-source,8,ext:deno_webidl/00_webidl.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\n// Adapted from https://github.com/jsdom/webidl-conversions.\n// Copyright Domenic Denicola. Licensed under BSD-2-Clause License.\n// Original license at https://github.com/jsdom/webidl-conversions/blob/master/LICENSE.md.\n\n/// <reference path="../../core/internal.d.ts" />\n\nimport { core\x2C primordials } from "ext:core/mod.js";\nconst {\n  isArrayBuffer\x2C\n  isDataView\x2C\n  isSharedArrayBuffer\x2C\n  isTypedArray\x2C\n} = core;\nconst {\n  ArrayBufferIsView\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSort\x2C\n  ArrayIteratorPrototype\x2C\n  BigInt\x2C\n  BigIntAsIntN\x2C\n  BigIntAsUintN\x2C\n  DataViewPrototypeGetBuffer\x2C\n  Float32Array\x2C\n  Float64Array\x2C\n  FunctionPrototypeBind\x2C\n  Int16Array\x2C\n  Int32Array\x2C\n  Int8Array\x2C\n  MathFloor\x2C\n  MathFround\x2C\n  MathMax\x2C\n  MathMin\x2C\n  MathPow\x2C\n  MathRound\x2C\n  MathTrunc\x2C\n  Number\x2C\n  NumberIsFinite\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectHasOwn\x2C\n  ObjectPrototypeIsPrototypeOf\x2C\n  ObjectIs\x2C\n  PromisePrototypeThen\x2C\n  PromiseReject\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  ReflectDefineProperty\x2C\n  ReflectGetOwnPropertyDescriptor\x2C\n  ReflectHas\x2C\n  ReflectOwnKeys\x2C\n  RegExpPrototypeTest\x2C\n  SafeRegExp\x2C\n  SafeSet\x2C\n  SetPrototypeEntries\x2C\n  SetPrototypeForEach\x2C\n  SetPrototypeKeys\x2C\n  SetPrototypeValues\x2C\n  SetPrototypeHas\x2C\n  SetPrototypeClear\x2C\n  SetPrototypeDelete\x2C\n  SetPrototypeAdd\x2C\n  // TODO(lucacasonato): add SharedArrayBuffer to primordials\n  // SharedArrayBufferPrototype\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeToWellFormed\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n  SymbolToStringTag\x2C\n  TypedArrayPrototypeGetBuffer\x2C\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\n  TypeError\x2C\n  Uint16Array\x2C\n  Uint32Array\x2C\n  Uint8Array\x2C\n  Uint8ClampedArray\x2C\n} = primordials;\n\nfunction makeException(ErrorType\x2C message\x2C prefix\x2C context) {\n  return new ErrorType(\n    `${prefix ? prefix + ": " : ""}${context ? context : "Value"} ${message}`\x2C\n  );\n}\n\nfunction toNumber(value) {\n  if (typeof value === "bigint") {\n    throw TypeError("Cannot convert a BigInt value to a number");\n  }\n  return Number(value);\n}\n\nfunction type(V) {\n  if (V === null) {\n    return "Null";\n  }\n  switch (typeof V) {\n    case "undefined":\n      return "Undefined";\n    case "boolean":\n      return "Boolean";\n    case "number":\n      return "Number";\n    case "string":\n      return "String";\n    case "symbol":\n      return "Symbol";\n    case "bigint":\n      return "BigInt";\n    case "object":\n    // Falls through\n    case "function":\n    // Falls through\n    default:\n      // Per ES spec\x2C typeof returns an implementation-defined value that is not any of the existing ones for\n      // uncallable non-standard exotic objects. Yet Type() which the Web IDL spec depends on returns Object for\n      // such cases. So treat the default case as an object.\n      return "Object";\n  }\n}\n\n// Round x to the nearest integer\x2C choosing the even integer if it lies halfway between two.\nfunction evenRound(x) {\n  // There are four cases for numbers with fractional part being .5:\n  //\n  // case |     x     | floor(x) | round(x) | expected | x <> 0 | x % 1 | x & 1 |   example\n  //   1  |  2n + 0.5 |  2n      |  2n + 1  |  2n      |   >    |  0.5  |   0   |  0.5 ->  0\n  //   2  |  2n + 1.5 |  2n + 1  |  2n + 2  |  2n + 2  |   >    |  0.5  |   1   |  1.5 ->  2\n  //   3  | -2n - 0.5 | -2n - 1  | -2n      | -2n      |   <    | -0.5  |   0   | -0.5 ->  0\n  //   4  | -2n - 1.5 | -2n - 2  | -2n - 1  | -2n - 2  |   <    | -0.5  |   1   | -1.5 -> -2\n  // (where n is a non-negative integer)\n  //\n  // Branch here for cases 1 and 4\n  if (\n    (x > 0 && x % 1 === +0.5 && (x & 1) === 0) ||\n    (x < 0 && x % 1 === -0.5 && (x & 1) === 1)\n  ) {\n    return censorNegativeZero(MathFloor(x));\n  }\n\n  return censorNegativeZero(MathRound(x));\n}\n\nfunction integerPart(n) {\n  return censorNegativeZero(MathTrunc(n));\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\nfunction modulo(x\x2C y) {\n  // https://tc39.github.io/ecma262/#eqn-modulo\n  // Note that http://stackoverflow.com/a/4467559/3191 does NOT work for large modulos\n  const signMightNotMatch = x % y;\n  if (sign(y) !== sign(signMightNotMatch)) {\n    return signMightNotMatch + y;\n  }\n  return signMightNotMatch;\n}\n\nfunction censorNegativeZero(x) {\n  return x === 0 ? 0 : x;\n}\n\nfunction createIntegerConversion(bitLength\x2C typeOpts) {\n  const isSigned = !typeOpts.unsigned;\n\n  let lowerBound;\n  let upperBound;\n  if (bitLength === 64) {\n    upperBound = NumberMAX_SAFE_INTEGER;\n    lowerBound = !isSigned ? 0 : NumberMIN_SAFE_INTEGER;\n  } else if (!isSigned) {\n    lowerBound = 0;\n    upperBound = MathPow(2\x2C bitLength) - 1;\n  } else {\n    lowerBound = -MathPow(2\x2C bitLength - 1);\n    upperBound = MathPow(2\x2C bitLength - 1) - 1;\n  }\n\n  const twoToTheBitLength = MathPow(2\x2C bitLength);\n  const twoToOneLessThanTheBitLength = MathPow(2\x2C bitLength - 1);\n\n  return (V\x2C prefix = undefined\x2C context = undefined\x2C opts = {}) => {\n    let x = toNumber(V);\n    x = censorNegativeZero(x);\n\n    if (opts.enforceRange) {\n      if (!NumberIsFinite(x)) {\n        throw makeException(\n          TypeError\x2C\n          "is not a finite number"\x2C\n          prefix\x2C\n          context\x2C\n        );\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError\x2C\n          `is outside the accepted range of ${lowerBound} to ${upperBound}\x2C inclusive`\x2C\n          prefix\x2C\n          context\x2C\n        );\n      }\n\n      return x;\n    }\n\n    if (!NumberIsNaN(x) && opts.clamp) {\n      x = MathMin(MathMax(x\x2C lowerBound)\x2C upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!NumberIsFinite(x) || x === 0) {\n      return 0;\n    }\n    x = integerPart(x);\n\n    // Math.pow(2\x2C 64) is not accurately representable in JavaScript\x2C so try to avoid these per-spec operations if\n    // possible. Hopefully it's an optimization for the non-64-bitLength cases too.\n    if (x >= lowerBound && x <= upperBound) {\n      return x;\n    }\n\n    // These will not work great for bitLength of 64\x2C but oh well. See the README for more details.\n    x = modulo(x\x2C twoToTheBitLength);\n    if (isSigned && x >= twoToOneLessThanTheBitLength) {\n      return x - twoToTheBitLength;\n    }\n    return x;\n  };\n}\n\nfunction createLongLongConversion(bitLength\x2C { unsigned }) {\n  const upperBound = NumberMAX_SAFE_INTEGER;\n  const lowerBound = unsigned ? 0 : NumberMIN_SAFE_INTEGER;\n  const asBigIntN = unsigned ? BigIntAsUintN : BigIntAsIntN;\n\n  return (V\x2C prefix = undefined\x2C context = undefined\x2C opts = {}) => {\n    let x = toNumber(V);\n    x = censorNegativeZero(x);\n\n    if (opts.enforceRange) {\n      if (!NumberIsFinite(x)) {\n        throw makeException(\n          TypeError\x2C\n          "is not a finite number"\x2C\n          prefix\x2C\n          context\x2C\n        );\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError\x2C\n          `is outside the accepted range of ${lowerBound} to ${upperBound}\x2C inclusive`\x2C\n          prefix\x2C\n          context\x2C\n        );\n      }\n\n      return x;\n    }\n\n    if (!NumberIsNaN(x) && opts.clamp) {\n      x = MathMin(MathMax(x\x2C lowerBound)\x2C upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!NumberIsFinite(x) || x === 0) {\n      return 0;\n    }\n\n    let xBigInt = BigInt(integerPart(x));\n    xBigInt = asBigIntN(bitLength\x2C xBigInt);\n    return Number(xBigInt);\n  };\n}\n\nconst converters = [];\n\nconverters.any = (V) => {\n  return V;\n};\n\nconverters.boolean = function (val) {\n  return !!val;\n};\n\nconverters.byte = createIntegerConversion(8\x2C { unsigned: false });\nconverters.octet = createIntegerConversion(8\x2C { unsigned: true });\n\nconverters.short = createIntegerConversion(16\x2C { unsigned: false });\nconverters["unsigned short"] = createIntegerConversion(16\x2C {\n  unsigned: true\x2C\n});\n\nconverters.long = createIntegerConversion(32\x2C { unsigned: false });\nconverters["unsigned long"] = createIntegerConversion(32\x2C { unsigned: true });\n\nconverters["long long"] = createLongLongConversion(64\x2C { unsigned: false });\nconverters["unsigned long long"] = createLongLongConversion(64\x2C {\n  unsigned: true\x2C\n});\n\nconverters.float = (V\x2C prefix\x2C context\x2C _opts) => {\n  const x = toNumber(V);\n\n  if (!NumberIsFinite(x)) {\n    throw makeException(\n      TypeError\x2C\n      "is not a finite floating-point value"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  if (ObjectIs(x\x2C -0)) {\n    return x;\n  }\n\n  const y = MathFround(x);\n\n  if (!NumberIsFinite(y)) {\n    throw makeException(\n      TypeError\x2C\n      "is outside the range of a single-precision floating-point value"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  return y;\n};\n\nconverters["unrestricted float"] = (V\x2C _prefix\x2C _context\x2C _opts) => {\n  const x = toNumber(V);\n\n  if (NumberIsNaN(x)) {\n    return x;\n  }\n\n  if (ObjectIs(x\x2C -0)) {\n    return x;\n  }\n\n  return MathFround(x);\n};\n\nconverters.double = (V\x2C prefix\x2C context\x2C _opts) => {\n  const x = toNumber(V);\n\n  if (!NumberIsFinite(x)) {\n    throw makeException(\n      TypeError\x2C\n      "is not a finite floating-point value"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  return x;\n};\n\nconverters["unrestricted double"] = (V\x2C _prefix\x2C _context\x2C _opts) => {\n  const x = toNumber(V);\n\n  return x;\n};\n\nconverters.DOMString = function (V\x2C prefix\x2C context\x2C opts = {}) {\n  if (typeof V === "string") {\n    return V;\n  } else if (V === null && opts.treatNullAsEmptyString) {\n    return "";\n  } else if (typeof V === "symbol") {\n    throw makeException(\n      TypeError\x2C\n      "is a symbol\x2C which cannot be converted to a string"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  return String(V);\n};\n\nfunction isByteString(input) {\n  for (let i = 0; i < input.length; i++) {\n    if (StringPrototypeCharCodeAt(input\x2C i) > 255) {\n      // If a character code is greater than 255\x2C it means the string is not a byte string.\n      return false;\n    }\n  }\n  return true;\n}\n\nconverters.ByteString = (V\x2C prefix\x2C context\x2C opts) => {\n  const x = converters.DOMString(V\x2C prefix\x2C context\x2C opts);\n  if (!isByteString(x)) {\n    throw makeException(\n      TypeError\x2C\n      "is not a valid ByteString"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n  return x;\n};\n\nconverters.USVString = (V\x2C prefix\x2C context\x2C opts) => {\n  const S = converters.DOMString(V\x2C prefix\x2C context\x2C opts);\n  return StringPrototypeToWellFormed(S);\n};\n\nconverters.object = (V\x2C prefix\x2C context\x2C _opts) => {\n  if (type(V) !== "Object") {\n    throw makeException(\n      TypeError\x2C\n      "is not an object"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  return V;\n};\n\n// Not exported\x2C but used in Function and VoidFunction.\n\n// Neither Function nor VoidFunction is defined with [TreatNonObjectAsNull]\x2C so\n// handling for that is omitted.\nfunction convertCallbackFunction(V\x2C prefix\x2C context\x2C _opts) {\n  if (typeof V !== "function") {\n    throw makeException(\n      TypeError\x2C\n      "is not a function"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n  return V;\n}\n\nconverters.ArrayBuffer = (\n  V\x2C\n  prefix = undefined\x2C\n  context = undefined\x2C\n  opts = {}\x2C\n) => {\n  if (!isArrayBuffer(V)) {\n    if (opts.allowShared && !isSharedArrayBuffer(V)) {\n      throw makeException(\n        TypeError\x2C\n        "is not an ArrayBuffer or SharedArrayBuffer"\x2C\n        prefix\x2C\n        context\x2C\n      );\n    }\n    throw makeException(\n      TypeError\x2C\n      "is not an ArrayBuffer"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  return V;\n};\n\nconverters.DataView = (\n  V\x2C\n  prefix = undefined\x2C\n  context = undefined\x2C\n  opts = {}\x2C\n) => {\n  if (!isDataView(V)) {\n    throw makeException(\n      TypeError\x2C\n      "is not a DataView"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  if (\n    !opts.allowShared &&\n    isSharedArrayBuffer(DataViewPrototypeGetBuffer(V))\n  ) {\n    throw makeException(\n      TypeError\x2C\n      "is backed by a SharedArrayBuffer\x2C which is not allowed"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  return V;\n};\n\nArrayPrototypeForEach(\n  [\n    Int8Array\x2C\n    Int16Array\x2C\n    Int32Array\x2C\n    Uint8Array\x2C\n    Uint16Array\x2C\n    Uint32Array\x2C\n    Uint8ClampedArray\x2C\n    Float32Array\x2C\n    Float64Array\x2C\n  ]\x2C\n  (func) => {\n    const name = func.name;\n    const article = RegExpPrototypeTest(new SafeRegExp(/^[AEIOU]/)\x2C name)\n      ? "an"\n      : "a";\n    converters[name] = (\n      V\x2C\n      prefix = undefined\x2C\n      context = undefined\x2C\n      opts = {}\x2C\n    ) => {\n      if (TypedArrayPrototypeGetSymbolToStringTag(V) !== name) {\n        throw makeException(\n          TypeError\x2C\n          `is not ${article} ${name} object`\x2C\n          prefix\x2C\n          context\x2C\n        );\n      }\n      if (\n        !opts.allowShared &&\n        isSharedArrayBuffer(TypedArrayPrototypeGetBuffer(V))\n      ) {\n        throw makeException(\n          TypeError\x2C\n          "is a view on a SharedArrayBuffer\x2C which is not allowed"\x2C\n          prefix\x2C\n          context\x2C\n        );\n      }\n\n      return V;\n    };\n  }\x2C\n);\n\n// Common definitions\n\nconverters.ArrayBufferView = (\n  V\x2C\n  prefix = undefined\x2C\n  context = undefined\x2C\n  opts = {}\x2C\n) => {\n  if (!ArrayBufferIsView(V)) {\n    throw makeException(\n      TypeError\x2C\n      "is not a view on an ArrayBuffer or SharedArrayBuffer"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n  let buffer;\n  if (isTypedArray(V)) {\n    buffer = TypedArrayPrototypeGetBuffer(V);\n  } else {\n    buffer = DataViewPrototypeGetBuffer(V);\n  }\n  if (!opts.allowShared && isSharedArrayBuffer(buffer)) {\n    throw makeException(\n      TypeError\x2C\n      "is a view on a SharedArrayBuffer\x2C which is not allowed"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  return V;\n};\n\nconverters.BufferSource = (\n  V\x2C\n  prefix = undefined\x2C\n  context = undefined\x2C\n  opts = {}\x2C\n) => {\n  if (ArrayBufferIsView(V)) {\n    let buffer;\n    if (isTypedArray(V)) {\n      buffer = TypedArrayPrototypeGetBuffer(V);\n    } else {\n      buffer = DataViewPrototypeGetBuffer(V);\n    }\n    if (!opts.allowShared && isSharedArrayBuffer(buffer)) {\n      throw makeException(\n        TypeError\x2C\n        "is a view on a SharedArrayBuffer\x2C which is not allowed"\x2C\n        prefix\x2C\n        context\x2C\n      );\n    }\n\n    return V;\n  }\n\n  if (!opts.allowShared && !isArrayBuffer(V)) {\n    throw makeException(\n      TypeError\x2C\n      "is not an ArrayBuffer or a view on one"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n  if (\n    opts.allowShared &&\n    !isSharedArrayBuffer(V) &&\n    !isArrayBuffer(V)\n  ) {\n    throw makeException(\n      TypeError\x2C\n      "is not an ArrayBuffer\x2C SharedArrayBuffer\x2C or a view on one"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  return V;\n};\n\nconverters.DOMTimeStamp = converters["unsigned long long"];\nconverters.DOMHighResTimeStamp = converters["double"];\n\nconverters.Function = convertCallbackFunction;\n\nconverters.VoidFunction = convertCallbackFunction;\n\nconverters["UVString?"] = createNullableConverter(\n  converters.USVString\x2C\n);\nconverters["sequence<double>"] = createSequenceConverter(\n  converters.double\x2C\n);\nconverters["sequence<object>"] = createSequenceConverter(\n  converters.object\x2C\n);\nconverters["Promise<undefined>"] = createPromiseConverter(() => undefined);\n\nconverters["sequence<ByteString>"] = createSequenceConverter(\n  converters.ByteString\x2C\n);\nconverters["sequence<sequence<ByteString>>"] = createSequenceConverter(\n  converters["sequence<ByteString>"]\x2C\n);\nconverters["record<ByteString\x2C ByteString>"] = createRecordConverter(\n  converters.ByteString\x2C\n  converters.ByteString\x2C\n);\n\nconverters["sequence<USVString>"] = createSequenceConverter(\n  converters.USVString\x2C\n);\nconverters["sequence<sequence<USVString>>"] = createSequenceConverter(\n  converters["sequence<USVString>"]\x2C\n);\nconverters["record<USVString\x2C USVString>"] = createRecordConverter(\n  converters.USVString\x2C\n  converters.USVString\x2C\n);\n\nconverters["sequence<DOMString>"] = createSequenceConverter(\n  converters.DOMString\x2C\n);\n\nfunction requiredArguments(length\x2C required\x2C prefix) {\n  if (length < required) {\n    const errMsg = `${prefix ? prefix + ": " : ""}${required} argument${\n      required === 1 ? "" : "s"\n    } required\x2C but only ${length} present.`;\n    throw new TypeError(errMsg);\n  }\n}\n\nfunction createDictionaryConverter(name\x2C ...dictionaries) {\n  let hasRequiredKey = false;\n  const allMembers = [];\n  for (let i = 0; i < dictionaries.length; ++i) {\n    const members = dictionaries[i];\n    for (let j = 0; j < members.length; ++j) {\n      const member = members[j];\n      if (member.required) {\n        hasRequiredKey = true;\n      }\n      ArrayPrototypePush(allMembers\x2C member);\n    }\n  }\n  ArrayPrototypeSort(allMembers\x2C (a\x2C b) => {\n    if (a.key == b.key) {\n      return 0;\n    }\n    return a.key < b.key ? -1 : 1;\n  });\n\n  const defaultValues = {};\n  for (let i = 0; i < allMembers.length; ++i) {\n    const member = allMembers[i];\n    if (ReflectHas(member\x2C "defaultValue")) {\n      const idlMemberValue = member.defaultValue;\n      const imvType = typeof idlMemberValue;\n      // Copy by value types can be directly assigned\x2C copy by reference types\n      // need to be re-created for each allocation.\n      if (\n        imvType === "number" || imvType === "boolean" ||\n        imvType === "string" || imvType === "bigint" ||\n        imvType === "undefined"\n      ) {\n        defaultValues[member.key] = member.converter(idlMemberValue\x2C {});\n      } else {\n        ObjectDefineProperty(defaultValues\x2C member.key\x2C {\n          get() {\n            return member.converter(idlMemberValue\x2C member.defaultValue);\n          }\x2C\n          enumerable: true\x2C\n        });\n      }\n    }\n  }\n\n  return function (V\x2C prefix = undefined\x2C context = undefined\x2C opts = {}) {\n    const typeV = type(V);\n    switch (typeV) {\n      case "Undefined":\n      case "Null":\n      case "Object":\n        break;\n      default:\n        throw makeException(\n          TypeError\x2C\n          "can not be converted to a dictionary"\x2C\n          prefix\x2C\n          context\x2C\n        );\n    }\n    const esDict = V;\n\n    const idlDict = ObjectAssign({}\x2C defaultValues);\n\n    // NOTE: fast path Null and Undefined.\n    if ((V === undefined || V === null) && !hasRequiredKey) {\n      return idlDict;\n    }\n\n    for (let i = 0; i < allMembers.length; ++i) {\n      const member = allMembers[i];\n      const key = member.key;\n\n      let esMemberValue;\n      if (typeV === "Undefined" || typeV === "Null") {\n        esMemberValue = undefined;\n      } else {\n        esMemberValue = esDict[key];\n      }\n\n      if (esMemberValue !== undefined) {\n        const memberContext = `'${key}' of '${name}'${\n          context ? ` (${context})` : ""\n        }`;\n        const converter = member.converter;\n        const idlMemberValue = converter(\n          esMemberValue\x2C\n          prefix\x2C\n          memberContext\x2C\n          opts\x2C\n        );\n        idlDict[key] = idlMemberValue;\n      } else if (member.required) {\n        throw makeException(\n          TypeError\x2C\n          `can not be converted to '${name}' because '${key}' is required in '${name}'.`\x2C\n          prefix\x2C\n          context\x2C\n        );\n      }\n    }\n\n    return idlDict;\n  };\n}\n\n// https://heycam.github.io/webidl/#es-enumeration\nfunction createEnumConverter(name\x2C values) {\n  const E = new SafeSet(values);\n\n  return function (V\x2C prefix = undefined\x2C _context = undefined\x2C _opts = {}) {\n    const S = String(V);\n\n    if (!E.has(S)) {\n      throw new TypeError(\n        `${\n          prefix ? prefix + ": " : ""\n        }The provided value '${S}' is not a valid enum value of type ${name}.`\x2C\n      );\n    }\n\n    return S;\n  };\n}\n\nfunction createNullableConverter(converter) {\n  return (V\x2C prefix = undefined\x2C context = undefined\x2C opts = {}) => {\n    // FIXME: If Type(V) is not Object\x2C and the conversion to an IDL value is\n    // being performed due to V being assigned to an attribute whose type is a\n    // nullable callback function that is annotated with\n    // [LegacyTreatNonObjectAsNull]\x2C then return the IDL nullable type T?\n    // value null.\n\n    if (V === null || V === undefined) return null;\n    return converter(V\x2C prefix\x2C context\x2C opts);\n  };\n}\n\n// https://heycam.github.io/webidl/#es-sequence\nfunction createSequenceConverter(converter) {\n  return function (V\x2C prefix = undefined\x2C context = undefined\x2C opts = {}) {\n    if (type(V) !== "Object") {\n      throw makeException(\n        TypeError\x2C\n        "can not be converted to sequence."\x2C\n        prefix\x2C\n        context\x2C\n      );\n    }\n    const iter = V?.[SymbolIterator]?.();\n    if (iter === undefined) {\n      throw makeException(\n        TypeError\x2C\n        "can not be converted to sequence."\x2C\n        prefix\x2C\n        context\x2C\n      );\n    }\n    const array = [];\n    while (true) {\n      const res = iter?.next?.();\n      if (res === undefined) {\n        throw makeException(\n          TypeError\x2C\n          "can not be converted to sequence."\x2C\n          prefix\x2C\n          context\x2C\n        );\n      }\n      if (res.done === true) break;\n      const val = converter(\n        res.value\x2C\n        prefix\x2C\n        `${context}\x2C index ${array.length}`\x2C\n        opts\x2C\n      );\n      ArrayPrototypePush(array\x2C val);\n    }\n    return array;\n  };\n}\n\nfunction createRecordConverter(keyConverter\x2C valueConverter) {\n  return (V\x2C prefix\x2C context\x2C opts) => {\n    if (type(V) !== "Object") {\n      throw makeException(\n        TypeError\x2C\n        "can not be converted to dictionary."\x2C\n        prefix\x2C\n        context\x2C\n      );\n    }\n    const result = {};\n    // Fast path for common case (not a Proxy)\n    if (!core.isProxy(V)) {\n      for (const key in V) {\n        if (!ObjectHasOwn(V\x2C key)) {\n          continue;\n        }\n        const typedKey = keyConverter(key\x2C prefix\x2C context\x2C opts);\n        const value = V[key];\n        const typedValue = valueConverter(value\x2C prefix\x2C context\x2C opts);\n        result[typedKey] = typedValue;\n      }\n      return result;\n    }\n    // Slow path if Proxy (e.g: in WPT tests)\n    const keys = ReflectOwnKeys(V);\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      const desc = ObjectGetOwnPropertyDescriptor(V\x2C key);\n      if (desc !== undefined && desc.enumerable === true) {\n        const typedKey = keyConverter(key\x2C prefix\x2C context\x2C opts);\n        const value = V[key];\n        const typedValue = valueConverter(value\x2C prefix\x2C context\x2C opts);\n        result[typedKey] = typedValue;\n      }\n    }\n    return result;\n  };\n}\n\nfunction createPromiseConverter(converter) {\n  return (V\x2C prefix\x2C context\x2C opts) =>\n    // should be able to handle thenables\n    // see: https://github.com/web-platform-tests/wpt/blob/a31d3ba53a79412793642366f3816c9a63f0cf57/streams/writable-streams/close.any.js#L207\n    typeof V?.then === "function"\n      ? PromisePrototypeThen(PromiseResolve(V)\x2C (V) =>\n        converter(V\x2C prefix\x2C context\x2C opts))\n      : PromiseResolve(converter(V\x2C prefix\x2C context\x2C opts));\n}\n\nfunction invokeCallbackFunction(\n  callable\x2C\n  args\x2C\n  thisArg\x2C\n  returnValueConverter\x2C\n  prefix\x2C\n  returnsPromise\x2C\n) {\n  try {\n    const rv = ReflectApply(callable\x2C thisArg\x2C args);\n    return returnValueConverter(rv\x2C prefix\x2C "return value");\n  } catch (err) {\n    if (returnsPromise === true) {\n      return PromiseReject(err);\n    }\n    throw err;\n  }\n}\n\nconst brand = Symbol("[[webidl.brand]]");\n\nfunction createInterfaceConverter(name\x2C prototype) {\n  return (V\x2C prefix\x2C context\x2C _opts) => {\n    if (!ObjectPrototypeIsPrototypeOf(prototype\x2C V) || V[brand] !== brand) {\n      throw makeException(\n        TypeError\x2C\n        `is not of type ${name}.`\x2C\n        prefix\x2C\n        context\x2C\n      );\n    }\n    return V;\n  };\n}\n\n// TODO(lucacasonato): have the user pass in the prototype\x2C and not the type.\nfunction createBranded(Type) {\n  const t = ObjectCreate(Type.prototype);\n  t[brand] = brand;\n  return t;\n}\n\nfunction assertBranded(self\x2C prototype) {\n  if (\n    !ObjectPrototypeIsPrototypeOf(prototype\x2C self) || self[brand] !== brand\n  ) {\n    throw new TypeError("Illegal invocation");\n  }\n}\n\nfunction illegalConstructor() {\n  throw new TypeError("Illegal constructor");\n}\n\nfunction define(target\x2C source) {\n  const keys = ReflectOwnKeys(source);\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    const descriptor = ReflectGetOwnPropertyDescriptor(source\x2C key);\n    if (descriptor && !ReflectDefineProperty(target\x2C key\x2C descriptor)) {\n      throw new TypeError(`Cannot redefine property: ${String(key)}`);\n    }\n  }\n}\n\nconst _iteratorInternal = Symbol("iterator internal");\n\nconst globalIteratorPrototype = ObjectGetPrototypeOf(ArrayIteratorPrototype);\n\nfunction mixinPairIterable(name\x2C prototype\x2C dataSymbol\x2C keyKey\x2C valueKey) {\n  const iteratorPrototype = ObjectCreate(globalIteratorPrototype\x2C {\n    [SymbolToStringTag]: { configurable: true\x2C value: `${name} Iterator` }\x2C\n  });\n  define(iteratorPrototype\x2C {\n    next() {\n      const internal = this && this[_iteratorInternal];\n      if (!internal) {\n        throw new TypeError(\n          `next() called on a value that is not a ${name} iterator object`\x2C\n        );\n      }\n      const { target\x2C kind\x2C index } = internal;\n      const values = target[dataSymbol];\n      const len = values.length;\n      if (index >= len) {\n        return { value: undefined\x2C done: true };\n      }\n      const pair = values[index];\n      internal.index = index + 1;\n      let result;\n      switch (kind) {\n        case "key":\n          result = pair[keyKey];\n          break;\n        case "value":\n          result = pair[valueKey];\n          break;\n        case "key+value":\n          result = [pair[keyKey]\x2C pair[valueKey]];\n          break;\n      }\n      return { value: result\x2C done: false };\n    }\x2C\n  });\n  function createDefaultIterator(target\x2C kind) {\n    const iterator = ObjectCreate(iteratorPrototype);\n    ObjectDefineProperty(iterator\x2C _iteratorInternal\x2C {\n      value: { target\x2C kind\x2C index: 0 }\x2C\n      configurable: true\x2C\n    });\n    return iterator;\n  }\n\n  function entries() {\n    assertBranded(this\x2C prototype.prototype);\n    return createDefaultIterator(this\x2C "key+value");\n  }\n\n  const properties = {\n    entries: {\n      value: entries\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n    }\x2C\n    [SymbolIterator]: {\n      value: entries\x2C\n      writable: true\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n    }\x2C\n    keys: {\n      value: function keys() {\n        assertBranded(this\x2C prototype.prototype);\n        return createDefaultIterator(this\x2C "key");\n      }\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n    }\x2C\n    values: {\n      value: function values() {\n        assertBranded(this\x2C prototype.prototype);\n        return createDefaultIterator(this\x2C "value");\n      }\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n    }\x2C\n    forEach: {\n      value: function forEach(idlCallback\x2C thisArg = undefined) {\n        assertBranded(this\x2C prototype.prototype);\n        const prefix = `Failed to execute 'forEach' on '${name}'`;\n        requiredArguments(arguments.length\x2C 1\x2C { prefix });\n        idlCallback = converters["Function"](idlCallback\x2C {\n          prefix\x2C\n          context: "Argument 1"\x2C\n        });\n        idlCallback = FunctionPrototypeBind(\n          idlCallback\x2C\n          thisArg ?? globalThis\x2C\n        );\n        const pairs = this[dataSymbol];\n        for (let i = 0; i < pairs.length; i++) {\n          const entry = pairs[i];\n          idlCallback(entry[valueKey]\x2C entry[keyKey]\x2C this);\n        }\n      }\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n    }\x2C\n  };\n  return ObjectDefineProperties(prototype.prototype\x2C properties);\n}\n\nfunction configureInterface(interface_) {\n  configureProperties(interface_);\n  configureProperties(interface_.prototype);\n  ObjectDefineProperty(interface_.prototype\x2C SymbolToStringTag\x2C {\n    value: interface_.name\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: false\x2C\n  });\n}\n\nfunction configureProperties(obj) {\n  const descriptors = ObjectGetOwnPropertyDescriptors(obj);\n  for (const key in descriptors) {\n    if (!ObjectHasOwn(descriptors\x2C key)) {\n      continue;\n    }\n    if (key === "constructor") continue;\n    if (key === "prototype") continue;\n    const descriptor = descriptors[key];\n    if (\n      ReflectHas(descriptor\x2C "value") &&\n      typeof descriptor.value === "function"\n    ) {\n      ObjectDefineProperty(obj\x2C key\x2C {\n        enumerable: true\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      });\n    } else if (ReflectHas(descriptor\x2C "get")) {\n      ObjectDefineProperty(obj\x2C key\x2C {\n        enumerable: true\x2C\n        configurable: true\x2C\n      });\n    }\n  }\n}\n\nconst setlikeInner = Symbol("[[set]]");\n\n// Ref: https://webidl.spec.whatwg.org/#es-setlike\nfunction setlike(obj\x2C objPrototype\x2C readonly) {\n  ObjectDefineProperties(obj\x2C {\n    size: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      get() {\n        assertBranded(this\x2C objPrototype);\n        return obj[setlikeInner].size;\n      }\x2C\n    }\x2C\n    [SymbolIterator]: {\n      configurable: true\x2C\n      enumerable: false\x2C\n      writable: true\x2C\n      value() {\n        assertBranded(this\x2C objPrototype);\n        return obj[setlikeInner][SymbolIterator]();\n      }\x2C\n    }\x2C\n    entries: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      writable: true\x2C\n      value() {\n        assertBranded(this\x2C objPrototype);\n        return SetPrototypeEntries(obj[setlikeInner]);\n      }\x2C\n    }\x2C\n    keys: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      writable: true\x2C\n      value() {\n        assertBranded(this\x2C objPrototype);\n        return SetPrototypeKeys(obj[setlikeInner]);\n      }\x2C\n    }\x2C\n    values: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      writable: true\x2C\n      value() {\n        assertBranded(this\x2C objPrototype);\n        return SetPrototypeValues(obj[setlikeInner]);\n      }\x2C\n    }\x2C\n    forEach: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      writable: true\x2C\n      value(callbackfn\x2C thisArg) {\n        assertBranded(this\x2C objPrototype);\n        return SetPrototypeForEach(obj[setlikeInner]\x2C callbackfn\x2C thisArg);\n      }\x2C\n    }\x2C\n    has: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      writable: true\x2C\n      value(value) {\n        assertBranded(this\x2C objPrototype);\n        return SetPrototypeHas(obj[setlikeInner]\x2C value);\n      }\x2C\n    }\x2C\n  });\n\n  if (!readonly) {\n    ObjectDefineProperties(obj\x2C {\n      add: {\n        configurable: true\x2C\n        enumerable: true\x2C\n        writable: true\x2C\n        value(value) {\n          assertBranded(this\x2C objPrototype);\n          return SetPrototypeAdd(obj[setlikeInner]\x2C value);\n        }\x2C\n      }\x2C\n      delete: {\n        configurable: true\x2C\n        enumerable: true\x2C\n        writable: true\x2C\n        value(value) {\n          assertBranded(this\x2C objPrototype);\n          return SetPrototypeDelete(obj[setlikeInner]\x2C value);\n        }\x2C\n      }\x2C\n      clear: {\n        configurable: true\x2C\n        enumerable: true\x2C\n        writable: true\x2C\n        value() {\n          assertBranded(this\x2C objPrototype);\n          return SetPrototypeClear(obj[setlikeInner]);\n        }\x2C\n      }\x2C\n    });\n  }\n}\n\nexport {\n  assertBranded\x2C\n  brand\x2C\n  configureInterface\x2C\n  converters\x2C\n  createBranded\x2C\n  createDictionaryConverter\x2C\n  createEnumConverter\x2C\n  createInterfaceConverter\x2C\n  createNullableConverter\x2C\n  createPromiseConverter\x2C\n  createRecordConverter\x2C\n  createSequenceConverter\x2C\n  illegalConstructor\x2C\n  invokeCallbackFunction\x2C\n  makeException\x2C\n  mixinPairIterable\x2C\n  requiredArguments\x2C\n  setlike\x2C\n  setlikeInner\x2C\n  type\x2C\n};\n
code-source-info,0x1123fa484668,8,15955,16200,C0O15986C2O15997C7O16030C13O16049C24O16063C37O16099C61O16143C72O16166C79O16172C84O16166C86O16199,,
code-creation,JS,10,95333,0x1123fa484700,2,get NONE ext:deno_web/02_event.js:312:18,0x38e60b57b230,~
code-source-info,0x1123fa484700,15,7351,7373,C0O7360C1O7369,,
code-creation,JS,10,95375,0x1123fa484748,212,dispatchEvent ext:deno_web/02_event.js:1007:16,0x38e60b57c008,~
code-source-info,0x1123fa484748,15,23292,24592,C0O23292C2O23556C10O23564C13O23581C16O23588C23O23608C26O23588C32O23635C35O23642C40O23677C51O23642C56O24061C63O24066C70O24091C72O24087C77O24112C84O24124C90O24124C96O24162C100O24203C102O24208C104O24207C108O24189C113O24251C117O24244C122O24266C126O24266C131O24296C132O24308C133O24320C136O24324C142O24354C156O24360C161O24354C162O24444C167O24459C173O24465C177O24455C182O24479C196O24485C201O24479C202O24559C206O24566C211O24588,,
code-creation,JS,10,95417,0x1123fa484860,15,get type ext:deno_web/02_event.js:171:11,0x38e60b57ad98,~
code-source-info,0x1123fa484860,15,4178,4221,C0O4187C4O4199C6O4198C10O4212C14O4217,,
code-creation,JS,10,95417,0x1123fa4848b0,16,setTarget ext:deno_web/02_event.js:97:19,0x38e60b579d58,~
code-source-info,0x1123fa4848b0,15,2245,2300,C0O2264C2O2270C4O2269C10O2290C15O2299,,
tick,0x1046d80bc,95500,0,0x0,6
code-creation,JS,10,95625,0x1123fa484900,330,eventLoopTick ext:core/01_core.js:140:25,0x38e60b55c178,~
code-source-info,0x1123fa484900,5,3481,5205,C0O3481C2O3544C4O3561C8O3568C11O3549C16O3607C18O3616C22O3639C24O3651C27O3648C31O3663C36O3663C41O3575C47O3531C51O3788C55O3795C58O3777C63O3822C65O3827C67O3829C70O3847C74O3827C79O3870C84O3887C88O3890C92O3856C97O3809C103O3921C108O3921C111O4004C113O4009C115O4011C118O4030C122O4009C127O4062C132O4080C136O4126C140O4270C142O4305C144O4331C149O4331C152O4464C157O4494C159O4091C163O4039C168O3991C172O4565C176O4572C179O4554C183O4582C185O4615C187O4629C191O4620C196O4655C198O4674C204O4666C210O4687C212O4696C215O4693C219O4700C223O4639C229O4602C233O4718C237O4729C243O4856C247O4863C250O4845C254O4873C256O4910C258O4928C262O4915C267O4970C274O5024C280O5052C283O5049C288O4970C294O5077C296O5115C298O5128C301O5125C305O5144C313O5144C318O4938C324O4897C329O5204,,
code-creation,JS,10,95750,0x1123fa484a90,95,handleTimerMacrotask ext:deno_web/02_timers.js:56:30,0xfc54f84dc0,~
script-source,17,ext:deno_web/02_timers.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\nimport { core\x2C primordials } from "ext:core/mod.js";\nimport {\n  op_now\x2C\n  op_sleep\x2C\n  op_timer_handle\x2C\n  op_void_async_deferred\x2C\n} from "ext:core/ops";\nconst {\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  FunctionPrototypeCall\x2C\n  MapPrototypeDelete\x2C\n  MapPrototypeGet\x2C\n  MapPrototypeHas\x2C\n  MapPrototypeSet\x2C\n  Uint8Array\x2C\n  Uint32Array\x2C\n  PromisePrototypeThen\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  TypedArrayPrototypeGetBuffer\x2C\n  TypeError\x2C\n  indirectEval\x2C\n} = primordials;\n\nimport * as webidl from "ext:deno_webidl/00_webidl.js";\nimport { reportException } from "ext:deno_web/02_event.js";\nimport { assert } from "ext:deno_web/00_infra.js";\n\nconst hrU8 = new Uint8Array(8);\nconst hr = new Uint32Array(TypedArrayPrototypeGetBuffer(hrU8));\nfunction opNow() {\n  op_now(hrU8);\n  return (hr[0] * 1000 + hr[1] / 1e6);\n}\n\n// ---------------------------------------------------------------------------\n\n/**\n * The task queue corresponding to the timer task source.\n *\n * @type { {action: () => void\x2C nestingLevel: number}[] }\n */\nconst timerTasks = [];\n\n/**\n * The current task's timer nesting level\x2C or zero if we're not currently\n * running a timer task (since the minimum nesting level is 1).\n *\n * @type {number}\n */\nlet timerNestingLevel = 0;\n\nfunction handleTimerMacrotask() {\n  // We have no work to do\x2C tell the runtime that we don't\n  // need to perform microtask checkpoint.\n  if (timerTasks.length === 0) {\n    return undefined;\n  }\n\n  const task = ArrayPrototypeShift(timerTasks);\n\n  timerNestingLevel = task.nestingLevel;\n\n  try {\n    task.action();\n  } finally {\n    timerNestingLevel = 0;\n  }\n  return timerTasks.length === 0;\n}\n\n// ---------------------------------------------------------------------------\n\n/**\n * The keys in this map correspond to the key ID's in the spec's map of active\n * timers. The values are the timeout's cancel rid.\n *\n * @type {Map<number\x2C { cancelRid: number\x2C isRef: boolean\x2C promise: Promise<void> }>}\n */\nconst activeTimers = new SafeMap();\n\nlet nextId = 1;\n\n/**\n * @param {Function | string} callback\n * @param {number} timeout\n * @param {Array<any>} args\n * @param {boolean} repeat\n * @param {number | undefined} prevId\n * @returns {number} The timer ID\n */\nfunction initializeTimer(\n  callback\x2C\n  timeout\x2C\n  args\x2C\n  repeat\x2C\n  prevId\x2C\n  // TODO(bartlomieju): remove this option\x2C once `nextTick` and `setImmediate`\n  // in Node compat are cleaned up\n  respectNesting = true\x2C\n) {\n  // 2. If previousId was given\x2C let id be previousId; otherwise\x2C let\n  // previousId be an implementation-defined integer than is greater than zero\n  // and does not already exist in global's map of active timers.\n  let id;\n  let timerInfo;\n  if (prevId !== undefined) {\n    // `prevId` is only passed for follow-up calls on intervals\n    assert(repeat);\n    id = prevId;\n    timerInfo = MapPrototypeGet(activeTimers\x2C id);\n  } else {\n    // TODO(@andreubotella): Deal with overflow.\n    // https://github.com/whatwg/html/issues/7358\n    id = nextId++;\n    const cancelRid = op_timer_handle();\n    timerInfo = { cancelRid\x2C isRef: true\x2C promise: null };\n\n    // Step 4 in "run steps after a timeout".\n    MapPrototypeSet(activeTimers\x2C id\x2C timerInfo);\n  }\n\n  // 3. If the surrounding agent's event loop's currently running task is a\n  // task that was created by this algorithm\x2C then let nesting level be the\n  // task's timer nesting level. Otherwise\x2C let nesting level be zero.\n  // 4. If timeout is less than 0\x2C then set timeout to 0.\n  // 5. If nesting level is greater than 5\x2C and timeout is less than 4\x2C then\n  // set timeout to 4.\n  //\n  // The nesting level of 5 and minimum of 4 ms are spec-mandated magic\n  // constants.\n  if (timeout < 0) timeout = 0;\n  if (timerNestingLevel > 5 && timeout < 4 && respectNesting) timeout = 4;\n\n  // 9. Let task be a task that runs the following steps:\n  const task = {\n    action: () => {\n      // 1. If id does not exist in global's map of active timers\x2C then abort\n      // these steps.\n      //\n      // This is relevant if the timer has been canceled after the sleep op\n      // resolves but before this task runs.\n      if (!MapPrototypeHas(activeTimers\x2C id)) {\n        return;\n      }\n\n      // 2.\n      // 3.\n      if (typeof callback === "function") {\n        try {\n          FunctionPrototypeCall(\n            callback\x2C\n            globalThis\x2C\n            ...new SafeArrayIterator(args)\x2C\n          );\n        } catch (error) {\n          reportException(error);\n        }\n      } else {\n        indirectEval(callback);\n      }\n\n      if (repeat) {\n        if (MapPrototypeHas(activeTimers\x2C id)) {\n          // 4. If id does not exist in global's map of active timers\x2C then\n          // abort these steps.\n          // NOTE: If might have been removed via the author code in handler\n          // calling clearTimeout() or clearInterval().\n          // 5. If repeat is true\x2C then perform the timer initialization steps\n          // again\x2C given global\x2C handler\x2C timeout\x2C arguments\x2C true\x2C and id.\n          initializeTimer(callback\x2C timeout\x2C args\x2C true\x2C id);\n        }\n      } else {\n        // 6. Otherwise\x2C remove global's map of active timers[id].\n        core.tryClose(timerInfo.cancelRid);\n        MapPrototypeDelete(activeTimers\x2C id);\n      }\n    }\x2C\n\n    // 10. Increment nesting level by one.\n    // 11. Set task's timer nesting level to nesting level.\n    nestingLevel: timerNestingLevel + 1\x2C\n  };\n\n  // 12. Let completionStep be an algorithm step which queues a global task on\n  // the timer task source given global to run task.\n  // 13. Run steps after a timeout given global\x2C "setTimeout/setInterval"\x2C\n  // timeout\x2C completionStep\x2C and id.\n  runAfterTimeout(\n    task\x2C\n    timeout\x2C\n    timerInfo\x2C\n  );\n\n  return id;\n}\n\n// ---------------------------------------------------------------------------\n\n/**\n * @typedef ScheduledTimer\n * @property {number} millis\n * @property { {action: () => void\x2C nestingLevel: number}[] } task\n * @property {boolean} resolved\n * @property {ScheduledTimer | null} prev\n * @property {ScheduledTimer | null} next\n */\n\n/**\n * A doubly linked list of timers.\n * @type { { head: ScheduledTimer | null\x2C tail: ScheduledTimer | null } }\n */\nconst scheduledTimers = { head: null\x2C tail: null };\n\n/**\n * @param { {action: () => void\x2C nestingLevel: number}[] } task Will be run\n * after the timeout\x2C if it hasn't been cancelled.\n * @param {number} millis\n * @param {{ cancelRid: number\x2C isRef: boolean\x2C promise: Promise<void> }} timerInfo\n */\nfunction runAfterTimeout(task\x2C millis\x2C timerInfo) {\n  const cancelRid = timerInfo.cancelRid;\n  let sleepPromise;\n  // If this timeout is scheduled for 0ms it means we want it to run at the\n  // end of the event loop turn. There's no point in setting up a Tokio timer\x2C\n  // since its lowest resolution is 1ms. Firing of a "void async" op is better\n  // in this case\x2C because the timer will take closer to 0ms instead of >1ms.\n  if (millis === 0) {\n    sleepPromise = op_void_async_deferred();\n  } else {\n    sleepPromise = op_sleep(millis\x2C cancelRid);\n  }\n  timerInfo.promise = sleepPromise;\n  if (!timerInfo.isRef) {\n    core.unrefOpPromise(timerInfo.promise);\n  }\n\n  /** @type {ScheduledTimer} */\n  const timerObject = {\n    millis\x2C\n    resolved: false\x2C\n    prev: scheduledTimers.tail\x2C\n    next: null\x2C\n    task\x2C\n  };\n\n  // Add timerObject to the end of the list.\n  if (scheduledTimers.tail === null) {\n    assert(scheduledTimers.head === null);\n    scheduledTimers.head = scheduledTimers.tail = timerObject;\n  } else {\n    scheduledTimers.tail.next = timerObject;\n    scheduledTimers.tail = timerObject;\n  }\n\n  // 1.\n  PromisePrototypeThen(\n    sleepPromise\x2C\n    (cancelled) => {\n      if (timerObject.resolved) {\n        return;\n      }\n\n      // "op_void_async_deferred" returns null\n      if (cancelled !== null && !cancelled) {\n        // The timer was cancelled.\n        removeFromScheduledTimers(timerObject);\n        return;\n      }\n      // 2. Wait until any invocations of this algorithm that had the same\n      // global and orderingIdentifier\x2C that started before this one\x2C and\n      // whose milliseconds is equal to or less than this one's\x2C have\n      // completed.\n      // 4. Perform completionSteps.\n\n      // IMPORTANT: Since the sleep ops aren't guaranteed to resolve in the\n      // right order\x2C whenever one resolves\x2C we run through the scheduled\n      // timers list (which is in the order in which they were scheduled)\x2C and\n      // we call the callback for every timer which both:\n      //   a) has resolved\x2C and\n      //   b) its timeout is lower than the lowest unresolved timeout found so\n      //      far in the list.\n\n      let currentEntry = scheduledTimers.head;\n      while (currentEntry !== null) {\n        if (currentEntry.millis <= timerObject.millis) {\n          currentEntry.resolved = true;\n          ArrayPrototypePush(timerTasks\x2C currentEntry.task);\n          removeFromScheduledTimers(currentEntry);\n\n          if (currentEntry === timerObject) {\n            break;\n          }\n        }\n\n        currentEntry = currentEntry.next;\n      }\n    }\x2C\n  );\n}\n\n/** @param {ScheduledTimer} timerObj */\nfunction removeFromScheduledTimers(timerObj) {\n  if (timerObj.prev !== null) {\n    timerObj.prev.next = timerObj.next;\n  } else {\n    assert(scheduledTimers.head === timerObj);\n    scheduledTimers.head = timerObj.next;\n  }\n  if (timerObj.next !== null) {\n    timerObj.next.prev = timerObj.prev;\n  } else {\n    assert(scheduledTimers.tail === timerObj);\n    scheduledTimers.tail = timerObj.prev;\n  }\n}\n\n// ---------------------------------------------------------------------------\n\nfunction checkThis(thisArg) {\n  if (thisArg !== null && thisArg !== undefined && thisArg !== globalThis) {\n    throw new TypeError("Illegal invocation");\n  }\n}\n\nfunction setTimeout(callback\x2C timeout = 0\x2C ...args) {\n  checkThis(this);\n  if (typeof callback !== "function") {\n    callback = webidl.converters.DOMString(callback);\n  }\n  timeout = webidl.converters.long(timeout);\n\n  return initializeTimer(callback\x2C timeout\x2C args\x2C false);\n}\n\nfunction setInterval(callback\x2C timeout = 0\x2C ...args) {\n  checkThis(this);\n  if (typeof callback !== "function") {\n    callback = webidl.converters.DOMString(callback);\n  }\n  timeout = webidl.converters.long(timeout);\n\n  return initializeTimer(callback\x2C timeout\x2C args\x2C true);\n}\n\n// TODO(bartlomieju): remove this option\x2C once `nextTick` and `setImmediate`\n// in Node compat are cleaned up\nfunction setTimeoutUnclamped(callback\x2C timeout = 0\x2C ...args) {\n  checkThis(this);\n  if (typeof callback !== "function") {\n    callback = webidl.converters.DOMString(callback);\n  }\n  timeout = webidl.converters.long(timeout);\n\n  return initializeTimer(callback\x2C timeout\x2C args\x2C false\x2C undefined\x2C false);\n}\n\nfunction clearTimeout(id = 0) {\n  checkThis(this);\n  id = webidl.converters.long(id);\n  const timerInfo = MapPrototypeGet(activeTimers\x2C id);\n  if (timerInfo !== undefined) {\n    core.tryClose(timerInfo.cancelRid);\n    MapPrototypeDelete(activeTimers\x2C id);\n  }\n}\n\nfunction clearInterval(id = 0) {\n  checkThis(this);\n  clearTimeout(id);\n}\n\nfunction refTimer(id) {\n  const timerInfo = MapPrototypeGet(activeTimers\x2C id);\n  if (timerInfo === undefined || timerInfo.isRef) {\n    return;\n  }\n  timerInfo.isRef = true;\n  core.refOpPromise(timerInfo.promise);\n}\n\nfunction unrefTimer(id) {\n  const timerInfo = MapPrototypeGet(activeTimers\x2C id);\n  if (timerInfo === undefined || !timerInfo.isRef) {\n    return;\n  }\n  timerInfo.isRef = false;\n  core.unrefOpPromise(timerInfo.promise);\n}\n\n// Defer to avoid starving the event loop. Not using queueMicrotask()\n// for that reason: it lets promises make forward progress but can\n// still starve other parts of the event loop.\nfunction defer(go) {\n  PromisePrototypeThen(op_void_async_deferred()\x2C () => go());\n}\n\nexport {\n  clearInterval\x2C\n  clearTimeout\x2C\n  defer\x2C\n  handleTimerMacrotask\x2C\n  opNow\x2C\n  refTimer\x2C\n  setInterval\x2C\n  setTimeout\x2C\n  setTimeoutUnclamped\x2C\n  unrefTimer\x2C\n};\n
code-source-info,0x1123fa484a90,17,1345,1710,C0O1454C5O1469C11O1476C16O1489C17O1506C18O1527C26O1527C31O1588C38O1581C47O1620C52O1620C68O1648C69O1666C82O1677C85O1695C91O1702C94O1708,,
code-creation,JS,10,96167,0x1123fa484b30,41,runNextTicks ext:deno_node/_next_tick.ts:61:29,0x1533a61e27c8,~
code-source-info,0x1123fa484b30,166,2170,2521,C0O2395C6O2405C11O2405C17O2431C21O2436C26O2436C30O2457C31O2469C32O2476C36O2476C39O2507C40O2519,,
code-creation,JS,10,96167,0x1123fa484ba0,9,hasTickScheduled ext:core/01_core.js:625:23,0x38e60b55dce0,~
code-source-info,0x1123fa484ba0,5,16298,16327,C0O16304C5O16304C8O16327,,
code-creation,JS,10,96167,0x1123fa484bf0,9,runMicrotasks ext:core/01_core.js:624:20,0x38e60b55dc48,~
code-source-info,0x1123fa484bf0,5,16249,16274,C0O16255C5O16255C8O16274,,
code-creation,Script,10,96208,0x1123fa484c40,30, [ext:cli/worker.rs:224:38]:1:1,0x91c84d6f320,~
script-source,304,[ext:cli/worker.rs:224:38],dispatchEvent(new Event('beforeunload'\x2C { cancelable: true }));
code-source-info,0x1123fa484c40,304,0,63,C0O0C4O18C18O14C24O0C29O63,,
code-creation,Script,10,96208,0x1123fa484ca0,25, [ext:cli/worker.rs:230:39]:1:1,0x91c84d6f5f0,~
script-source,305,[ext:cli/worker.rs:230:39],dispatchEvent(new Event('unload'))
code-source-info,0x1123fa484ca0,305,0,34,C0O0C4O18C13O14C19O0C24O34,,
tick,0x1049bf158,96750,0,0x0,6
profiler,end
delete,MemoryChunk,0x147812f40000
delete,MemoryChunk,0x298909540000
delete,MemoryChunk,0x21d50bd80000
delete,MemoryChunk,0x171e55c80000
delete,MemoryChunk,0x38e60b540000
delete,MemoryChunk,0x288e06640000
delete,MemoryChunk,0xfc54f80000
delete,MemoryChunk,0x3fd3d01c0000
delete,MemoryChunk,0x1a64c17c0000
delete,MemoryChunk,0x9cf11a80000
delete,MemoryChunk,0xfd4e11c0000
delete,MemoryChunk,0x3743c7e80000
delete,MemoryChunk,0x31a67d740000
delete,MemoryChunk,0xcb077140000
delete,MemoryChunk,0x2136e0d40000
delete,MemoryChunk,0xb815c240000
delete,MemoryChunk,0x1533a61c0000
delete,MemoryChunk,0x15a2a1400000
delete,MemoryChunk,0x1e3fa0400000
delete,MemoryChunk,0x3bd2e7800000
delete,MemoryChunk,0xb845240000
delete,MemoryChunk,0x1d13e940000
delete,MemoryChunk,0x1c5dbe1c0000
delete,MemoryChunk,0xd68380c0000
delete,MemoryChunk,0x43357680000
delete,MemoryChunk,0x143014680000
delete,MemoryChunk,0x1e25b3600000
delete,MemoryChunk,0x38df7fd40000
delete,MemoryChunk,0x3cd278cc0000
delete,MemoryChunk,0x30218dac0000
delete,MemoryChunk,0x13527d0c0000
delete,MemoryChunk,0x10601c200000
delete,MemoryChunk,0xc59e4b80000
delete,MemoryChunk,0x5e7d3080000
delete,MemoryChunk,0x91c84d40000
delete,MemoryChunk,0x40f46380000
delete,MemoryChunk,0x1123fa480000
delete,LargeObjectChunk,0x360c06600000
delete,MemoryChunk,0x360c06600000
delete,LargeObjectChunk,0x1e36f12c0000
delete,MemoryChunk,0x1e36f12c0000
delete,LargeObjectChunk,0x249fd9400000
delete,MemoryChunk,0x249fd9400000
delete,MemoryChunk,0x2b755a400000
delete,MemoryChunk,0x2baae08c0000
delete,MemoryChunk,0x397199600000
delete,MemoryChunk,0x3d0870640000
